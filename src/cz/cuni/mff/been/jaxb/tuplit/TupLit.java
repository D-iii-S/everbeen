//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-147 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.07.05 at 10:17:25 AM CEST 
//


package cz.cuni.mff.been.jaxb.tuplit;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import cz.cuni.mff.been.jaxb.AbstractSerializable;


/**
 * <p>Java class for tuplit element declaration.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;element name="tuplit">
 *   &lt;complexType>
 *     &lt;complexContent>
 *       &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *         &lt;choice>
 *           &lt;group ref="{http://been.mff.cuni.cz/resultsrepositoryng/tuplit}valuesGroup"/>
 *           &lt;sequence>
 *             &lt;element ref="{http://been.mff.cuni.cz/resultsrepositoryng/tuplit}row" maxOccurs="unbounded" minOccurs="0"/>
 *           &lt;/sequence>
 *         &lt;/choice>
 *       &lt;/restriction>
 *     &lt;/complexContent>
 *   &lt;/complexType>
 * &lt;/element>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "items",
    "row"
})
@XmlRootElement(name = "tuplit")
public class TupLit
    extends AbstractSerializable
    implements Serializable
{

    private final static long serialVersionUID = -9223372036854775808L;
    @XmlElementRefs({
        @XmlElementRef(name = "float", namespace = "http://been.mff.cuni.cz/resultsrepositoryng/tuplit", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "serializable", namespace = "http://been.mff.cuni.cz/resultsrepositoryng/tuplit", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "binary", namespace = "http://been.mff.cuni.cz/resultsrepositoryng/tuplit", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "string", namespace = "http://been.mff.cuni.cz/resultsrepositoryng/tuplit", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "int", namespace = "http://been.mff.cuni.cz/resultsrepositoryng/tuplit", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "file", namespace = "http://been.mff.cuni.cz/resultsrepositoryng/tuplit", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "uuid", namespace = "http://been.mff.cuni.cz/resultsrepositoryng/tuplit", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "long", namespace = "http://been.mff.cuni.cz/resultsrepositoryng/tuplit", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "double", namespace = "http://been.mff.cuni.cz/resultsrepositoryng/tuplit", type = JAXBElement.class, required = false)
    })
    protected List<JAXBElement<? extends AbstractSerializable>> items;
    protected List<Row> row;

    /**
     * Gets the value of the items property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the items property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getItems().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link NamedFloat }{@code >}
     * {@link JAXBElement }{@code <}{@link NamedBinary }{@code >}
     * {@link JAXBElement }{@code <}{@link NamedString }{@code >}
     * {@link JAXBElement }{@code <}{@link NamedBinary }{@code >}
     * {@link JAXBElement }{@code <}{@link NamedInt }{@code >}
     * {@link JAXBElement }{@code <}{@link NamedUUID }{@code >}
     * {@link JAXBElement }{@code <}{@link NamedUUID }{@code >}
     * {@link JAXBElement }{@code <}{@link NamedDouble }{@code >}
     * {@link JAXBElement }{@code <}{@link NamedLong }{@code >}
     * 
     * 
     */
    public List<JAXBElement<? extends AbstractSerializable>> getItems() {
        if (items == null) {
            items = new ArrayList<JAXBElement<? extends AbstractSerializable>>();
        }
        return this.items;
    }

    public boolean isSetItems() {
        return ((this.items!= null)&&(!this.items.isEmpty()));
    }

    public void unsetItems() {
        this.items = null;
    }

    /**
     * Gets the value of the row property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the row property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRow().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Row }
     * 
     * 
     */
    public List<Row> getRow() {
        if (row == null) {
            row = new ArrayList<Row>();
        }
        return this.row;
    }

    public boolean isSetRow() {
        return ((this.row!= null)&&(!this.row.isEmpty()));
    }

    public void unsetRow() {
        this.row = null;
    }

}
