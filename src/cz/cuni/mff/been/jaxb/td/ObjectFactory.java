//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-147 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.07.05 at 10:17:24 AM CEST 
//


package cz.cuni.mff.been.jaxb.td;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the cz.cuni.mff.been.jaxb.td package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Java_QNAME = new QName("http://been.mff.cuni.cz/taskmanager/td", "java");
    private final static QName _Gt_QNAME = new QName("http://been.mff.cuni.cz/taskmanager/td", "gt");
    private final static QName _TaskProperties_QNAME = new QName("http://been.mff.cuni.cz/taskmanager/td", "taskProperties");
    private final static QName _FailurePolicy_QNAME = new QName("http://been.mff.cuni.cz/taskmanager/td", "failurePolicy");
    private final static QName _Eq_QNAME = new QName("http://been.mff.cuni.cz/taskmanager/td", "eq");
    private final static QName _JavaOptions_QNAME = new QName("http://been.mff.cuni.cz/taskmanager/td", "javaOptions");
    private final static QName _Arguments_QNAME = new QName("http://been.mff.cuni.cz/taskmanager/td", "arguments");
    private final static QName _Ne_QNAME = new QName("http://been.mff.cuni.cz/taskmanager/td", "ne");
    private final static QName _Le_QNAME = new QName("http://been.mff.cuni.cz/taskmanager/td", "le");
    private final static QName _JavaOption_QNAME = new QName("http://been.mff.cuni.cz/taskmanager/td", "javaOption");
    private final static QName _True_QNAME = new QName("http://been.mff.cuni.cz/taskmanager/td", "true");
    private final static QName _And_QNAME = new QName("http://been.mff.cuni.cz/taskmanager/td", "and");
    private final static QName _TaskPropertyObjects_QNAME = new QName("http://been.mff.cuni.cz/taskmanager/td", "taskPropertyObjects");
    private final static QName _Argument_QNAME = new QName("http://been.mff.cuni.cz/taskmanager/td", "argument");
    private final static QName _Or_QNAME = new QName("http://been.mff.cuni.cz/taskmanager/td", "or");
    private final static QName _TaskPropertyObject_QNAME = new QName("http://been.mff.cuni.cz/taskmanager/td", "taskPropertyObject");
    private final static QName _TaskProperty_QNAME = new QName("http://been.mff.cuni.cz/taskmanager/td", "taskProperty");
    private final static QName _Null_QNAME = new QName("http://been.mff.cuni.cz/taskmanager/td", "null");
    private final static QName _Binval_QNAME = new QName("http://been.mff.cuni.cz/taskmanager/td", "binval");
    private final static QName _AsTask_QNAME = new QName("http://been.mff.cuni.cz/taskmanager/td", "asTask");
    private final static QName _Strval_QNAME = new QName("http://been.mff.cuni.cz/taskmanager/td", "strval");
    private final static QName _Name_QNAME = new QName("http://been.mff.cuni.cz/taskmanager/td", "name");
    private final static QName _Description_QNAME = new QName("http://been.mff.cuni.cz/taskmanager/td", "description");
    private final static QName _HostRuntimes_QNAME = new QName("http://been.mff.cuni.cz/taskmanager/td", "hostRuntimes");
    private final static QName _Dependencies_QNAME = new QName("http://been.mff.cuni.cz/taskmanager/td", "dependencies");
    private final static QName _LoadMonitoring_QNAME = new QName("http://been.mff.cuni.cz/taskmanager/td", "loadMonitoring");
    private final static QName _Lt_QNAME = new QName("http://been.mff.cuni.cz/taskmanager/td", "lt");
    private final static QName _Ge_QNAME = new QName("http://been.mff.cuni.cz/taskmanager/td", "ge");
    private final static QName _Package_QNAME = new QName("http://been.mff.cuni.cz/taskmanager/td", "package");
    private final static QName _DependencyCheckPoint_QNAME = new QName("http://been.mff.cuni.cz/taskmanager/td", "dependencyCheckPoint");
    private final static QName _Rsl_QNAME = new QName("http://been.mff.cuni.cz/taskmanager/td", "rsl");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: cz.cuni.mff.been.jaxb.td
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link NullCompare }
     * 
     */
    public NullCompare createNullCompare() {
        return new NullCompare();
    }

    /**
     * Create an instance of {@link TaskPropertyObject }
     * 
     */
    public TaskPropertyObject createTaskPropertyObject() {
        return new TaskPropertyObject();
    }

    /**
     * Create an instance of {@link LoadMonitoring }
     * 
     */
    public LoadMonitoring createLoadMonitoring() {
        return new LoadMonitoring();
    }

    /**
     * Create an instance of {@link Arguments }
     * 
     */
    public Arguments createArguments() {
        return new Arguments();
    }

    /**
     * Create an instance of {@link DependencyCheckPoint }
     * 
     */
    public DependencyCheckPoint createDependencyCheckPoint() {
        return new DependencyCheckPoint();
    }

    /**
     * Create an instance of {@link FailurePolicy }
     * 
     */
    public FailurePolicy createFailurePolicy() {
        return new FailurePolicy();
    }

    /**
     * Create an instance of {@link cz.cuni.mff.been.jaxb.td.Condition }
     * 
     */
    public cz.cuni.mff.been.jaxb.td.Condition createCondition() {
        return new cz.cuni.mff.been.jaxb.td.Condition();
    }

    /**
     * Create an instance of {@link StrVal }
     * 
     */
    public StrVal createStrVal() {
        return new StrVal();
    }

    /**
     * Create an instance of {@link TaskProperty }
     * 
     */
    public TaskProperty createTaskProperty() {
        return new TaskProperty();
    }

    /**
     * Create an instance of {@link Dependencies }
     * 
     */
    public Dependencies createDependencies() {
        return new Dependencies();
    }

    /**
     * Create an instance of {@link Java }
     * 
     */
    public Java createJava() {
        return new Java();
    }

    /**
     * Create an instance of {@link JavaOptions }
     * 
     */
    public JavaOptions createJavaOptions() {
        return new JavaOptions();
    }

    /**
     * Create an instance of {@link TaskProperties }
     * 
     */
    public TaskProperties createTaskProperties() {
        return new TaskProperties();
    }

    /**
     * Create an instance of {@link Trigger }
     * 
     */
    public Trigger createTrigger() {
        return new Trigger();
    }

    /**
     * Create an instance of {@link TaskPropertyObjects }
     * 
     */
    public TaskPropertyObjects createTaskPropertyObjects() {
        return new TaskPropertyObjects();
    }

    /**
     * Create an instance of {@link HostRuntimes }
     * 
     */
    public HostRuntimes createHostRuntimes() {
        return new HostRuntimes();
    }

    /**
     * Create an instance of {@link Logical }
     * 
     */
    public Logical createLogical() {
        return new Logical();
    }

    /**
     * Create an instance of {@link True }
     * 
     */
    public True createTrue() {
        return new True();
    }

    /**
     * Create an instance of {@link TaskDescriptor }
     * 
     */
    public TaskDescriptor createTaskDescriptor() {
        return new TaskDescriptor();
    }

    /**
     * Create an instance of {@link Package }
     * 
     */
    public Package createPackage() {
        return new Package();
    }

    /**
     * Create an instance of {@link Compare }
     * 
     */
    public Compare createCompare() {
        return new Compare();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Java }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://been.mff.cuni.cz/taskmanager/td", name = "java")
    public JAXBElement<Java> createJava(Java value) {
        return new JAXBElement<Java>(_Java_QNAME, Java.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Compare }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://been.mff.cuni.cz/taskmanager/td", name = "gt")
    public JAXBElement<Compare> createGt(Compare value) {
        return new JAXBElement<Compare>(_Gt_QNAME, Compare.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TaskProperties }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://been.mff.cuni.cz/taskmanager/td", name = "taskProperties")
    public JAXBElement<TaskProperties> createTaskProperties(TaskProperties value) {
        return new JAXBElement<TaskProperties>(_TaskProperties_QNAME, TaskProperties.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FailurePolicy }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://been.mff.cuni.cz/taskmanager/td", name = "failurePolicy")
    public JAXBElement<FailurePolicy> createFailurePolicy(FailurePolicy value) {
        return new JAXBElement<FailurePolicy>(_FailurePolicy_QNAME, FailurePolicy.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Compare }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://been.mff.cuni.cz/taskmanager/td", name = "eq")
    public JAXBElement<Compare> createEq(Compare value) {
        return new JAXBElement<Compare>(_Eq_QNAME, Compare.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link JavaOptions }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://been.mff.cuni.cz/taskmanager/td", name = "javaOptions")
    public JAXBElement<JavaOptions> createJavaOptions(JavaOptions value) {
        return new JAXBElement<JavaOptions>(_JavaOptions_QNAME, JavaOptions.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Arguments }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://been.mff.cuni.cz/taskmanager/td", name = "arguments")
    public JAXBElement<Arguments> createArguments(Arguments value) {
        return new JAXBElement<Arguments>(_Arguments_QNAME, Arguments.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Compare }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://been.mff.cuni.cz/taskmanager/td", name = "ne")
    public JAXBElement<Compare> createNe(Compare value) {
        return new JAXBElement<Compare>(_Ne_QNAME, Compare.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Compare }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://been.mff.cuni.cz/taskmanager/td", name = "le")
    public JAXBElement<Compare> createLe(Compare value) {
        return new JAXBElement<Compare>(_Le_QNAME, Compare.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://been.mff.cuni.cz/taskmanager/td", name = "javaOption")
    public JAXBElement<String> createJavaOption(String value) {
        return new JAXBElement<String>(_JavaOption_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link True }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://been.mff.cuni.cz/taskmanager/td", name = "true")
    public JAXBElement<True> createTrue(True value) {
        return new JAXBElement<True>(_True_QNAME, True.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Logical }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://been.mff.cuni.cz/taskmanager/td", name = "and")
    public JAXBElement<Logical> createAnd(Logical value) {
        return new JAXBElement<Logical>(_And_QNAME, Logical.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TaskPropertyObjects }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://been.mff.cuni.cz/taskmanager/td", name = "taskPropertyObjects")
    public JAXBElement<TaskPropertyObjects> createTaskPropertyObjects(TaskPropertyObjects value) {
        return new JAXBElement<TaskPropertyObjects>(_TaskPropertyObjects_QNAME, TaskPropertyObjects.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://been.mff.cuni.cz/taskmanager/td", name = "argument")
    public JAXBElement<String> createArgument(String value) {
        return new JAXBElement<String>(_Argument_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Logical }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://been.mff.cuni.cz/taskmanager/td", name = "or")
    public JAXBElement<Logical> createOr(Logical value) {
        return new JAXBElement<Logical>(_Or_QNAME, Logical.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TaskPropertyObject }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://been.mff.cuni.cz/taskmanager/td", name = "taskPropertyObject")
    public JAXBElement<TaskPropertyObject> createTaskPropertyObject(TaskPropertyObject value) {
        return new JAXBElement<TaskPropertyObject>(_TaskPropertyObject_QNAME, TaskPropertyObject.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TaskProperty }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://been.mff.cuni.cz/taskmanager/td", name = "taskProperty")
    public JAXBElement<TaskProperty> createTaskProperty(TaskProperty value) {
        return new JAXBElement<TaskProperty>(_TaskProperty_QNAME, TaskProperty.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NullCompare }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://been.mff.cuni.cz/taskmanager/td", name = "null")
    public JAXBElement<NullCompare> createNull(NullCompare value) {
        return new JAXBElement<NullCompare>(_Null_QNAME, NullCompare.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link byte[]}{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://been.mff.cuni.cz/taskmanager/td", name = "binval")
    public JAXBElement<byte[]> createBinval(byte[] value) {
        return new JAXBElement<byte[]>(_Binval_QNAME, byte[].class, null, ((byte[]) value));
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://been.mff.cuni.cz/taskmanager/td", name = "asTask")
    public JAXBElement<String> createAsTask(String value) {
        return new JAXBElement<String>(_AsTask_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StrVal }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://been.mff.cuni.cz/taskmanager/td", name = "strval")
    public JAXBElement<StrVal> createStrval(StrVal value) {
        return new JAXBElement<StrVal>(_Strval_QNAME, StrVal.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://been.mff.cuni.cz/taskmanager/td", name = "name")
    public JAXBElement<String> createName(String value) {
        return new JAXBElement<String>(_Name_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://been.mff.cuni.cz/taskmanager/td", name = "description")
    public JAXBElement<String> createDescription(String value) {
        return new JAXBElement<String>(_Description_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link HostRuntimes }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://been.mff.cuni.cz/taskmanager/td", name = "hostRuntimes")
    public JAXBElement<HostRuntimes> createHostRuntimes(HostRuntimes value) {
        return new JAXBElement<HostRuntimes>(_HostRuntimes_QNAME, HostRuntimes.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Dependencies }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://been.mff.cuni.cz/taskmanager/td", name = "dependencies")
    public JAXBElement<Dependencies> createDependencies(Dependencies value) {
        return new JAXBElement<Dependencies>(_Dependencies_QNAME, Dependencies.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LoadMonitoring }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://been.mff.cuni.cz/taskmanager/td", name = "loadMonitoring")
    public JAXBElement<LoadMonitoring> createLoadMonitoring(LoadMonitoring value) {
        return new JAXBElement<LoadMonitoring>(_LoadMonitoring_QNAME, LoadMonitoring.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Compare }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://been.mff.cuni.cz/taskmanager/td", name = "lt")
    public JAXBElement<Compare> createLt(Compare value) {
        return new JAXBElement<Compare>(_Lt_QNAME, Compare.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Compare }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://been.mff.cuni.cz/taskmanager/td", name = "ge")
    public JAXBElement<Compare> createGe(Compare value) {
        return new JAXBElement<Compare>(_Ge_QNAME, Compare.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Package }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://been.mff.cuni.cz/taskmanager/td", name = "package")
    public JAXBElement<Package> createPackage(Package value) {
        return new JAXBElement<Package>(_Package_QNAME, Package.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DependencyCheckPoint }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://been.mff.cuni.cz/taskmanager/td", name = "dependencyCheckPoint")
    public JAXBElement<DependencyCheckPoint> createDependencyCheckPoint(DependencyCheckPoint value) {
        return new JAXBElement<DependencyCheckPoint>(_DependencyCheckPoint_QNAME, DependencyCheckPoint.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link cz.cuni.mff.been.common.rsl.Condition }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://been.mff.cuni.cz/taskmanager/td", name = "rsl")
    @XmlJavaTypeAdapter(Adapter1 .class)
    public JAXBElement<cz.cuni.mff.been.common.rsl.Condition> createRsl(cz.cuni.mff.been.common.rsl.Condition value) {
        return new JAXBElement<cz.cuni.mff.been.common.rsl.Condition>(_Rsl_QNAME, cz.cuni.mff.been.common.rsl.Condition.class, null, value);
    }

}
