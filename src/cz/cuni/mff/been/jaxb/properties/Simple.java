//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-147 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.07.05 at 10:17:23 AM CEST 
//


package cz.cuni.mff.been.jaxb.properties;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;
import cz.cuni.mff.been.jaxb.AbstractSerializable;


/**
 * <p>Java class for Simple complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Simple">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="remove" type="{http://been.mff.cuni.cz/hostmanager/properties}Remove" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;group ref="{http://been.mff.cuni.cz/hostmanager/properties}nvpGroup" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Simple", propOrder = {
    "remove",
    "properties"
})
public class Simple
    extends AbstractSerializable
    implements Serializable
{

    private final static long serialVersionUID = -9223372036854775808L;
    protected List<Remove> remove;
    @XmlElements({
        @XmlElement(name = "lversion", type = NamedListVersion.class),
        @XmlElement(name = "rint", type = NamedRangeInt.class),
        @XmlElement(name = "string", type = NamedString.class, nillable = true),
        @XmlElement(name = "lint", type = NamedListInt.class),
        @XmlElement(name = "lbool", type = NamedListBoolean.class),
        @XmlElement(name = "lregexp", type = NamedListRegexp.class),
        @XmlElement(name = "double", type = NamedDouble.class, nillable = true),
        @XmlElement(name = "rbool", type = NamedRangeBoolean.class),
        @XmlElement(name = "version", type = NamedVersion.class, nillable = true),
        @XmlElement(name = "rdouble", type = NamedRangeDouble.class),
        @XmlElement(name = "ldouble", type = NamedListDouble.class),
        @XmlElement(name = "lstring", type = NamedListString.class),
        @XmlElement(name = "bool", type = NamedBoolean.class, nillable = true),
        @XmlElement(name = "int", type = NamedInt.class, nillable = true),
        @XmlElement(name = "rstring", type = NamedRangeString.class),
        @XmlElement(name = "regexp", type = NamedRegexp.class, nillable = true),
        @XmlElement(name = "rregexp", type = NamedRangeRegexp.class),
        @XmlElement(name = "rversion", type = NamedRangeVersion.class)
    })
    protected List<AbstractSerializable> properties;

    /**
     * Gets the value of the remove property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the remove property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRemove().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Remove }
     * 
     * 
     */
    public List<Remove> getRemove() {
        if (remove == null) {
            remove = new ArrayList<Remove>();
        }
        return this.remove;
    }

    public boolean isSetRemove() {
        return ((this.remove!= null)&&(!this.remove.isEmpty()));
    }

    public void unsetRemove() {
        this.remove = null;
    }

    /**
     * Gets the value of the properties property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the properties property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getProperties().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NamedListVersion }
     * {@link NamedRangeInt }
     * {@link NamedString }
     * {@link NamedListInt }
     * {@link NamedListBoolean }
     * {@link NamedListRegexp }
     * {@link NamedDouble }
     * {@link NamedRangeBoolean }
     * {@link NamedVersion }
     * {@link NamedRangeDouble }
     * {@link NamedListDouble }
     * {@link NamedListString }
     * {@link NamedBoolean }
     * {@link NamedInt }
     * {@link NamedRangeString }
     * {@link NamedRegexp }
     * {@link NamedRangeRegexp }
     * {@link NamedRangeVersion }
     * 
     * 
     */
    public List<AbstractSerializable> getProperties() {
        if (properties == null) {
            properties = new ArrayList<AbstractSerializable>();
        }
        return this.properties;
    }

    public boolean isSetProperties() {
        return ((this.properties!= null)&&(!this.properties.isEmpty()));
    }

    public void unsetProperties() {
        this.properties = null;
    }

}
