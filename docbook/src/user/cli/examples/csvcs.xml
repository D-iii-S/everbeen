<?xml version="1.0" encoding="UTF-8"?>

<sect3
	xml:id="been.user.cli.reference.csvcs.examples"
	xmlns="http://docbook.org/ns/docbook"
	xmlns:xlink="http://www.w3.org/1999/xlink"
	xmlns:xml="http://www.w3.org/XML/1998/namespace"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xi="http://www.w3.org/2001/XInclude"
	xsi:schemaLocation="http://docbook.org/ns/docbook ../../../../docbook-5.0/xsd/docbook.xsd"
>
	<title>Core Services Module Examples</title>
	
	<para>The Core Services Module lets you control the core BEEN services from the command line.
	There are no actions producing XML output or accepting XML input in this module. Plain text
	output format of actions that produce output is described in
	<xref linkend="been.user.cli.reference.csvcs"/>.</para>
	
	<para>Listing all the running core services:</para>
	<screen>$ <emphasis role="strong">./bcmd csvcs list</emphasis></screen>	
	
	<para>Listing all core services:</para>
	<screen>$ <emphasis role="strong">./bcmd csvcs list all</emphasis></screen>
	
	<para>Starting the Benchmark Manager NG service on a host called
	<constant>nightingale</constant>:</para>
	<screen>$ <emphasis role="strong">./bcmd csvcs start service=benchmarkmanagerng host=nightingale</emphasis></screen>
	
	<para>Stopping the Software Repository:</para>
	<screen>$ <emphasis role="strong">./bcmd csvcs stop service=softwarerepository</emphasis></screen>
	
	<para>Starting all the core services that do not run yet on a host called
	<constant>sparrow</constant>:</para>
	<screen>$ <emphasis role="strong">./bcmd csvcs start-all host=sparrow</emphasis></screen>
	
	<para>Stopping all the running core services:</para>
	<screen>$ <emphasis role="strong">./bcmd csvcs stop-all</emphasis></screen>
	
	<para>Reading the standard and error output of the Results Repository NG:</para>
	<screen>$ <emphasis role="strong">./bcmd csvcs stdout service=resultsrepositoryng</emphasis></screen>
	<screen>$ <emphasis role="strong">./bcmd csvcs stderr service=resultsrepositoryng</emphasis></screen>
	
	<para>Optionally, you can set the upper bound (<option>to</option>) and/or lower bound
	(<option>from</option>) on line numbers. You can also use the <option>numbers</option> flag
	to have the line numbers printed out.</para>
	<screen>$ <emphasis role="strong">./bcmd csvcs stdout service=resultsrepositoryng from=100 numbers to=200</emphasis></screen>
	<screen>$ <emphasis role="strong">./bcmd csvcs stderr to=200 service=resultsrepositoryng from=100 numbers</emphasis></screen>
	
	<para>Reading the the log messages of the Command Line Interface:</para>
	<screen>$ <emphasis role="strong">./bcmd csvcs logs service=clinterface</emphasis></screen>
	
	<para>You can bound the number of lines to read and have line numbers printed out exactly the
	same way as above.</para>
	<screen>$ <emphasis role="strong">./bcmd csvcs logs numbers from=50 to=100 service=clinterface</emphasis></screen>
</sect3>