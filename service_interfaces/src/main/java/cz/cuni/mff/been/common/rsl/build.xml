<?xml version="1.0" encoding="us-ascii"?>
<!--

  BEEN: Benchmarking Environment
  ==============================

  File author: David Majda

  GNU Lesser General Public License Version 2.1
  - - - - - - - - - - - - - - - - - - - - - - -
  Copyright (C) 2004-2006 Distributed Systems Research Group,
  Faculty of Mathematics and Physics, Charles University in Prague

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License version 2.1, as published by the Free Software Foundation.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
  MA  02111-1307  USA

-->
<project name="BEEN" basedir=".">

	<!-- ============== PROPERTIES ============== -->

	<!-- ============== FILESETS, CLASSPATH, etc. ================ -->
	
	<!-- ============== TARGETS ================ -->
	
	<!-- Checks if we need to regenerate the RSL parser. Theoretically, JavaCC
	     should check this by itself, but it doesn't work (files Parser.java,
	     ParserConstants.java and ParserTokenManager were allways generated).
	     Either I did something wrong, or there is a bug in JavaCC. -->
	<target name="checkuptodate">
		<uptodate property="dont.generate.parser" srcfile="Parser.jj">
			<!-- The "to" attribute requires absolute path, or the mapper won't
			     find the file. -->
			<mapper type="merge" to="${src.dir}/cz/cuni/mff/been/benchmarkmanager/rsl/Parser.java"></mapper>
		</uptodate>
	</target>

	<!-- Generates the RSL parser source files form the Parser.jj definition
	     file using javacc, but only if necessary. Fork is needed because
	     JavaCC calls System.exit(). -->
	<target name="generate" depends="checkuptodate" unless="dont.generate.parser"> 
		<java classname="javacc" fork="true">
			<arg file="Parser.jj" />
			<classpath>
				<path refid="compile.classpath"/>				
			</classpath>
		</java>
	</target>

	<!-- Deletes generated files of the RSL parser. -->
	<target name="clean">
		<delete file="Parser.java" />
		<delete file="ParserConstants.java" />
		<delete file="ParserTokenManager.java" />
		<delete file="Token.java" />
		<delete file="SimpleCharStream.java" />
		<delete file="ParseException.java" />
		<delete file="TokenMgrError.java" />
	</target>
	
	<target name="genclean" depends="clean"/>
	
</project>

		
