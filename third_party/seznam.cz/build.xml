<?xml version="1.0" encoding="us-ascii"?>
<!--

  BEEN: Benchmarking Environment
  ==============================

  File author: Jiri Tauber

  GNU Lesser General Public License Version 2.1
  - - - - - - - - - - - - - - - - - - - - - - -
  Copyright (C) 2004-2006 Distributed Systems Research Group,
  Faculty of Mathematics and Physics, Charles University in Prague

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License version 2.1, as published by the Free Software Foundation.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
  MA  02111-1307  USA

-->
<project name="BEEN-Seznam.cz-packages" default="usage" basedir=".">

	<!-- ============== PROPERTIES ============== -->
	<property name="been.path" location="../../been" />
	<property name="been.dir" value="${been.path}" />

	<property name="been.class.path" location="${been.path}/build" />
	<property name="been.class.dir" value="${been.class.path}" />

	<property name="been.dist.full.path" location="${been.path}/dist/full" />

	<property name="lib.path" location="${been.path}/lib" />
	<property name="lib.dir" value="${lib.path}" />

	<property name="src.path" location="./src" />
	<property name="src.dir" value="${src.path}" />

	<property name="resources.path" location="./resources" />
	<property name="resources.dir" value="${resources.path}" />

	<property name="packages.dir" value="${resources.dir}/packages" />

	<property name="tasks.dir" value="${src.dir}/cz/seznam/been/task" />
	<property name="modules.dir" value="${src.dir}/cz/seznam/been/module" />

	<property name="build.path" location="./build" />
	<property name="build.dir" value="${build.path}" />
	<property name="build.classes.dir" value="${build.dir}" />

	<property name="dist.path" location="./dist" />
	<property name="dist.dir" value="${dist.path}" />

	<!-- Properties containing filenames of libraries -->
	<property file="${lib.dir}/lib.properties" />

	<!-- Version of Java used in the source code -->
	<property name="build.java.version" value="1.5" />
	
	<!-- Build with debugging info? -->
	<property name="build.debug" value="true" />
	
	<!-- Include ant in the classpath? Should be set to false-->
	<property name="build.include.ant.runtime" value="false" />
	
	<!-- ============== FILESETS, CLASSPATH, etc ================ -->

	<zipfileset id="task.base.classes" dir="${build.classes.dir}">
		<include name="${task.package.path}/*.class"/>
	</zipfileset>

	<!-- Classpath for compiling BEEN. Add libraries from the ${lib.dir}
	     directory in the form like	${library.jar}, where the value of
	     library.jar property is set in the ${lib.dir}/lib.properties file to
	     the actual filename of the library -->
	<path id="compile.classpath">
		<pathelement location="${build.classes.dir}"/>
		<pathelement location="${been.class.dir}"/>

		<pathelement location="${lib.dir}/${jaxb-api.jar}" />
		<pathelement location="${lib.dir}/${jaxb-impl.jar}" />
		<pathelement location="${lib.dir}/${jaxb-xjc.jar}" />

		<pathelement location="${lib.dir}/${ant.jar}"/>
		<pathelement location="${lib.dir}/${cvslib.jar}"/>
		<pathelement location="${lib.dir}/${commons-io.jar}"/>
		<pathelement location="${lib.dir}/${commons-fileupload.jar}"/>
		<pathelement location="${lib.dir}/${javacc.jar}"/>
		<pathelement location="${lib.dir}/${servlet-api.jar}"/>
		<pathelement location="${lib.dir}/${jsp-api.jar}"/>
		<pathelement location="${lib.dir}/${log4j.jar}"/>
		<pathelement location="${lib.dir}/${hello.jar}"/>
		<pathelement location="${lib.dir}/${netcdf.jar}"/>

		<pathelement location="${lib.dir}/${rjava.jar}"/>

		<pathelement location="${lib.dir}/${jpf.jar}"/>
		<pathelement location="${lib.dir}/${jpf-boot.jar}"/>
		<pathelement location="${lib.dir}/${javasvn.jar}"/>
		<pathelement location="${lib.dir}/${sofa2.jar}"/>
		<pathelement location="${lib.dir}/${sofa2-repositoryserver.jar}"/>
		<pathelement location="${lib.dir}/${sofa2-connectors.jar}"/>
		<pathelement location="${lib.dir}/${commons-logging.jar}"/>

		<pathelement location="${lib.dir}/${jython.jar}"/>

		<pathelement location="${lib.dir}/${antlr.jar}"/>
		<pathelement location="${lib.dir}/${asm-attrs.jar}"/>
		<pathelement location="${lib.dir}/${asm.jar}"/>
		<pathelement location="${lib.dir}/${cglib.jar}"/>
		<pathelement location="${lib.dir}/${commons-collections.jar}"/>
		<pathelement location="${lib.dir}/${dom4j.jar}"/>
		<pathelement location="${lib.dir}/${ehcache.jar}"/>
		<pathelement location="${lib.dir}/${ejb3-persistence.jar}"/>
		<pathelement location="${lib.dir}/${hibernate3.jar}"/>
		<pathelement location="${lib.dir}/${hibernate-annotations.jar}"/>
		<pathelement location="${lib.dir}/${hibernate-commons-annotations.jar}"/>
		<pathelement location="${lib.dir}/${hibernate-entitymanager.jar}"/>
		<pathelement location="${lib.dir}/${hibernate-tools.jar}"/>
		<pathelement location="${lib.dir}/${javassist.jar}"/>
		<pathelement location="${lib.dir}/${jdbc2_0-stdext.jar}"/>
		<pathelement location="${lib.dir}/${jta.jar}"/>

		<pathelement location="${lib.dir}/${derby.jar}"/>
		<pathelement location="${lib.dir}/${derbyclient.jar}"/>
		<pathelement location="${lib.dir}/${derbynet.jar}"/>
		<pathelement location="${lib.dir}/${derbytools.jar}"/>

		<pathelement location="${lib.dir}/${rmiio.jar}"/>
		<pathelement location="${lib.dir}/${opencsv.jar}"/>

		<pathelement location="${lib.dir}/${collections-generic.jar}"/>

		<pathelement location="${lib.dir}/${junit.jar}"/>

		<pathelement location="${lib.dir}/${jpda.jar}"/>
	</path>

	<!-- ============== TARGETS ================ -->

	<!-- === Help targets  === -->

	<!-- Print a brief usage guide to the build process -->
	<target name="usage"  description="Print a brief help">
		<echo message="Execute 'ant -projecthelp' for build file help." /> 
        <echo message="Execute 'ant -help' for Ant help." /> 
	</target>

	<!-- Alias for the "usage" target -->
	<target name="help" depends="usage" description="Print a brief help" />


	<!-- === Prepare targets  === -->

	<target name="dist-prepare">
		<mkdir dir="${dist.dir}" />
	</target>

	<target name="compile-prepare">
		<mkdir dir="${build.dir}" />
	</target>
	
	<!-- === Distribution targets  === -->

	<target name="compile" depends="compile-prepare">
		<javac source="${build.java.version}" 
			debug="${build.debug}" 
			includeantruntime="${build.include.ant.runtime}" 
			srcdir="${src.dir}" destdir="${build.classes.dir}">
			
			<classpath>
				<path refid="compile.classpath"/>				
			</classpath>
			<compilerarg value="-Djava.endorsed.dirs=${lib.dir}/jaxb"/>
		</javac>
	</target>

	<target name="package">
		<!-- Build tasks -->
		<ant inheritrefs="true" dir="${tasks.dir}/hintserver/binupload" target="package" />
		<ant inheritrefs="true" dir="${tasks.dir}/hintserver/logupload" target="package" />
		<ant inheritrefs="true" dir="${tasks.dir}/hintserver/deploy" target="package" />
		<ant inheritrefs="true" dir="${tasks.dir}/hintserver/logparser" target="package" />
		<ant inheritrefs="true" dir="${tasks.dir}/hintserver/rpsgrapher" target="package" />

		<!-- Build modules -->
		<ant inheritrefs="true" dir="${modules.dir}/hintserver/generator" target="package" />
		<ant inheritrefs="true" dir="${modules.dir}/hintserver/evaluator" target="package" />
	</target>

	<target name="dist" depends="compile,dist-prepare,package"
		description="Build all the proprietary packages">
	</target>

	<target name="deploy" depends="dist"
		description="Copy the proprietary packages into the SW repository directory of been">
		<copy todir="${been.dist.full.path}/tasks">
			<fileset dir="${dist.dir}" includes="*.bpk" />
		</copy>
		<copy todir="${been.dist.full.path}/data/softwarerepository">
			<fileset dir="${dist.dir}" includes="*.bpk" />
		</copy>
		<copy todir="${been.dist.full.path}/hostruntime/tasks/system/softwarerepository-tid/working" failonerror="false">
			<fileset dir="${dist.dir}" includes="*.bpk" />
		</copy>
	</target>

	<!-- === Clean targets  === -->

	<target name="distclean">
		<delete dir="${dist.dir}"/>
	</target>

	<target name="clean" depends="distclean" description="Clean everything (*.class and *.bpk)">
		<delete dir="${build.dir}"/>
	</target>

</project>
