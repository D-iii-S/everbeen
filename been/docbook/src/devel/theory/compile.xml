<?xml version="1.0" encoding="UTF-8"?>

<sect1
	xml:id="been.devel.theory.compile"
	xmlns="http://docbook.org/ns/docbook"
	xmlns:xlink="http://www.w3.org/1999/xlink"
	xmlns:xml="http://www.w3.org/XML/1998/namespace"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xi="http://www.w3.org/2001/XInclude"
	xsi:schemaLocation="http://docbook.org/ns/docbook ../../../docbook-5.0/xsd/docbook.xsd"
>
	<title>Compiling BEEN</title>
	
	<para>
	As most of Java projects, BEEN build process is handled by Ant.
	The main Ant build file offers targets for all build activities 
	developers might need to carry on when working with BEEN.
	Here is a description of most important Ant targets:
	
	<variablelist>
		<varlistentry>
			<term><code>all</code></term>
			<listitem><para>
			Builds everything you might need to build, i.e.
			BEEN itself, and JavaDocs and DocBook documentation.
			</para></listitem>
		</varlistentry>
		<varlistentry>
			<term><code>clean</code></term>
			<listitem><para>
			Deletes the compiled classes, distribution files and documentation. Does not delete generated Java classes.
			</para></listitem>
		</varlistentry>
		
		<varlistentry>
			<term><code>deploy</code></term>
			<listitem><para>
			Deploys WebUI to Tomcat <filename>webapps</filename> directory. This target can be sometimes 
			useful even though the preferred way how to deploy WebUI is deploying <filename>been.war</filename>
			archive using Tomcat's Manager Interface.
			</para></listitem>
		</varlistentry>
		
		<varlistentry>
			<term><code>dist</code></term>
			<listitem><para>
			The most important Ant target. It compiles BEEN and 
			creates ready-to-run directory structure in <filename>dist</filename>
			directory. Structure of BEEN's distribution files
			will be described in the next section. 
			</para></listitem>
		</varlistentry>
		
		<varlistentry>
			<term><code>generate</code></term>
			<listitem><para>
			Generates parts of the Java source code using the JAXB and JavaCC technologies. This target
			should be invoked after each <code>veryclean</code>. When your IDE reports lots of missing
			classes, this is what needs to be done.
			</para></listitem>
		</varlistentry>
		
		<varlistentry>
			<term><code>docbook</code></term>
			<listitem><para>
			Generates BEEN documentation from DocBook format.
			</para></listitem>
		</varlistentry>
		
		<varlistentry>
			<term><code>javadoc</code></term>
			<listitem><para>
			Generates JavaDoc documentation for BEEN project.
			</para></listitem>
		</varlistentry>
		
		<varlistentry>
			<term><code>test</code></term>
			<listitem><para>
			Runs all the JUnit test supplied with BEEN.
			</para></listitem>
		</varlistentry>
		
		<varlistentry>
			<term><code>veryclean</code></term>
			<listitem><para>
			Deletes the compiled classes, distribution files and documentation. 
			Unlike <code>clean</code>, it also deletes all the generated files.
			</para></listitem>
		</varlistentry>

		<varlistentry>
			<term><code>compile-client</code></term>
			<listitem><para>Compiles the native command line client using GCC
			on a POSIX compliant platform.</para></listitem>
		</varlistentry>

		<varlistentry>
			<term><code>clean-client</code></term>
			<listitem><para>Removse the command line client binary.</para></listitem>
		</varlistentry>

		<varlistentry>
			<term><code>compile-detector</code></term>
			<listitem><para>Compiles the hardware detector binary on Windows or Linux.</para></listitem>
		</varlistentry>

		<varlistentry>
			<term><code>clean-detector</code></term>
			<listitem><para>Removes the hardware detector binary files.</para></listitem>
		</varlistentry>

		<varlistentry>
			<term><code>compile-monitor</code></term>
			<listitem><para>Compiles the load monitor JNI library on Windows or Linux.</para></listitem>
		</varlistentry>

		<varlistentry>
			<term><code>clean-monitor</code></term>
			<listitem><para>Removes the load monitor JNI library files.</para></listitem>
		</varlistentry>
	</variablelist>
	</para>
	
	<sect2>
	<title>Structure of BEEN Distribution Directory</title>
	
	<para>
	Ant target <code>dist</code> creates a ready to run BEEN 
	distribution in <filename>dist</filename> directory. 
	After the target finishes, distribution files 
	should contain the following:
	<itemizedlist>
		<listitem><para>Full distribution directory containing BEEN Task Manager,
		Host Runtime and all Software Repository packages. This distribution 
		should be copied to the host where Task Manager and/or Software Repository 
		runs. Directory with full distribution can be found under 
		<filename>dist/full</filename>.
		</para></listitem>
		<listitem><para>Host-Runtime-Only distribution directory containing
		only Host Runtime and all its belongings. This distribution 
		takes much less disk space than the full distribution and 
		should be copied to "client" hosts that don't run 
		any services and are there to perform the real benchmarking job.
		Directory with host-runtime-only distribution can be found 
		under <filename>dist/hostruntime</filename>.</para></listitem>
		<listitem><para>Java WAR containing WebUI to be deployed to Tomcat. Archive can be found in <filename>dist/been.war</filename> file.</para></listitem>
	</itemizedlist>
	</para>
	
	</sect2>
</sect1>