class ValueString
!!!467330.java!!!	ValueString()
		
		caseSense = false;
		value = "";
!!!467458.java!!!	ValueString(in newValue : String)
		
		caseSense = false;
		value = newValue;
!!!467586.java!!!	ValueString(inout node : Node)
		
		parseXMLNode(node);
!!!467714.java!!!	ValueString(in newValue : String, inout caseSensitive : boolean)
		
		caseSense = caseSensitive;
		value = newValue;
!!!467842.java!!!	toString() : String
		
		return value;
!!!467970.java!!!	compareTo(inout vb : ValueString) : int
		
		if (caseSense && vb.caseSense) {
			return value.compareTo(vb.value);
		} else {
			return value.compareToIgnoreCase(vb.value);
		}
!!!468098.java!!!	equals(inout o : Object) : boolean
		
		if (o instanceof ValueString) {
			return equals((ValueString) o);
		} else {
			return false;
		}
!!!468226.java!!!	equals(inout vc : ValueString) : boolean
		
		if (caseSense && vc.caseSense) {
			return value.equals(vc.value);
		} else {
			return value.equalsIgnoreCase(vc.value);
		}
!!!468354.java!!!	greaterThan(inout o : Object) : boolean
		
		if (o instanceof ValueString) {
			return greaterThan((ValueString) o);
		} else {
			return false;
		}
!!!468482.java!!!	greaterThan(inout v : ValueString) : boolean
		
		if (caseSense && v.caseSense) {
			return value.compareTo(v.value) > 0;
		} else {
			return value.compareToIgnoreCase(v.value) > 0;
		}
!!!468610.java!!!	lessThan(inout o : Object) : boolean
		
		if (o instanceof ValueString) {
			return lessThan((ValueString) o);
		} else {
			return false;
		}
!!!468738.java!!!	lessThan(inout v : ValueString) : boolean
		
		if (caseSense && v.caseSense) {
			return value.compareTo(v.value) < 0;
		} else {
			return value.compareToIgnoreCase(v.value) < 0;
		}
!!!468866.java!!!	hashCode() : int
		
		return value.hashCode();
!!!468994.java!!!	caseSensitive() : boolean
		
		return caseSense;
!!!469122.java!!!	setCaseSensitivity(inout newCS : boolean) : void
		
		caseSense = newCS;
!!!469250.java!!!	parseXMLNode(inout node : Node) : void
		
		if (!node.getNodeName().equals(getXMLNodeName())) {
			throw new InputParseException("Node does not contain string data. Node name is \""
					+ node.getNodeName() + "\".");
		}
		
		value = XMLHelper.getAttributeValueByName("value", node);
		caseSense = XMLHelper.getAttributeValueByName("caseSensitive", node).equals("yes");
!!!469378.java!!!	exportAsElement(inout document : Document) : Element
		
		/* Resulting node
		 * 
		 * <string value="xxxxxx" caseSensitive="<cs>"/>
		 * 
		 * where <cs> is either "yes" or "no" depending on the case sensitivity of the current string.
		 */

		Element element = document.createElement(getXMLNodeName());
		
		element.setAttribute("value", value);
		element.setAttribute("caseSensitive", caseSense ? "yes" : "no");
		
		return element;
!!!469506.java!!!	getXMLNodeName() : String
		
		return "string";
!!!469634.java!!!	getValue() : String
		
		return value;
!!!469762.java!!!	setValue(in s : String) : void
		
		value = s; 
!!!469890.java!!!	getUnit() : String
		
		return null;
