format 70
"taskmanager" // been::src::cz::cuni::mff::been::taskmanager
  revision 4
  modified_by 8 "BoRiS"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "cz/cuni/mff/been/taskmanager"
  java_package "cz.cuni.mff.been.taskmanager"
  classview 128898 "taskmanager"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    classdiagram 128002 "TaskManager"
      draw_all_relations yes hide_attributes yes hide_operations yes hide_getset_operations default show_members_full_definition default show_members_visibility yes show_members_stereotype yes show_members_multiplicity yes show_members_initialization no show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab yes class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A0-Landscape
    end

    class 162946 "HostRuntimeRegistrationListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Callback interface used when listening for events in the Task Manager
(currently only registering/unregistering of the Host Runtime). Those
who are interested in the events the must register using
<code>TaskManagerInterface.registerEventListener</code> method and later
unregister using <code>TaskManagerInterface.unregisterEventListener</code>. 

@author David Majda
"
      classrelation 172418 // <generalisation>
	relation 172418 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 172418 // <generalisation>
	  b parent class_ref 130818 // Remote
      end

      operation 291970 "hostRuntimeRegistered"
	public explicit_return_type "void"
	nparams 1
	  param in name "hostname" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Called when new Host Runtime is registered at the Task Manager.

@param hostname host where the new Host Runtime is running 
@throws RemoteException if something failed during the execution of
         the remote method call.
"
      end

      operation 292098 "hostRuntimeUnregistered"
	public explicit_return_type "void"
	nparams 1
	  param in name "hostname" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Called when existing Host Runtime is unregistered at the Task Manager.

@param hostname host where the Host Runtime is running 
@throws RemoteException if something failed during the execution of
         the remote method call.
"
      end
    end

    class 181506 "HostRuntimesPortInterface"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Interface of Task Manager's port provided for Host Runtimes.

@author Antonin Tomecek
"
      classrelation 265218 // <generalisation>
	relation 265218 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 265218 // <generalisation>
	  b parent class_ref 130818 // Remote
      end

      operation 670466 "checkPointReached"
	public explicit_return_type "void"
	nparams 6
	  param in name "taskId" explicit_type "String"
	  param in name "contextId" explicit_type "String"
	  param in name "type" explicit_type "String"
	  param in name "value" explicit_type "String"
	  param in name "hostName" explicit_type "String"
	  param inout name "magicObject" type class_ref 148226 // Serializable
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Used by Host Runtime for forwarding of check points reached by
tasks.

@param taskId TID of task.
@param type Type of reached state.
@param value Value with which this state was reached.
@throws RemoteException If something failed during the execution of
	the remote method call.

_@deprecated Use checkPointReached(CheckPoint checkPoint) method
	instead.
"
      end

      operation 670594 "checkPointReached"
	public explicit_return_type "void"
	nparams 1
	  param inout name "checkPoint" type class_ref 205698 // CheckPoint
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Used by Host Runtime for forwarding of checkpoint reached by task.

@param checkPoint CheckPoint representation of reached checkpoint.
@throws RemoteException If something failed during the execution of
	the remote method call.
"
      end

      operation 670722 "checkPointLook"
	public return_type class_ref 205698 // CheckPoint
	nparams 2
	  param inout name "checkpointTemplate" type class_ref 205698 // CheckPoint
	  param in name "timeout" explicit_type "long"
	nexceptions 2
	  exception class_ref 205826 // TaskManagerException
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Used by Host Runtime for forwarding of lookup request from task.
Returns array containing all reached checkpoints matching specified
checkpointTemplate. All filled in values must match. Values set to
null are arbitrary.
Calling of this method is blocking.

@param checkpointTemplate Prepared template for checkpoint match.
@param timeout Maximum time to wait in milliseconds.
@return Array containing all checkpoint matching specified
	checkpointTemplate.
@throws RemoteException If something failed during the execution of
	the remote method call.
"
      end

      operation 670850 "log"
	public explicit_return_type "void"
	nparams 5
	  param in name "contextId" explicit_type "String"
	  param in name "taskId" explicit_type "String"
	  param inout name "level" type class_ref 129666 // LogLevel
	  param inout name "timestamp" explicit_type "Date"
	  param in name "message" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Used by Host Runtime for forwarding of log messages from tasks.

@param contextId Id of the task's context.
@param taskId TID of task.
@param level log level of this log message 
@param timestamp timestamp of this log message
@param message Message to log.
@throws RemoteException If something failed during the execution of
	the remote method call.
"
      end

      operation 670978 "serviceRegister"
	public explicit_return_type "void"
	nparams 1
	  param inout name "service" type class_ref 184578 // ServiceEntry
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Used by Host Runtime for forwarding of task's request for new
registration of service.

@param service Object describing service to register.
@throws RemoteException If something failed during the execution of
	the remote method call.
"
      end

      operation 671106 "serviceUnregister"
	public explicit_return_type "void"
	nparams 1
	  param inout name "serviceTemplate" type class_ref 184578 // ServiceEntry
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Used by Host Runtime for forwarding of task's request for
deregistration of services. All entries matching specified template
are removed from the registry.

@param serviceTemplate Object describing services to remove (using
	regular expressions).
@throws RemoteException If something failed during the execution of
	the remote method call.
"
      end

      operation 671234 "serviceLook"
	public return_type class_ref 184578 // ServiceEntry
	nparams 1
	  param inout name "serviceTemplate" type class_ref 184578 // ServiceEntry
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Used by Host Runtime for forwarding of task's request for looking in
service entries. Returns array containing all service entries
matching specified template (using regular expressions).

@param serviceTemplate Object looked describing services (using
	regular expressions).
@throws RemoteException If something failed during the execution of
	the remote method call.
"
      end

      operation 671362 "serviceFind"
	public explicit_return_type "Remote"
	nparams 2
	  param in name "serviceName" explicit_type "String"
	  param in name "interfaceName" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Used by tasks for finding some registered remote interface. Given
names are compared for exact match (doesn't use regular
expressions).

@param serviceName Name of service.
@param interfaceName Name of service's interface.
@return Remote representation of one from all matching interfaces
	or null if none.
@throws RemoteException If something failed during the execution of
	the remote method call.
"
      end

      operation 671490 "serviceFindURI"
	public explicit_return_type "URI"
	nparams 2
	  param in name "serviceName" explicit_type "String"
	  param in name "interfaceName" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Used by tasks for finding some registered remote interface. Given
names are compared for exact match (doesn't use regular
expressions).

@param serviceName Name of service.
@param interfaceName Name of service's interface.
@return URI representation of one from all matching interfaces or
	null if none.
@throws RemoteException If something failed during the execuiton of
	the remote method call.
"
      end

      operation 671618 "taskRestarted"
	public explicit_return_type "void"
	nparams 2
	  param in name "taskId" explicit_type "String"
	  param in name "contextId" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Notification from Host Runtime, that specified task was restarted.

@param taskId ID of task.
@param contextId ID of context.
@throws RemoteException If something failed during the execution of
	the remote method call.
"
      end

      operation 671746 "taskReachedState"
	public explicit_return_type "void"
	nparams 3
	  param in name "taskId" explicit_type "String"
	  param in name "contextId" explicit_type "String"
	  param inout name "state" type class_ref 136066 // TaskState
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Used by Host Runtime for notify of task's reached state.

@param taskId TID of task.
@param state state of task.
@throws RemoteException If something failed during the execution of
	the remote method call.
"
      end

      operation 671874 "addStandardOutput"
	public explicit_return_type "void"
	nparams 3
	  param in name "context" explicit_type "String"
	  param in name "taskID" explicit_type "String"
	  param in name "output" explicit_type "String"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 184322 // LogStorageException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "NullPointerException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Stores additional standard output of the task in the log storage. This 
method can be called many times to store the output of the task in smaller
batches.

@param context task's context; cannot be null or an empty string.
@param taskID task's ID; cannot be null or an empty string.
@param output part of the task's standard output; cannot be null.
@throws RemoteException If something failed during the execution of
the remote method call.
@throws LogStorageException If an error occured while storing the output.
@throws IllegalArgumentException If the the context name or task's ID are empty 
strings or if the task or it's context wasn't found.
@throws NullPointerException If any argument is <tt>null</tt>.
"
      end

      operation 672002 "addErrorOutput"
	public explicit_return_type "void"
	nparams 3
	  param in name "context" explicit_type "String"
	  param in name "taskID" explicit_type "String"
	  param in name "output" explicit_type "String"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 184322 // LogStorageException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "NullPointerException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Stores additional error output of the task in the log storage. This 
method can be called many times to store the output of the task in smaller
batches.

@param context task's context; cannot be null or an empty string.
@param taskID task's ID; cannot be null or an empty string.
@param output part of the task's error output; cannot be null.
@throws RemoteException If something failed during the execution of
the remote method call.
@throws LogStorageException If an error occured while storing the output.
@throws IllegalArgumentException If the the context name or task's ID are empty 
strings or if the task or it's context wasn't found.
@throws NullPointerException If any argument is <tt>null</tt>.
"
      end

      operation 672130 "getTaskManager"
	public return_type class_ref 181762 // TaskManagerInterface
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Return RMI reference to the Task Manager. 

@return RMI reference to the Task Manager
@throws RemoteException if something failed during the execution of
         the remote method call.
"
      end
    end

    class 181762 "TaskManagerInterface"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Main interface of the Task Manager (used to control of it).

@author Antonin Tomecek
"
      classrelation 266882 // <generalisation>
	relation 266882 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 266882 // <generalisation>
	  b parent class_ref 130818 // Remote
      end

      attribute 332674 "SYSTEM_CONTEXT_ID"
	public explicit_type "String"
	init_value "=  \"system\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " ID of system context. 
"
      end

      attribute 332802 "SYSTEM_CONTEXT_NAME"
	public explicit_type "String"
	init_value "=  \"System context\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Name of system context. 
"
      end

      attribute 332930 "SYSTEM_CONTEXT_DESCRIPTION"
	public explicit_type "String"
	init_value "=  \"Context for running system components of BEEN.\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Description of system context. 
"
      end

      attribute 333058 "URL"
	public explicit_type "String"
	init_value "=  \"/been/taskmanager\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " URL for control RMI interface. 
"
      end

      attribute 333186 "CONFIGURATION_FILE"
	public explicit_type "String"
	init_value "=  \"configuration.xml\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Name of configuration file for Task Manager. 
"
      end

      attribute 333314 "LOG_FILE"
	public explicit_type "String"
	init_value "=  \"log.xml\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Name of log file for Task Manager (failure recovery). 
"
      end

      attribute 333442 "DEFAULT_MAX_PACKAGE_CACHE_SIZE"
	public explicit_type "long"
	init_value "=  1024 * 1024 * 1024"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Default value of the size limit of the Host Runtime's package cache. 
 1 GB"
      end

      attribute 333570 "DEFAULT_KEPT_CLOSED_CONTEXT_COUNT"
	public explicit_type "int"
	init_value "=  3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Default value of the number of closed contexts, for which the Host Runtime
should keep data on the disk.

"
      end

      attribute 333698 "INFINITE_TIME"
	public explicit_type "long"
	init_value "=  -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Infinite time (especially used for methods with timeout).

"
      end

      attribute 333826 "TASKMANAGER_TASKNAME"
	public explicit_type "String"
	init_value "=  \"taskmanager\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
\"Fake\" task name for the Task Manager. It's used for storing the  
Task Manager's logs and output in the log storage. 

"
      end

      operation 685698 "stopTaskManager"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
End working of Task Manager.
"
      end

      operation 685826 "runTask"
	public explicit_return_type "void"
	nparams 1
	  param inout name "taskDescriptor" type class_ref 131074 // TaskDescriptor
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Run (schedule) one new task specified by its task descriptor.

@param taskDescriptor Task descriptor of new task to run.
@throws RemoteException If something failed during this operation.
"
      end

      operation 685954 "runTaskImmediately"
	public explicit_return_type "void"
	nparams 1
	  param inout name "taskDescriptor" type class_ref 131074 // TaskDescriptor
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Run (schedule) on new task specified by its task descriptor. If task can
be started immediately then it is, otherwise
{@link IllegalStateException} exception is thrown.
 
@param taskDescriptor Task descriptor of new task to run.
@throws RemoteException If something failed during this operation.
@throws IllegalStateException If task can not be started immediately.
"
      end

      operation 686082 "newContext"
	public explicit_return_type "String"
	nparams 3
	  param in name "name" explicit_type "String"
	  param in name "description" explicit_type "String"
	  param inout name "magicObject" type class_ref 148226 // Serializable
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create new context.

@param name Human readable name of context.
@param description Human readable description of context.
@param magicObject Some magic object (Serializable and Cloneable).
@return ID of context.
@throws RemoteException If something failed during this operation.
"
      end

      operation 686210 "newContext"
	public explicit_return_type "void"
	nparams 4
	  param in name "id" explicit_type "String"
	  param in name "name" explicit_type "String"
	  param in name "description" explicit_type "String"
	  param inout name "magicObject" type class_ref 148226 // Serializable
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create new context.

@param id ID of context.
@param name Human readable name of context.
@param description Human readable description of context.
@param magicObject Some magic object (Serializable and Cloneable).
@throws RemoteException If something failed during this operation.
"
      end

      operation 686338 "closeContext"
	public explicit_return_type "void"
	nparams 1
	  param in name "id" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Close context.

@param id ID of context.
@throws RemoteException If something failed during this operation.
"
      end

      operation 686466 "deleteContext"
	public explicit_return_type "void"
	nparams 1
	  param in name "id" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Deletes a context. Kills all it's tasks and removes it from the log
storage.

@param id id of the context
@throws RemoteException If something failed during this operation.
"
      end

      operation 686594 "getTasks"
	public return_type class_ref 184706 // TaskEntry
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Return informations about all tasks known inside Task Manager.

@return Array containing TaskEntry for each task.
@throws RemoteException If something failed during this operation.
"
      end

      operation 686722 "getTasksInContext"
	public return_type class_ref 184706 // TaskEntry
	nparams 1
	  param in name "contextId" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Return informations about all tasks known inside Task Manager as member
of specified context.

@param contextId ID of requested context.
@return Array conraining TaskEntry for each convenient task.
@throws RemoteException If something failed during this operation.
"
      end

      operation 686850 "getTasksOnHost"
	public return_type class_ref 184706 // TaskEntry
	nparams 1
	  param in name "hostName" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Return informations about all tasks known inside Task Manager as
scheduled on specified HostRuntime.

@param hostName URI of requested Host Runtime.
@return Array containing TaskEntry for each convenient task.
@throws RemoteException If something failed during this operation.
"
      end

      operation 686978 "getContexts"
	public return_type class_ref 206594 // ContextEntry
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Return informations about all contexts known inside Task Manager.

@return Array containing ContextEntry for each context.
@throws RemoteException If something failed during this operation.
"
      end

      operation 687106 "getTaskById"
	public return_type class_ref 184706 // TaskEntry
	nparams 2
	  param in name "taskId" explicit_type "String"
	  param in name "contextId" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Return informations about one task specified by its ID.

@param taskId ID of requested task.
@return TaskEntry filled in by informations about requested task	(null
	if requested task not found).
@throws RemoteException If something failed during this operation.
"
      end

      operation 687234 "getContextById"
	public return_type class_ref 206594 // ContextEntry
	nparams 1
	  param in name "contextId" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Return informations about one context specified by its ID.

@param contextId ID of requested context.
@return ContextEntry filled in by informations about requested context
	(null if requested task not found).
@throws RemoteException If something failed during this operation.
"
      end

      operation 687362 "killTaskById"
	public explicit_return_type "void"
	nparams 2
	  param in name "taskId" explicit_type "String"
	  param in name "contextId" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Kill task specified by its ID.

@param taskId ID of task.
@param contextId ID of context.
@throws RemoteException If something failed during this operation.
"
      end

      operation 687490 "killContextById"
	public explicit_return_type "void"
	nparams 1
	  param in name "contextId" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Kill all tasks within specified context and that context.

@param contextId ID of context.
@throws RemoteException If something failed during this operation.
"
      end

      operation 687618 "runTask"
	public explicit_return_type "void"
	nparams 1
	  param in name "taskDescriptorPaths" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Run (schedule) one or more new tasks specified by their task
descriptors (XML form).

@param taskDescriptorPaths Array containing paths to the XML
	representation of Task Descriptors.
@throws RemoteException If something failed during this operation.
"
      end

      operation 687746 "runTask"
	public explicit_return_type "void"
	nparams 1
	  param inout name "taskDescriptors" type class_ref 131074 // TaskDescriptor
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Run (schedule) one or more new tasks specified by their task
descriptors.

@param taskDescriptors Task descriptors of new tasks to run.
@throws RemoteException If something failed during this operation.
"
      end

      operation 687874 "checkPointLook"
	public return_type class_ref 148226 // Serializable
	nparams 4
	  param in name "name" explicit_type "String"
	  param in name "taskId" explicit_type "String"
	  param in name "contextId" explicit_type "String"
	  param in name "timeout" explicit_type "long"
	nexceptions 2
	  exception class_ref 205826 // TaskManagerException
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Do check point lookup. Tasks should not call this.
Returns last value of reached checkpoints matching specified taskId,
contextId and name. All values must be non-null and must match.

Calling of this method is blocking. If timeout is set to zero, then
return immediately.
@param name Name of checkpoint.
@param taskId ID of task which reached checkpoint.
@param contextId ID of context in which checkpoint was reached.
@param timeout Maximum time to wait in milliseconds.

@return Value of specified checkpoint (can be <code>null</code>).
@throws NullPointerException If some input parameter is null.
@throws IllegalArgumentException If checkpoint not found.
@throws TaskManagerException If Required checkPoint can not be reached
	anyway
@throws RemoteException If something failed during the execution of
	the remote method call.
"
      end

      operation 688002 "checkPointLook"
	public return_type class_ref 205698 // CheckPoint
	nparams 2
	  param inout name "checkpointTemplate" type class_ref 205698 // CheckPoint
	  param in name "timeout" explicit_type "long"
	nexceptions 2
	  exception class_ref 205826 // TaskManagerException
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Do check point lookup. Tasks should not call this.
Returns array containing all reached checkpoints matching specified
checkpointTemplate. All filled in values must match. Values set to
null are arbitrary.
Calling of this method is blocking. If timeout is set to zero, then
return immediately.

@param checkpointTemplate Prepared template for checkpoint match.
@param timeout Maximum time to wait in milliseconds.
@return Array containing all checkpoint matching specified
	checkpointTemplate.
@throws TaskManagerException If Required checkPoint can not be reached
	anyway
@throws RemoteException If something failed during the execution of
	the remote method call.
"
      end

      operation 688130 "serviceLook"
	public return_type class_ref 184578 // ServiceEntry
	nparams 1
	  param inout name "serviceTemplate" type class_ref 184578 // ServiceEntry
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Used for looking in service entries. Tasks should not call this.
Returns array containing all service entries matching specified template
(using regular expressions).

@param serviceTemplate Object looked describing services (using
	regular expressions).
@throws RemoteException If something failed during the execution of
	the remote method call.
"
      end

      operation 688258 "serviceFind"
	public explicit_return_type "Remote"
	nparams 2
	  param in name "serviceName" explicit_type "String"
	  param in name "interfaceName" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Used for finding some registered remote interface. Tasks should not call
this.
Given names are compared for exact match (doesn't use regular
expressions).

@param serviceName Name of service.
@param interfaceName Name of service's interface.
@return Remote representation of one from all matching interfaces
	or null if none.
@throws RemoteException If something failed during the execution of
	the remote method call.
"
      end

      operation 688386 "serviceFindURI"
	public explicit_return_type "URI"
	nparams 2
	  param in name "serviceName" explicit_type "String"
	  param in name "interfaceName" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Used for finding some registered remote interface. Tasks should not call
this.
Given names are compared for exact match (doesn't use regular
expressions).

@param serviceName Name of service.
@param interfaceName Name of service's interface.
@return URI representation of one from all matching interfaces or
	null if none.
@throws RemoteException If something failed during the execution of
	the remote method call.
"
      end

      operation 688514 "getLogsForTask"
	public return_type class_ref 184194 // LogRecord
	nparams 2
	  param in name "context" explicit_type "String"
	  param in name "taskID" explicit_type "String"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 184322 // LogStorageException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "NullPointerException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Gets all log messages produced by a task.

@param context task's context; cannot be null or an empty string.
@param taskID task's ID; cannot be null or an empty string.
@return logs of the task.
@throws RemoteException If something failed during the execution of
the remote method call.
@throws LogStorageException If an error occured while retrieving the logs.
@throws IllegalArgumentException If the the context name or task's ID are empty 
strings or if the task wasn't run.
@throws NullPointerException If any argument is <tt>null</tt>.
"
      end

      operation 688642 "getLogsForTask"
	public return_type class_ref 184194 // LogRecord
	nparams 4
	  param in name "context" explicit_type "String"
	  param in name "taskID" explicit_type "String"
	  param in name "first" explicit_type "long"
	  param in name "last" explicit_type "long"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 184322 // LogStorageException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "NullPointerException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Gets task's log messages which belong to an interval. The interval is
specified by log message indexes. To get the total number of log messages
of a task, use <code>getLogCountForTask</code>.
The task must've been registered in the log storage with 
<code>addTask</code> before.

@param context task's context; cannot be null or an empty string.
@param taskID task's ID; cannot be null or an empty string.
@param first the index of the first log message; it specifies the 
beginning of the interval of log messages that will be returned. The
index begins from 0.
@param last the index of the last log message; it specifies the 
end of the interval of log messages that will be returned. The
index begins from 0.
@return logs of the task.
@throws RemoteException 
@throws LogStorageException if an error occured while retrieving the logs.
@throws IllegalArgumentException if the the context name or task's ID are empty 
strings or if the task wasn't registered by <code>addTask()</code> yet.
@throws NullPointerException if any argument is <tt>null</tt>.
@see #getLogCountForTask(String, String)
"
      end

      operation 688770 "getLogCountForTask"
	public explicit_return_type "long"
	nparams 2
	  param in name "context" explicit_type "String"
	  param in name "taskID" explicit_type "String"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 184322 // LogStorageException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "NullPointerException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the number of log messages stored for a task. The task must've 
been registered in the log storage with <code>addTask</code> before.

@param context task's context; cannot be null or an empty string.
@param taskID task's ID; cannot be null or an empty string.
@return number of log messages.
@throws RemoteException 
@throws LogStorageException if an error occured while counting the log
messages.
@throws IllegalArgumentException if the the context name or task's ID are empty 
strings or if the task wasn't registered by <code>addTask()</code> yet.
@throws NullPointerException if any argument is <tt>null</tt>.
"
      end

      operation 688898 "isTaskRegistered"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "context" explicit_type "String"
	  param in name "taskID" explicit_type "String"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 184322 // LogStorageException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "NullPointerException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Checks whether the task was already registered in the log storage.

@param context context of the task; cannot be null or an empty string.
@param taskID task's ID; cannot be null or an empty string.
@return true if the task was already registered, false otherwise.
@throws RemoteException If something failed during the execution of
the remote method call.
@throws LogStorageException If an error occured checking the registration.
@throws IllegalArgumentException If the name of the context or the task's ID
are empty or if the context wasn't found.
@throws NullPointerException If the name of the context or the task's ID 
is <tt>null</tt>.
"
      end

      operation 689026 "isContextRegistered"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 184322 // LogStorageException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "NullPointerException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Checks whether the context was already registered in the log storage.

@param name context name; cannot be null or an empty string.
@throws RemoteException If something failed during the execution of
the remote method call.
@throws LogStorageException If an error occured while checking the registration.
@throws IllegalArgumentException If the name of the context is empty.
@throws NullPointerException  If the name of the context is <tt>null</tt>.
@return true If the context was already registered, false otherwise.
"
      end

      operation 689154 "getStandardOutput"
	public return_type class_ref 184450 // OutputHandle
	nparams 2
	  param in name "context" explicit_type "String"
	  param in name "taskID" explicit_type "String"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 184322 // LogStorageException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "NullPointerException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Creates a handle for receiving the standard output of a task. 

@param context task's context; cannot be null or an empty string.
@param taskID task's ID; cannot be null or an empty string.
@return handle for retrievind the standard output.
@throws RemoteException If something failed during the execution of
the remote method call.
@throws LogStorageException If an error occured while creating the handle.
@throws IllegalArgumentException If the the context name or task's ID are empty
or if the task or it's context wasn't found.
@throws NullPointerException If any argument is <tt>null</tt>.
"
      end

      operation 689282 "getErrorOutput"
	public return_type class_ref 184450 // OutputHandle
	nparams 2
	  param in name "context" explicit_type "String"
	  param in name "taskID" explicit_type "String"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 184322 // LogStorageException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "NullPointerException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Creates a handle for receiving the error output of a task. 

@param context task's context; cannot be null or an empty string.
@param taskID task's ID; cannot be null or an empty string.
@return handle for retrievind the error output.
@throws RemoteException If something failed during the execution of
the remote method call.
@throws LogStorageException If an error occured while creating the handle.
@throws IllegalArgumentException If the the context name or task's ID are empty
or if the task or it's context wasn't found.
@throws NullPointerException If any argument is <tt>null</tt>.
"
      end

      operation 689410 "getMaxPackageCacheSize"
	public explicit_return_type "long"
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the size limit of the Host Runtime's package cache.

@return size limit of the Host Runtime's package cache.
@throws RemoteException if something failed during the execution of
         the remote method call.
"
      end

      operation 689538 "setMaxPackageCacheSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "maxPackageCacheSize" explicit_type "long"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets the size limit of the Host Runtime's package cache. The setting will
be applied after downloading next package to the cache.

@param maxPackageCacheSize the size limit of the Host Runtime's package
        cache
@throws RemoteException if something failed during the execution of
         the remote method call.
"
      end

      operation 689666 "getKeptClosedContextCount"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the number of closed contexts, for which the Host Runtime should
keep data on the disk

@return number of closed contexts, for which the Host Runtime should keep
         data on the disk
@throws RemoteException if something failed during the execution of
         the remote method call.
"
      end

      operation 689794 "setKeptClosedContextCount"
	public explicit_return_type "void"
	nparams 1
	  param in name "keptClosedContextCount" explicit_type "int"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets the number of closed contexts, for which the Host Runtime
should keep data on the disk. The setting will be applied after next
context close operation.

@param keptClosedContextCount number of closed contexts, for which the
        Host Runtime should keep data on the disk
@throws RemoteException if something failed during the execution of
         the remote method call.
"
      end

      operation 689922 "registerHostRuntime"
	public explicit_return_type "void"
	nparams 1
	  param in name "hostname" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Registers new Host Runtime as available for running tasks and notifies
registered listeners about this event.

It is not an error to register same Host Runtime twice, as the Host Runtime
has no way of knowing if the host was alreday registered. 

@param hostname host where the new Host Runtime is running
@throws NullPointerException if the hostname is null
@throws RemoteException if something failed during the execution of
         the remote method call.
"
      end

      operation 690050 "unregisterHostRuntime"
	public explicit_return_type "void"
	nparams 1
	  param in name "hostName" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Unregisters existing Host Runtime as available for running tasks and
notifies registered listeners about this event. It is an error to
unregister the same Host Runtime twice.  

@param hostName host where the Host Runtime is running
@throws IllegalArgumentException if the Host Runtime was not registered
@throws NullPointerException if the hostname is null
@throws RemoteException if something failed during the execution of
         the remote method call.
"
      end

      operation 690178 "registerEventListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 162946 // HostRuntimeRegistrationListener
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Registers new listener of the Task Manager events.

@param listener RMI reference to the listener
@throws IllegalArgumentException if the listener was already registered
@throws NullPointerException if the listener is <code>null</code>
@throws RemoteException if something failed during the execution of
         the remote method call.
"
      end

      operation 690306 "unregisterEventListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 162946 // HostRuntimeRegistrationListener
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Unregisters existing listener of the Task Manager events.

@param listener RMI reference to the listener
@throws IllegalArgumentException if the listener was not registered
@throws NullPointerException if the listener is <code>null</code>
@throws RemoteException if something failed during the execution of
         the remote method call.
"
      end

      operation 690434 "getRegisteredHostRuntimes"
	public explicit_return_type "String"
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns list of registered Host Runtimes.

@return list of registered Host Runtimes
@throws RemoteException if something failed during the execution of
         the remote method call.
"
      end
    end

    class 131074 "TaskDescriptor"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Class representation of the XML task descriptor with methods for
manipulation.

@author Antonin Tomecek
"
      classrelation 265474 // <realization>
	relation 265474 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 265474 // <realization>
	  b parent class_ref 148226 // Serializable
      end

      class 206082 "BootTask"
	visibility public stereotype "enum"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 329730 "BENCHMARK_MANAGER"
	  public type class_ref 206082 // BootTask
	  cpp_decl ""
	  java_decl "  ${@}${name}(\"benchmarkmanager\"),${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 329858 "HOST_MANAGER"
	  public type class_ref 206082 // BootTask
	  cpp_decl ""
	  java_decl "  ${@}${name}(\"hostmanager\"),${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 329986 "SOFTWARE_REPOSITORY"
	  public type class_ref 206082 // BootTask
	  cpp_decl ""
	  java_decl "  ${@}${name}(\"softwarerepository\"),${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 330114 "RESULTS_REPOSITORY"
	  public type class_ref 206082 // BootTask
	  cpp_decl ""
	  java_decl "  ${@}${name}(\"resultsrepository\"),${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 330242 "TEST_MANAGER"
	  public type class_ref 206082 // BootTask
	  cpp_decl ""
	  java_decl "  ${@}${name}(\"testmanager\"),${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 330370 "DETECTOR_TASK"
	  public type class_ref 206082 // BootTask
	  cpp_decl ""
	  java_decl "  ${@}${name}(\"detectortask\"),${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 330498 "serviceName"
	  const_attribute private explicit_type "String"
	  stereotype "attribute"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 674818 "BootTask"
	  private explicit_return_type ""
	  nparams 1
	    param in name "serviceName" explicit_type "String"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 674946 "getName"
	  public explicit_return_type "String"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
@return BEEN package name of given boot task
"
	end
      end

      attribute 330626 "validateLog"
	private explicit_type "String"
	init_value "=  \"\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Log created by validate() method. 
"
      end

      attribute 330754 "taskId"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Task ID [#REQUIRED] 
"
      end

      attribute 330882 "contextId"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Context ID [#REQUIRED] 
"
      end

      attribute 331010 "taskName"
	private explicit_type "String"
	init_value "=  \"\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Human readable name of task. 
"
      end

      attribute 331138 "taskDescription"
	private explicit_type "String"
	init_value "=  \"\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Human readable description of task. 
"
      end

      attribute 331266 "taskArguments"
	private explicit_type "String"
	multiplicity "[]"
	init_value "=  new String[0]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Array of command-line arguments [#IMPLIED] 
"
      end

      attribute 331394 "javaOptions"
	private explicit_type "String"
	multiplicity "[]"
	init_value "=  new String[0]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Array of command-line options for JVM (for running new task)
[#IMPLIED] 
"
      end

      classrelation 265602 // taskExclusivity (<unidirectional association>)
	relation 265602 --->
	  a role_name "taskExclusivity" init_value "=  TaskExclusivity.NON_EXCLUSIVE" private
	    comment " Flag telling that this task should be exclusive. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 265602 // taskExclusivity (<unidirectional association>)
	  b parent class_ref 183554 // TaskExclusivity
      end

      attribute 331522 "taskProperties"
	private explicit_type "Properties"
	init_value "=  new Properties()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Special property pairs (key, value) for tasks. 
"
      end

      class 206210 "TaskPropertyObject"
	visibility public 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 265730 // <realization>
	  relation 265730 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 265730 // <realization>
	    b parent class_ref 148226 // Serializable
	end

	attribute 331650 "key"
	  private explicit_type "String"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Key of property. 
"
	end

	classrelation 265858 // value (<unidirectional association>)
	  relation 265858 --->
	    a role_name "value" private
	      comment " Value of property. 
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 265858 // value (<unidirectional association>)
	    b parent class_ref 148226 // Serializable
	end

	operation 675074 "TaskPropertyObject"
	  public explicit_return_type ""
	  nparams 2
	    param in name "key" explicit_type "String"
	    param inout name "value" type class_ref 148226 // Serializable
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Constructor of this class.

@param key Key of this property.
@param value Value of this property.
"
	end

	operation 675202 "setKey"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "key" explicit_type "String"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
Sets key of this property.

@param key New key of this property.
"
	end

	operation 675330 "setValue"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "value" type class_ref 148226 // Serializable
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
Sets value of this property

@param value New value of this property.
"
	end

	operation 675458 "getKey"
	  public explicit_return_type "String"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
Returns key of this property.

@return Key of this property.
"
	end

	operation 675586 "getValue"
	  public return_type class_ref 148226 // Serializable
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
Returnts value of this property.

@return Value of this property.
"
	end
      end

      classrelation 265986 // taskPropertyObjectList (<unidirectional association>)
	relation 265986 --->
	  stereotype "ArrayList"
	  a role_name "taskPropertyObjectList" init_value "=  new ArrayList<TaskPropertyObject>()" private
	    comment " List of task properties with object as value. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 265986 // taskPropertyObjectList (<unidirectional association>)
	  b parent class_ref 206210 // TaskPropertyObject
      end

      attribute 331778 "packageName"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Name of BEEN package to use for this task. 
"
      end

      classrelation 266114 // packageRsl (<unidirectional association>)
	relation 266114 --->
	  a role_name "packageRsl" init_value "=  null" private
	    comment " RSL description of BEEN package to use for this task. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 266114 // packageRsl (<unidirectional association>)
	  b parent class_ref 138242 // Condition
      end

      attribute 331906 "hostRuntimesAsTask"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " If set, use the same Host Runtime as used for another task. 
"
      end

      attribute 332034 "hostRuntimesName"
	private explicit_type "String"
	multiplicity "[]"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Hostnames of possible Host Runtime to use for running this task. 
"
      end

      classrelation 266242 // hostRuntimesRsl (<unidirectional association>)
	relation 266242 --->
	  a role_name "hostRuntimesRsl" init_value "=  null" private
	    comment " RSL description of Host Runtime for running of this task. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 266242 // hostRuntimesRsl (<unidirectional association>)
	  b parent class_ref 138242 // Condition
      end

      classrelation 266370 // dependencyCheckPoints (<unidirectional association>)
	relation 266370 --->
	  a role_name "dependencyCheckPoints" multiplicity "[]" init_value "=  new Dependency[0]" private
	    comment " List of dependencies based on check points. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 266370 // dependencyCheckPoints (<unidirectional association>)
	  b parent class_ref 143106 // Dependency
      end

      attribute 332162 "restartMax"
	private explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " How many restarts for this task are allowed. 
"
      end

      attribute 332290 "timeoutRun"
	private explicit_type "long"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " How long (in milliseconds) this task can run (from started to finished
state). Zero if not restricted.

"
      end

      attribute 332418 "detailedLoad"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Flag indicating if the task want to enable detailed load monitoring. 
"
      end

      attribute 332546 "detailedLoadInterval"
	private explicit_type "long"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " How often do detailed load monitoring (in milliseconds). Value 0 means \"use default\". 
"
      end

      operation 675714 "validate"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Check if this taskDescriptor is valid.

@return <code>true</code> if valid, <code>false</code> otherwise.
"
      end

      operation 675842 "validateGetLog"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Return log from last calling of method validate(). The validate() method
should be called before.

@return Log from last calling of method validate().
"
      end

      operation 675970 "setTaskId"
	public explicit_return_type "void"
	nparams 1
	  param in name "taskId" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets value of the \"taskId\" attribute of the \"taskDescriptor\" element.

@param taskId ID of task.
@throws NullPointerException If input parameter is <code>null</code>.
"
      end

      operation 676098 "setTaskName"
	public explicit_return_type "void"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets value of the \"name\" attribute of the \"taskDescriptor\" element.

@param name Human readable name.
@throws NullPointerException If input parameter is <code>null</code>.
"
      end

      operation 676226 "setTaskDescription"
	public explicit_return_type "void"
	nparams 1
	  param in name "description" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets value of the \"description\" attribute of the \"taskDescriptor\"
element.

@param description Human readable description.
@throws NullPointerException If input parameter is <code>null</code>.
"
      end

      operation 676354 "setContextId"
	public explicit_return_type "void"
	nparams 1
	  param in name "contextId" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets value of the \"contextId\" attribute of the \"taskDescriptor\" element.

@param contextId ID of context.
@throws NullPointerException If input parameter is <code>null</code>.
"
      end

      operation 676482 "addArguments"
	public explicit_return_type "void"
	nparams 1
	  param in name "argument" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Adds one argument to the end of currently specified command-line
arguments (i.e. \"arguments\" attribute of the \"taskDescriptor\"
element).

@param argument Argument to add.
"
      end

      operation 676610 "setArguments"
	public explicit_return_type "void"
	nparams 2
	  param in name "arguments" explicit_type "String"
	  param inout name "append" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets value of the \"arguments\" attribute of the \"taskDescriptor\" element.

@param arguments A space-delimited list of command-line arguments
	or null for none.
@param append If true then specifiead arguments are added to existing list
           else it is overwriten.
"
      end

      operation 676738 "addJavaOption"
	public explicit_return_type "void"
	nparams 1
	  param in name "option" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Adds one option to the end of currently specified list of java options.

@param option
           Java option to add.
"
      end

      operation 676866 "setJavaOptions"
	public explicit_return_type "void"
	nparams 2
	  param in name "options" explicit_type "String"
	  param inout name "append" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets value of the \"options\" attribute of the \"java\" element.

@param options Command-line options for JVM.
@param append If true then specified options are added to existing
	list else it is overwriten.
"
      end

      operation 676994 "setTaskExclusive"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exclusivity" type class_ref 183554 // TaskExclusivity
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets task's exclusivity flag.

@param exclusivity Value of task's exclusivity flag.
"
      end

      operation 677122 "addTaskProperties"
	public explicit_return_type "void"
	nparams 2
	  param in name "key" explicit_type "String"
	  param in name "value" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Adds one property (key-value pair) for this task.

@param key Key of new property.
@param value Value of new property.
"
      end

      operation 677250 "setTaskProperties"
	public explicit_return_type "void"
	nparams 1
	  param inout name "properties" explicit_type "Properties"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets key-value pairs of task's properties.

@param properties New definitions of properties.
"
      end

      operation 677378 "addTaskPropertyObject"
	public explicit_return_type "void"
	nparams 2
	  param in name "key" explicit_type "String"
	  param inout name "value" type class_ref 148226 // Serializable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Adds one property (with object as value) for this task.

@param key Key of new property.
@param value Value of new property.
"
      end

      operation 677506 "setPackageName"
	package explicit_return_type "void"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets content of \"name\" element within \"package\" element.

@param name Name of package to use for this task.
@throws NullPointerException If input parameter is <code>null</code>
@throws IllegalArgumentException If input parameter is empty string.
"
      end

      operation 677634 "setPackageRsl"
	public explicit_return_type "void"
	nparams 1
	  param inout name "rsl" type class_ref 138242 // Condition
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets content of \"rsl\" element within \"package\" element.

@param rsl RSL description of package.
@throws NullPointerException If input parameter is <code>null</code>
@throws IllegalArgumentException If input parameter is empty string.
"
      end

      operation 677762 "addHostRuntimesName"
	protected explicit_return_type "void"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Adds one name to list of usable host for running of this task. (I.e.
content of \"name\" element within \"hostRuntimes\" element.)

@param name Name of host for running of this task.
"
      end

      operation 677890 "setHostRuntimesAsTask"
	public explicit_return_type "void"
	nparams 1
	  param in name "taskId" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets hostRuntime in way: \"use the same hostRuntime as task with ID
<code>taskId</code>\".
It also adds START-dependency on referenced task to avoid starting
this task before the referenced task.

@param taskId ID of task determining hostRuntime.
"
      end

      operation 678018 "setHostRuntimesName"
	public explicit_return_type "void"
	nparams 1
	  param in name "names" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets content of \"name\" element within \"hostRuntimes\" element.
(Owerwrites all previously specified names.)

@param names Names of hosts usable for running of this task.
"
      end

      operation 678146 "setHostRuntimesRsl"
	public explicit_return_type "void"
	nparams 1
	  param inout name "rsl" type class_ref 138242 // Condition
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets content of \"rsl\" element within \"hostRuntimes\" element.

@param rsl RSL condition for host.
"
      end

      operation 678274 "addDependencyCheckPoint"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dependencyCheckPoint" type class_ref 143106 // Dependency
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Adds one dependency based on the check point.

@param dependencyCheckPoint Dependency check point to add.
"
      end

      operation 678402 "setDependencyCheckPoints"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dependencyCheckPoints" type class_ref 143106 // Dependency
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets values of all attributes of all dependencies based on check points.
 
@param dependencyCheckPoints Array with definitions of
	DependencyCheckPoints.
"
      end

      operation 678530 "getTaskTid"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns value of the \"taskId\" attribute of the \"taskDescriptor\" element.

@return Value of the \"taskId\" attribute.
"
      end

      operation 678658 "getTaskName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns value of the \"name\" attribute of the \"taskDescriptor\" element.

@return Human readable name.
"
      end

      operation 678786 "getTaskDescription"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns value of the \"description\" attribute of the \"taskDescriptor\"
element.

@return Human readable value.
"
      end

      operation 678914 "getContextId"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns value of the \"contextId\" attribute of the \"taskDescriptor\"
element.

@return Value of the \"contextId\" attribute.
"
      end

      operation 679042 "getTaskArguments"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns command-line arguments from the \"arguments\" attribute of the
\"taskDescriptor\" element.

@return Array corresponding to the \"arguments\" attribute.
"
      end

      operation 679170 "getJavaOptions"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns value of the \"javaOptions\" attribute of the \"java\" element.

@return Array corresponding to the \"javaOptions\" attribute.
"
      end

      operation 679298 "getTaskExclusive"
	public return_type class_ref 183554 // TaskExclusivity
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns state of task exclusive flag (i.e. \"exclusive\" attribute of
\"task\" element).

@return The task exclusive flag.
"
      end

      operation 679426 "getTaskProperties"
	public explicit_return_type "Properties"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns definition of the \"taskProperties\".

@return Properties defined for this task.
"
      end

      operation 679554 "getTaskPropertyObjects"
	public return_type class_ref 206210 // TaskPropertyObject
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns array of all defined taskPropertyObjects.

@return Array of taskPropertyObjects.
"
      end

      operation 679682 "getPackageName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns content of \"name\" element within \"package\" element.

@return Content of \"name\" element within \"package\" element (may be
	<code>null</code> if name is not evaluated from RSL yet or no matching
	was founded).
"
      end

      operation 679810 "getPackageRsl"
	public return_type class_ref 138242 // Condition
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns content of \"rsl\" element within \"package\" element.

@return Content of \"rsl\" element within \"package\" element.
"
      end

      operation 679938 "getHostRuntimesAsTask"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Gets hostRuntime in way: \"use the same hostRuntime as task with ID
<code>taskId</code>\" (if it was specified).

@return ID of task determining hostRuntime.
"
      end

      operation 680066 "getHostRuntimesName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns contents of \"name\" elements within \"hostRuntimes\" element.

@return Contents of \"name\" elements within \"hostRuntimes\" element (may
	be <code>null</code> if names are not evaluated from RSL yet or no
	matching were founded).
"
      end

      operation 680194 "getHostRuntimesRsl"
	public return_type class_ref 138242 // Condition
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns content of \"rsl\" element within \"hostRuntimes\" element.

@return Content of \"rsl\" elements within \"histRuntimes\" element.
"
      end

      operation 680322 "getDependencyCheckPoints"
	public return_type class_ref 143106 // Dependency
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns definitions of all DependencyCheckPoints.

@return Array of objects representing DependencyCheckPoint.
"
      end

      operation 680450 "getRestartMax"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return how many restarts for this task are allowed "
      end

      operation 680578 "setRestartMax"
	public explicit_return_type "void"
	nparams 1
	  param in name "restartMax" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets how many restarts for this task are allowed.

@param restartMax number of allowed restarts
"
      end

      operation 680706 "getTimeoutRun"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return how long (in milliseconds) this task can run (from started to
finished state). Zero if not restricted
"
      end

      operation 680834 "setTimeoutRun"
	public explicit_return_type "void"
	nparams 1
	  param in name "timeoutRun" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets how long (in milliseconds) this task can run (from started to finished
state).

@param timeoutRun how long (in milliseconds) this task can run (from
        started to finished state); zero if not restricted
"
      end

      operation 680962 "getDetailedLoad"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return flag indicating if the task want to enable detailed load
         monitoring
"
      end

      operation 681090 "setDetailedLoad"
	public explicit_return_type "void"
	nparams 1
	  param inout name "detailedLoad" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets the flag indicating if the task want to enable detailed load
monitoring.

@param detailedLoad flag indicating if the task want to enable detailed
        load monitoring
"
      end

      operation 681218 "getDetailedLoadInterval"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Return how often do detailed load monitoring (in milliseconds). Value 0
means \"use default\".

@return How often do detailed load monitoring (in milliseconds). Value 0
         means \"use default\".
"
      end

      operation 681346 "setDetailedLoadInterval"
	public explicit_return_type "void"
	nparams 1
	  param in name "detailedLoadInterval" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Set how often do detailed load monitoring (in milliseconds). Value 0 means
\"use default\".

@param detailedLoadInterval How often do detailed load monitoring (in
	milliseconds). Value 0 means \"use default\".
"
      end

      operation 681474 "TaskDescriptor"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Constructor required by Serializable.
"
      end

      operation 681602 "TaskDescriptor"
	public explicit_return_type ""
	nparams 4
	  param in name "taskId" explicit_type "String"
	  param in name "contextId" explicit_type "String"
	  param inout name "packageRsl" type class_ref 138242 // Condition
	  param inout name "hostRuntimesRsl" type class_ref 138242 // Condition
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create new TaskDescriptor.

@param taskId Identification of the task.
@param contextId ID of the context task should run in.
@param packageRsl RSL condition for package.
@param hostRuntimesRsl RSL condition for hostRuntimes.
"
      end

      operation 681730 "TaskDescriptor"
	public explicit_return_type ""
	nparams 4
	  param in name "taskId" explicit_type "String"
	  param in name "contextId" explicit_type "String"
	  param inout name "packageRsl" type class_ref 138242 // Condition
	  param in name "hostTaskId" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create new TaskDescriptor.

@param taskId Identification of the task.
@param contextId ID of the context task should run in.
@param packageRsl RSL condition for package.
@param hostTaskId ID of task determining hostRuntime.
"
      end

      operation 681858 "TaskDescriptor"
	private explicit_return_type ""
	nparams 2
	  param inout name "beenService" type class_ref 206082 // BootTask
	  param in name "host" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Creates task descriptor for BEEN service.

@param beenService	String identification of BEEN service
@param host	Host on which the service should run

@see BeenService
"
      end

      operation 681986 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Brief implementation of toString(), used for debugging purposes
"
      end

      operation 682114 "createBootTask"
	class_operation public return_type class_ref 131074 // TaskDescriptor
	nparams 2
	  param in name "bootTask" explicit_type "String"
	  param in name "host" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Factory method for creating BEEN boot tasks. Boot packages are placed
in HostRuntime's boot directory.

As among boot tasks are also HostManager and SoftwareManager i.e. BEEN
services that expand RSL for regular tasks, boot tasks don't use
RSL in their tasks descriptors neither for hosts not for package
specification. Instead directly package name and host name will be
specified in the task descriptor

@param bootTask	name of boot tasks to start
@param host		host name on which the boot task should run

@see BootTask
"
      end

      operation 682242 "createDetector"
	class_operation public return_type class_ref 131074 // TaskDescriptor
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "host" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Creates task descriptor for a detector task
Can't be done via {@link #createBootTask(String, String)} call because we
need detetctor task identifier to determine task package, but also unqiue
task identifier so that it every time in separate directory 

@param name 	unique name of detector task
@param host	host on which the task should run
@return	task descriptor for the detector task
"
      end

      operation 682370 "createTask"
	class_operation public return_type class_ref 131074 // TaskDescriptor
	nparams 4
	  param in name "taskID" explicit_type "String"
	  param in name "taskName" explicit_type "String"
	  param in name "context" explicit_type "String"
	  param inout name "hostRSL" type class_ref 138242 // Condition
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Utility method for creating tasks for regular tasks.
The method creates TaskDescriptor using RSL for matching hosts and 
task package. Task package match is based on task name.

@param taskID	identifier of a task to created
@param taskName	name of task to create
@param context	identifier of a context to create
@param hostRSL	RSL to match target hosts
@return	corresponding TaskDescriptor for the task
"
      end
    end

    class 143106 "Dependency"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 264962 // <realization>
	relation 264962 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 264962 // <realization>
	  b parent class_ref 148226 // Serializable
      end

      attribute 328450 "taskId"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " TaskID of prerequisite task. 
"
      end

      attribute 328578 "type"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Type of reached check point in prerequisite task. 
"
      end

      classrelation 265090 // value (<unidirectional association>)
	relation 265090 --->
	  a role_name "value" init_value "=  null" private
	    comment " Value of reached check point in prerequisite task. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 265090 // value (<unidirectional association>)
	  b parent class_ref 148226 // Serializable
      end

      operation 669186 "Dependency"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Constructor needed by Serializable.
"
      end

      operation 669314 "Dependency"
	public explicit_return_type ""
	nparams 3
	  param in name "taskID" explicit_type "String"
	  param in name "type" explicit_type "String"
	  param inout name "value" type class_ref 148226 // Serializable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Creates a new instance of Dependency class.

@param taskID TaskID of prerequisite task.
@param type Type of reached check point in prerequisite task.
@param value Value of reached check point in prerequisite task.
"
      end

      operation 669442 "Dependency"
	public explicit_return_type ""
	nparams 2
	  param in name "taskID" explicit_type "String"
	  param in name "type" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Constructs new dependency on task identified by <code>taskID</code> and
checkpoint <code>type</code> which may be reached with arbitrary value.

@param taskID TaskId of dependency
@param type name of checkpoint
"
      end

      operation 669570 "clone"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Creates and returns a copy of this object.

@return A clon of this instance.
"
      end

      operation 669698 "setTaskId"
	public explicit_return_type "void"
	nparams 1
	  param in name "taskID" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets TaskID of prerequisite task.

@param taskID TaskID of prerequisite task.
"
      end

      operation 669826 "setType"
	public explicit_return_type "void"
	nparams 1
	  param in name "type" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets type of reached check point in prerequisite task.

@param type Type of reached check point in prerequisite
	task.
"
      end

      operation 669954 "setValue"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 148226 // Serializable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets value of reached check point in prerequisite task.

@param value Value of reached check point in prerequisite
	task.
"
      end

      operation 670082 "getTaskId"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Gets TaskID of prerequisite task.

@return TaskID of prerequisite task.
"
      end

      operation 670210 "getType"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Gets type of reached check point in prerequisite task.

@return Type of reached check point in prerequisite task.
"
      end

      operation 670338 "getValue"
	public return_type class_ref 148226 // Serializable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Gets value of reached check point in prerequisite task.

@return Value of reached check point in prerequisite task.
"
      end
    end

    class 184578 "ServiceEntry"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Class representing one entry for service lookup.

@author Antonin Tomecek
"
      classrelation 265346 // <realization>
	relation 265346 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 265346 // <realization>
	  b parent class_ref 148226 // Serializable
      end

      attribute 328706 "serviceName"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Name of registered service. 
"
      end

      attribute 328834 "interfaceName"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Name of registered service's RMI interface. 
"
      end

      attribute 328962 "rmiAddress"
	private explicit_type "URI"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " URI of registered RMI interface. 
"
      end

      attribute 329090 "remoteInterface"
	private explicit_type "Remote"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Representation of remote interface. 
"
      end

      attribute 329218 "contextId"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Context ID of the service 
"
      end

      attribute 329346 "taskId"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Task ID of the service 
"
      end

      operation 672258 "ServiceEntry"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Creates a new (empty) ServiceEntry.
This constructor is needed by Serializable.
"
      end

      operation 672386 "ServiceEntry"
	public explicit_return_type ""
	nparams 6
	  param in name "serviceName" explicit_type "String"
	  param in name "interfaceName" explicit_type "String"
	  param inout name "rmiAddress" explicit_type "URI"
	  param inout name "remoteInterface" explicit_type "Remote"
	  param in name "contextId" explicit_type "String"
	  param in name "taskId" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Creates a new ServiceEntry instance so that it is initialized by
specified values.

@param serviceName Name of service.
@param interfaceName Name of service's interface.
@param rmiAddress URI of RMI interface.
@param remoteInterface the remote interface.
@param contextId context ID of the service.
@param taskId task ID of the service.
"
      end

      operation 672514 "setServiceName"
	public explicit_return_type "void"
	nparams 1
	  param in name "serviceName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets name of service.

@param serviceName Name of service.
"
      end

      operation 672642 "setInterfaceName"
	public explicit_return_type "void"
	nparams 1
	  param in name "interfaceName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets name of service's interface.

@param interfaceName Name of service's interface.
"
      end

      operation 672770 "setRmiAddress"
	public explicit_return_type "void"
	nparams 1
	  param inout name "rmiAddress" explicit_type "URI"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets URI of RMI interface.

@param rmiAddress URI of RMI interface.
"
      end

      operation 672898 "setRemoteInterface"
	public explicit_return_type "void"
	nparams 1
	  param inout name "remoteInterface" explicit_type "Remote"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets reference for a remote object.

@param remoteInterface Reference for a remote object.
"
      end

      operation 673026 "getServiceName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns name of service.

@return Name of service.
"
      end

      operation 673154 "getInterfaceName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns name of service's interface.

@return Name of service's interface.
"
      end

      operation 673282 "getRmiAddress"
	public explicit_return_type "URI"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns URI of RMI interface.

@return URI of RMI interface.
"
      end

      operation 673410 "getRemoteInterface"
	public explicit_return_type "Remote"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns reference for a remote object.

@return Reference for a remote object.
"
      end

      operation 673538 "getContextId"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return the context ID of the service.
"
      end

      operation 673666 "setContextId"
	public explicit_return_type "void"
	nparams 1
	  param in name "contextId" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@param contextId the context ID of the service.
"
      end

      operation 673794 "getTaskId"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return the task ID of the service.
"
      end

      operation 673922 "setTaskId"
	public explicit_return_type "void"
	nparams 1
	  param in name "taskId" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@param taskId the task ID of the service.
"
      end

      operation 674050 "clone"
	protected return_type class_ref 184578 // ServiceEntry
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Creates and returns a copy of this object.

@return A clon of this instance.
"
      end

      operation 674178 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " (non-Javadoc)
@see java.lang.Object#hashCode()
"
      end

      operation 674306 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " (non-Javadoc)
@see java.lang.Object#equals(java.lang.Object)
"
      end
    end

    class 205698 "CheckPoint"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Class representing checkpoint in BEEN

@author Antonin Tomecek
"
      classrelation 264706 // <realization>
	relation 264706 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 264706 // <realization>
	  b parent class_ref 148226 // Serializable
      end

      attribute 327938 "taskId"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 328066 "contextId"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 328194 "name"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 264834 // value (<unidirectional association>)
	relation 264834 --->
	  a role_name "value" init_value "=  null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 264834 // value (<unidirectional association>)
	  b parent class_ref 148226 // Serializable
      end

      attribute 328322 "hostName"
	private explicit_type "String"
	init_value "=  \"localhost\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " OMFG"
      end

      operation 668034 "CheckPoint"
	public explicit_return_type ""
	nparams 4
	  param in name "taskId" explicit_type "String"
	  param in name "contextId" explicit_type "String"
	  param in name "name" explicit_type "String"
	  param in name "value" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocate new CheckPoint with specified parameters.

@param taskId ID of task.
@param contextId ID of context.
@param name Name of checkpoint or null.
@param value Value of checkpoint or null.
"
      end

      operation 668162 "CheckPoint"
	public explicit_return_type ""
	nparams 4
	  param in name "taskId" explicit_type "String"
	  param in name "contextId" explicit_type "String"
	  param in name "type" explicit_type "String"
	  param inout name "value" type class_ref 148226 // Serializable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocate new CheckPoint with specified parameters.

@param taskId ID of task.
@param contextId ID of context.
@param type Type of checkpoint or null.
@param value Value of checkpoint or null.
"
      end

      operation 668290 "setHostName"
	public explicit_return_type "void"
	nparams 1
	  param in name "hostName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Set name of host running Host Runtime.

@param hostName Name of host running Host Runtime.
"
      end

      operation 668418 "getTaskId"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get ID of task.

@return ID of task.
"
      end

      operation 668546 "getContextId"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get ID of context.

@return ID of context.
"
      end

      operation 668674 "getName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get name of checkpoint.

@return Name of checkpoint.
"
      end

      operation 668802 "getValue"
	public return_type class_ref 148226 // Serializable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get value of checkpoint.

@return Value of checkpoint.
"
      end

      operation 668930 "getHostName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get name of host running Host Runtime.

@return Name of host running Host Runtime.
"
      end

      operation 669058 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 205954 "SystemOutput"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Class containing methods for system (standard or error) output. This methods
support verbosity defined as string representation of decimal number saved
in system property \"been.verbose\" (greater number means greater verbosity).

@author Antonin Tomecek
"
      operation 674434 "SystemOutput"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 329474 "VERBOSE_PROPERTY"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"been.verbose\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Name of property defining level of verbosity. 
"
      end

      attribute 329602 "DEFAULT_LEVEL"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Level to use if no other is specified. 
"
      end

      operation 674562 "getVerbosityLevel"
	class_operation public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Return verbosity level for output.

@return Level of verbosity.
"
      end

      operation 674690 "setVerbosityLevel"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "level" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Set verbosity level for output.

@param level
"
      end
    end

    class 206338 "TaskDescriptorXmlParser"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Class for parsing XML file with TaskDescriptor.

@author Antonin Tomecek
"
      operation 683010 "TaskDescriptorXmlParser"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 683138 "parsePCDATA"
	class_operation private explicit_return_type "String"
	nparams 1
	  param inout name "elementWithPCDATA" explicit_type "Element"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Parse PCDATA from element containing it.

@param elementWithPCDATA Element containing CDATA.
@return <code>String</code> representation of CDATA.
"
      end

      operation 683266 "parseElementLoadMonitoring"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "loadMonitoringElement" explicit_type "Element"
	  param inout name "taskDescriptor" type class_ref 131074 // TaskDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Parse element <code>loadMonitoring</code>.
Causes parsing of all descendant elements of this element.

@param loadMonitoringElement DOM <code>Element</code> to be parsed.
@param taskDescriptor <code>TaskDescriptor</code> to be set.
"
      end

      operation 683394 "parseElementFailurePolicy"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "failurePolicyElement" explicit_type "Element"
	  param inout name "taskDescriptor" type class_ref 131074 // TaskDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Parse element <code>failurePolicy</code>.
Causes parsing of all descendant elements of this element.

@param failurePolicyElement DOM <code>Element</code> to be parsed.
@param taskDescriptor <code>TaskDescriptor</code> to be set.
"
      end

      operation 683522 "parseElementDependencyCheckPoint"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "dependencyCheckPointElement" explicit_type "Element"
	  param inout name "taskDescriptor" type class_ref 131074 // TaskDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Parse element <code>dependencyCheckPoint</code>.
Causes parsing of all descendant elements of this element.

@param dependencyCheckPointElement DOM <code>Element</code> to be
	parsed.
@param taskDescriptor <code>TaskDescriptor</code> to be set.
"
      end

      operation 683650 "parseElementDependencies"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "dependenciesElement" explicit_type "Element"
	  param inout name "taskDescriptor" type class_ref 131074 // TaskDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Parse element <code>dependencies</code>.
Causes parsing of all descendant elements of this element.

@param dependenciesElement DOM <code>Element</code> to be parsed.
@param taskDescriptor <code>TaskDescriptor</code> to be set.
"
      end

      operation 683778 "parseElementHostRuntimes"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "hostRuntimesElement" explicit_type "Element"
	  param inout name "taskDescriptor" type class_ref 131074 // TaskDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Parse element <code>hostRuntime</code>.
Causes parsing of all descendant elements of this element.

@param hostRuntimesElement DOM <code>Element</code> to be parsed.
@param taskDescriptor <code>TaskDescriptor</code> to be set.
"
      end

      operation 683906 "parseElementPackage"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "packageElement" explicit_type "Element"
	  param inout name "taskDescriptor" type class_ref 131074 // TaskDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Parse element <code>package</code>.
Causes parsing of all descendant elements of this element.

@param packageElement DOM <code>Element</code> to be parsed.
@param taskDescriptor <code>TaskDescriptor</code> to be set.
"
      end

      operation 684034 "parseElementTaskProperty"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "taskPropertyElement" explicit_type "Element"
	  param inout name "taskDescriptor" type class_ref 131074 // TaskDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Parse element <code>taskProperty</code>.
Causes parsing of all descendant elements of this element.

@param taskProperty DOM <code>Element</code> to be parsed.
@param taskDescriptor <code>TaskDescriptor</code> to be set.
"
      end

      operation 684162 "parseElementTaskProperties"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "taskPropertiesElement" explicit_type "Element"
	  param inout name "taskDescriptor" type class_ref 131074 // TaskDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Parse element <code>taskProperties</code>.
Causes parsing of all descendant elements of this element.

@param taskProperties DOM <code>Element</code> to be parsed.
@param taskDescriptor <code>TaskDescriptor</code> to be set.
"
      end

      operation 684290 "parseElementJavaOptions"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "javaOptionsElement" explicit_type "Element"
	  param inout name "taskDescriptor" type class_ref 131074 // TaskDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Parse element <code>JavaOptions</code>.
Causes parsing of all descendant elements of this element.

@param javaOptionsElement DOM <code>Element</code> to be parsed.
@param taskDescriptor <code>TaskDescriptor</code> to be set.
"
      end

      operation 684418 "parseElementJava"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "javaElement" explicit_type "Element"
	  param inout name "taskDescriptor" type class_ref 131074 // TaskDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Parse element <code>java</code>.
Causes parsing of all descendant elements of this element.

@param javaElement DOM <code>Element</code> to be parsed.
@param taskDescriptor <code>TaskDescriptor</code> to be set.
"
      end

      operation 684546 "parseElementArguments"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "argumentsElement" explicit_type "Element"
	  param inout name "taskDescriptor" type class_ref 131074 // TaskDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Parse element <code>arguments</code>.
Causes parsing of all descendant elements of this element.

@param argumentsElement DOM <code>Element</code> to be parsed.
@param taskDescriptor <code>TaskDescriptor</code> to be set.
"
      end

      operation 684674 "parseElementTaskDescriptor"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "taskDescriptorElement" explicit_type "Element"
	  param inout name "taskDescriptor" type class_ref 131074 // TaskDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Parse element <code>taskDescriptor</code>.
Causes parsing of all descendant elements of this element.

@param taskDescriptorElement DOM <code>Element</code> to be parsed.
@param taskDescriptor <code>TaskDescriptor</code> to be set.
"
      end

      operation 684802 "parseDocument"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "document" explicit_type "Document"
	  param inout name "taskDescriptor" type class_ref 131074 // TaskDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Parse DOM <code>Document</code> representation of TaskDescriptor and do
appropriate settings of TaskDescriptor.
Causes parsing of all descendant elements of this element.

@param document DOM <code>Document</code> to be parsed.
@param taskDescriptor <code>TaskDescriptor</code> to be set.
"
      end

      operation 684930 "parseXmlTaskDescriptor"
	class_operation public return_type class_ref 131074 // TaskDescriptor
	nparams 1
	  param inout name "xmlFile" explicit_type "InputStream"
	nexceptions 1
	  exception class_ref 143618 // TaskDescriptorException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Gets XML file representation of TaskDescriptor and returns object
representation of it.

@param xmlFile input stream containing the XML representation of the
        TaskDescriptor
@return Object representation of TaskDescriptor.
@throws TaskDescriptorException If something failed.
"
      end

      operation 685058 "parseXmlTaskDescriptor"
	class_operation public return_type class_ref 131074 // TaskDescriptor
	nparams 1
	  param inout name "xmlFile" explicit_type "File"
	nexceptions 1
	  exception class_ref 143618 // TaskDescriptorException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Gets XML file representation of TaskDescriptor and returns object
representation of it.

@param xmlFile XML file representation of TaskDescriptor.
@return Object representation of TaskDescriptor.
@throws TaskDescriptorException If something failed.
"
      end
    end

    class 206466 "TaskManagerImplementation"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Implementation of Task Manager (main class).

@author Antonin Tomecek
"
      classrelation 266754 // <generalisation>
	relation 266754 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 266754 // <generalisation>
	  b parent class_ref 130178 // UnicastRemoteObject
      end

      classrelation 267010 // <realization>
	relation 267010 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 267010 // <realization>
	  b parent class_ref 181762 // TaskManagerInterface
      end

      classrelation 267138 // <realization>
	relation 267138 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 267138 // <realization>
	  b parent class_ref 181506 // HostRuntimesPortInterface
      end

      attribute 333954 "RESCUE_DIR_NAME"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"rescue\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 334082 "configurationFile"
	const_attribute private explicit_type "File"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Path where TM's configuration file should be stored.
Initialised by constructor. 
"
      end

      classrelation 267266 // data (<unidirectional association>)
	relation 267266 --->
	  a role_name "data" private
	    comment " Object storing data of Task Manager. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 267266 // data (<unidirectional association>)
	  b parent class_ref 206722 // Data
      end

      attribute 334210 "rootDirectory"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Path to the root directory for Task Manager's files. 
"
      end

      classrelation 267394 // logStorage (<unidirectional association>)
	relation 267394 --->
	  a role_name "logStorage" init_value "=  null" private
	    comment " Log storage component 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 267394 // logStorage (<unidirectional association>)
	  b parent class_ref 185218 // LogStorage
      end

      classrelation 267522 // logLevel (<unidirectional association>)
	relation 267522 --->
	  a role_name "logLevel" private
	    comment " Log level of the Task Manager. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 267522 // logLevel (<unidirectional association>)
	  b parent class_ref 129666 // LogLevel
      end

      classrelation 267650 // serviceRegistry (<unidirectional association>)
	relation 267650 --->
	  stereotype "LinkedList"
	  a role_name "serviceRegistry" init_value "=  new LinkedList<ServiceEntry>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 267650 // serviceRegistry (<unidirectional association>)
	  b parent class_ref 184578 // ServiceEntry
      end

      classrelation 267778 // checkPointWaitingObject (<unidirectional association>)
	relation 267778 --->
	  a role_name "checkPointWaitingObject" init_value "=  new CheckPoint(null, null, null, null)" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 267778 // checkPointWaitingObject (<unidirectional association>)
	  b parent class_ref 205698 // CheckPoint
      end

      attribute 334338 "maxPackageCacheSize"
	private explicit_type "long"
	init_value "=  DEFAULT_MAX_PACKAGE_CACHE_SIZE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Size limit of the Host Runtime's package cache.

"
      end

      attribute 334466 "keptClosedContextCount"
	private explicit_type "int"
	init_value "=  DEFAULT_KEPT_CLOSED_CONTEXT_COUNT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Number of closed contexts, for which the Host Runtime should keep data on
the disk.

"
      end

      classrelation 267906 // registrationListeners (<unidirectional association>)
	relation 267906 --->
	  stereotype "ArrayList"
	  a role_name "registrationListeners" private
	    comment "
Listeners on Host Runtime registrations and unregistration events.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 267906 // registrationListeners (<unidirectional association>)
	  b parent class_ref 162946 // HostRuntimeRegistrationListener
      end

      attribute 334594 "random"
	class_attribute const_attribute private explicit_type "Random"
	init_value "=  new Random(System.currentTimeMillis())"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Random number generator 
"
      end

      operation 690562 "deleteRecursive"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "file" explicit_type "File"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Delete file or directory (recursively) specified by <code>file</code>.

@param file File or directory to be removed.
@throws NullPointerException If input parameter is <code>null</code>.
@throws IllegalArgumentException If file is unknown thing...
"
      end

      operation 690690 "storeConfiguration"
	private explicit_return_type "void"
	nparams 1
	  param inout name "configurationFile" explicit_type "File"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Store configuration to configuration file.

@param conigurationFile XML file for storing configuration.
"
      end

      operation 690818 "loadConfiguration"
	private explicit_return_type "void"
	nparams 1
	  param inout name "configurationFile" explicit_type "File"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Load configuration from configuration file.

@param configurationFile XML file for loading configuration.
@throws IllegalArgumentException If <code>configurationFile</code> could
	not be parsed for some reason.
"
      end

      operation 690946 "reinitializeDataWhenRescue"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
This method should be called after <code>Data</code> object is rescued.
It fills (updates) remote interfaces for tasks.
"
      end

      operation 691074 "TaskManagerImplementation"
	protected explicit_return_type ""
	nparams 2
	  param in name "rootDirectory" explicit_type "String"
	  param inout name "level" type class_ref 129666 // LogLevel
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Creates a new Task Manager instance and
handles RemoteException thrown by implicit super constructor.

@param rootDirectory Root directory for Task Manager.
@param level Log level of the Task Manager.
@throws RemoteException If something failed during the execution of
	the remote method call.
"
      end

      operation 691202 "stopTaskManager"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
End working of Task Manager.
"
      end

      operation 691330 "stopTaskManagerAndHostRuntimes"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
End working of Task Manager and of all known Host Runtimes.
"
      end

      operation 691458 "selectHostRuntime"
	private explicit_return_type "String"
	nparams 2
	  param inout name "task" type class_ref 206850 // TaskData
	  param in name "hosts" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Selects a Host Runtime for a task.

@param task the task.
@param hosts	possible hosts.
@return host name of the selected Host Runtime.
"
      end

      operation 691586 "isTaskReadyToRun"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "taskEntry" type class_ref 184706 // TaskEntry
	  param inout name "taskData" type class_ref 206850 // TaskData
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Test if task is ready to run (exclusivity, dependencies, ...).

@param taskEntry <code>TaskEntry</code> of checked task.
@param taskData <code>TaskData</code> of checked task.
@return <code>true</code> if task is ready to run, <code>false</code>
	otherwise.
"
      end

      operation 691714 "runTaskIfReady"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "taskEntry" type class_ref 184706 // TaskEntry
	  param inout name "taskData" type class_ref 206850 // TaskData
	nexceptions 1
	  exception class_ref 205826 // TaskManagerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Test if task is ready to run and start it.

@param taskEntry <code>TaskEntry</code> of checked task.
@param taskData <code>TaskData</code> of checked task.
@return <code>true</code> if task started, <code>false</code> otherwise.
"
      end

      operation 691842 "runAllReadyTasks"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 205826 // TaskManagerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Test all <code>SUBMITTED</code> tasks and run all ready of them.
"
      end

      operation 691970 "runTask"
	public explicit_return_type "void"
	nparams 1
	  param in name "taskDescriptorPaths" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Run (schedule) one or more new tasks specified by their task
descriptors (XML form).

@param taskDescriptorPaths Array containing paths to the XML
	representation of Task Descriptors.
@throws RemoteException If something failed during this operation.
"
      end

      operation 692098 "getCanonicalHostName"
	class_operation private explicit_return_type "String"
	nparams 1
	  param in name "hostName" explicit_type "String"
	nexceptions 1
	  explicit_exception "UnknownHostException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get canonical name of the host. Names returned by this methods are used in the database.

@param hostName Name of the host to resolve.

@return Canonical name of the host if available.

@throws UnknownHostException If host was not found on the network.
"
      end

      operation 692226 "runTask"
	public explicit_return_type "void"
	nparams 1
	  param inout name "taskDescriptor" type class_ref 131074 // TaskDescriptor
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Run (schedule) one new Task specified by its task descriptor.

@param taskDescriptor Task descriptor of new task to run.
@throws RemoteException If something failed during this operation.
"
      end

      operation 692354 "runTask"
	public explicit_return_type "void"
	nparams 1
	  param inout name "taskDescriptors" type class_ref 131074 // TaskDescriptor
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Run (schedule) one or more new tasks specified by their task
descriptors.

@param taskDescriptors Task descriptors of new tasks to run.
@throws RemoteException If something failed during this operation.
"
      end

      operation 692482 "runTaskImmediately"
	public explicit_return_type "void"
	nparams 1
	  param inout name "taskDescriptor" type class_ref 131074 // TaskDescriptor
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Run (schedule) on new task specified by its task descriptor. If task can
be started immediately then it is, otherwise
{@link IllegalStateException} exception is thrown.
 
@param taskDescriptor Task descriptor of new task to run.
@throws RemoteException If something failed during this operation.
@throws IllegalStateException If task can not be started immediately.
"
      end

      attribute 334722 "lastContextIndex"
	class_attribute private explicit_type "long"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Index of last context. 
"
      end

      operation 692610 "getNewContextId"
	class_operation private explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create new ID for context.

@return New ID for context.
"
      end

      operation 692738 "newContext"
	public explicit_return_type "String"
	nparams 3
	  param in name "name" explicit_type "String"
	  param in name "description" explicit_type "String"
	  param inout name "magicObject" type class_ref 148226 // Serializable
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create new context.

@param name Human readable name of context.
@param description Human readable description of context.
@param magicObject Some magic object (Serializable and Cloneable).
@return ID of context.
@throws RemoteException If something failed during this operation.
"
      end

      operation 692866 "newContext"
	public explicit_return_type "void"
	nparams 4
	  param in name "id" explicit_type "String"
	  param in name "name" explicit_type "String"
	  param in name "description" explicit_type "String"
	  param inout name "magicObject" type class_ref 148226 // Serializable
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create new context. If context with specified ID exists then if it is
already deactivated, it is deleted and newly created otherwise exception
is thrown.

@param id ID of context.
@param name Human readable name of context.
@param description Human readable description of context.
@param magicObject Some magic object (Serializable and Cloneable).
@throws IllegalStateException If context with specified ID already
	exists.
@throws RemoteException If something failed during this operation.
"
      end

      operation 692994 "closeContext"
	public explicit_return_type "void"
	nparams 1
	  param in name "id" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Close context.

@param id ID of context.
@throws RemoteException If something failed during this operation.
"
      end

      operation 693122 "getTasks"
	public return_type class_ref 184706 // TaskEntry
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Return informations about all tasks known inside Task Manager.

@return Array containing TaskEntry for each task.
@throws RemoteException If something failed during this operation.
"
      end

      operation 693250 "getTasksInContext"
	public return_type class_ref 184706 // TaskEntry
	nparams 1
	  param in name "contextId" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Return informations about all tasks known inside Task Manager as member
of specified context.

@param contextId ID of requested context.
@return Array containing TaskEntry for each convenient task.
@throws RemoteException If something failed during this operation.
"
      end

      operation 693378 "getTasksOnHost"
	public return_type class_ref 184706 // TaskEntry
	nparams 1
	  param in name "hostName" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Return informations about all tasks known inside Task Manager as
scheduled on specified HostRuntime.

@param hostName URI of requested Host Runtime.
@return Array containing TaskEntry for each convenient task.
@throws RemoteException If something failed during this operation.
"
      end

      operation 693506 "getContexts"
	public return_type class_ref 206594 // ContextEntry
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Return informations about all contexts known inside Task Manager.

@return Array containing ContextEntry for each context.
@throws RemoteException If something failed during this operation.
"
      end

      operation 693634 "getTaskById"
	public return_type class_ref 184706 // TaskEntry
	nparams 2
	  param in name "taskId" explicit_type "String"
	  param in name "contextId" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Return informations about one task specified by its ID.

@param taskId ID of requested task.
@return TaskEntry filled in by informations about requested task (null
	if requested task not found).
@throws RemoteException If something failed during this operation.
"
      end

      operation 693762 "getContextById"
	public return_type class_ref 206594 // ContextEntry
	nparams 1
	  param in name "contextId" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Return informations about one context specified by its ID.

@param contextId ID of requested context.
@return ContextEntry filled in by informations about requested context
	(null if requested task not found).
@throws RemoteException If something failed during this operation.
"
      end

      operation 693890 "killTaskById"
	public explicit_return_type "void"
	nparams 2
	  param in name "taskId" explicit_type "String"
	  param in name "contextId" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Kill task specified by its ID.

@param taskId ID of task.
@param contextId ID of context.
@throws IllegalArgumentException If task not found.
@throws RemoteException If something failed during this operation.
"
      end

      operation 694018 "killContextById"
	public explicit_return_type "void"
	nparams 1
	  param in name "contextId" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Kill all tasks within specified context and that context.

@param contextId ID of context.
@throws RemoteException If something failed during this operation.
"
      end

      operation 694146 "checkPointReached"
	public explicit_return_type "void"
	nparams 6
	  param in name "name" explicit_type "String"
	  param in name "value" explicit_type "String"
	  param in name "taskId" explicit_type "String"
	  param in name "contextId" explicit_type "String"
	  param in name "hostName" explicit_type "String"
	  param inout name "magicObject" type class_ref 148226 // Serializable
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Used by Host Runtime for forwarding of check points reached by
tasks.

@param name Name of checkPoint.
@param value Value of checkPoint.
@param taskId ID of task.
@param contextId ID of context.
@param hostName Name of host on which this checkPoint was reached.
@param magicObject <code>MagicObject</code> of this checkPoint.
@throws RemoteException If something failed during the execution of
	the remote method call.
"
      end

      operation 694274 "checkPointReached"
	public explicit_return_type "void"
	nparams 1
	  param inout name "checkPoint" type class_ref 205698 // CheckPoint
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Used by Host Runtime for forwarding of checkpoint reached by task.

@param checkPoint CheckPoint representation of reached checkpoint.
@throws RemoteException If something failed during the execution of
	the remote method call.
"
      end

      operation 694402 "isCheckPointReachPossible"
	private explicit_return_type "boolean"
	nparams 2
	  param in name "taskId" explicit_type "String"
	  param in name "contextId" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Test if specified context is still open or if there is specified task and
is not finished yet.

@param taskId ID of task.
@param contextId ID of context.
@return <code>true</code> if checkPoint with specified
	<code>taskId</code> and <code>contextId</code> can be still reached;
	<code>false</code> otherwise.
"
      end

      operation 694530 "checkPointLook"
	private return_type class_ref 205698 // CheckPoint
	nparams 4
	  param in name "name" explicit_type "String"
	  param inout name "value" type class_ref 148226 // Serializable
	  param in name "taskId" explicit_type "String"
	  param in name "contextId" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns array containing all reached checkpoints matching specified
parameters (taskId, contextId, name).
All filled in values must match. Values set to null are arbitrary.
Calling of this method is non-blocking.

@param name Name of checkpoint.
@param value Value of checkpoint.
@param taskId ID of task which reached checkpoint.
@param contextId ID of context in which checkpoint was reached.
@return Array containing all checkpoint matching specified
	checkpointTemplate.
@throws RemoteException If something failed during the execution of
	the remote method call.
"
      end

      operation 694658 "checkPointLook"
	private return_type class_ref 205698 // CheckPoint
	nparams 5
	  param in name "name" explicit_type "String"
	  param inout name "value" type class_ref 148226 // Serializable
	  param in name "taskId" explicit_type "String"
	  param in name "contextId" explicit_type "String"
	  param in name "timeout" explicit_type "long"
	nexceptions 2
	  exception class_ref 205826 // TaskManagerException
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns array containing all reached checkpoints matching specified
parameters (taskId, contextId, name).
All filled in values must match. Values set to null are arbitrary.
Calling of this method is blocking.

@param name Name of checkpoint.
@param value Value of checkpoint.
@param taskId ID of task which reached checkpoint.
@param contextId ID of context in which checkpoint was reached.
@param timeout Maximum time to wait in milliseconds.
@return Array containing all checkpoint matching specified
	checkpointTemplate.
@throws TaskManagerException If Required checkPoint can not be reached
	anyway
@throws RemoteException If something failed during the execution of
	the remote method call.
"
      end

      operation 694786 "checkPointLook"
	public return_type class_ref 148226 // Serializable
	nparams 4
	  param in name "name" explicit_type "String"
	  param in name "taskId" explicit_type "String"
	  param in name "contextId" explicit_type "String"
	  param in name "timeout" explicit_type "long"
	nexceptions 2
	  exception class_ref 205826 // TaskManagerException
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Do check point lookup. Tasks should not call this.
Returns last value of reached checkpoints matching specified taskId,
contextId and name. All values must be non-null and must match.

Calling of this method is blocking. If timeout is set to zero, then
return immediately.
@param name Name of checkpoint.
@param taskId ID of task which reached checkpoint.
@param contextId ID of context in which checkpoint was reached.
@param timeout Maximum time to wait in milliseconds.

@return Value of specified checkpoint (can be <code>null</code>).
@throws NullPointerException If some input parameter is null.
@throws IllegalArgumentException If checkpoint not found.
@throws TaskManagerException If Required checkPoint can not be reached
	anyway
@throws RemoteException If something failed during the execution of
	the remote method call.
"
      end

      operation 694914 "checkPointLook"
	public return_type class_ref 205698 // CheckPoint
	nparams 2
	  param inout name "checkPointTemplate" type class_ref 205698 // CheckPoint
	  param in name "timeout" explicit_type "long"
	nexceptions 2
	  exception class_ref 205826 // TaskManagerException
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Used by Host Runtime for forwarding of lookup request from task.
Returns array containing all reached checkpoints matching specified
checkpointTemplate. All filled in values must match. Values set to
null are arbitrary.
Calling of this method is blocking. If timeout is set to zero, then
return immediately.

@param checkPointTemplate Prepared template for checkpoint match.
@param timeout Maximum time to wait in milliseconds.
@return Array containing all checkpoint matching specified
	checkpointTemplate.
@throws TaskManagerException If Required checkPoint can not be reached
	anyway
@throws RemoteException If something failed during the execution of
	the remote method call.
"
      end

      operation 695042 "log"
	public explicit_return_type "void"
	nparams 5
	  param in name "contextId" explicit_type "String"
	  param in name "taskId" explicit_type "String"
	  param inout name "level" type class_ref 129666 // LogLevel
	  param inout name "timestamp" explicit_type "Date"
	  param in name "message" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Used by Host Runtime for forwarding of log messages from tasks.

@param contextId Id of the task's context.
@param taskId TID of task.
@param level log level of this log message 
@param timestamp time stamp of this log message
@param message Message to log.
@throws RemoteException If something failed during the execution of
	the remote method call.
"
      end

      operation 695170 "serviceRegister"
	public explicit_return_type "void"
	nparams 1
	  param inout name "service" type class_ref 184578 // ServiceEntry
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Used by Host Runtime for forwarding of task's request for new
registration of service.

@param service Object describing service to register.
@throws RemoteException If something failed during the execution
	of the remote method call.
@throws IllegalArgumentException If <code>service</code> is not correctly
	filled in.
"
      end

      operation 695298 "serviceUnregister"
	public explicit_return_type "void"
	nparams 1
	  param inout name "serviceTemplate" type class_ref 184578 // ServiceEntry
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Used by Host Runtime for forwarding of task's request for 
deregistration of services.
All entries matching specified template are removed from the
registry.

@param serviceTemplate Object describing services to remove (using
	regular expressions).
@throws RemoteException If something failed during the execution of
	the remote method call.
"
      end

      operation 695426 "serviceLook"
	public return_type class_ref 184578 // ServiceEntry
	nparams 1
	  param inout name "serviceTemplate" type class_ref 184578 // ServiceEntry
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Used by Host Runtime for forwarding of task's request for looking in
service entries.
Returns array containing all service entries matching specified
template (using regular expressions).

@param serviceTemplate Object looked describing services (using
	regular expressions).
@throws RemoteException If something failed during the execution of
	the remote method call.
"
      end

      operation 695554 "serviceFind"
	public explicit_return_type "Remote"
	nparams 2
	  param in name "serviceName" explicit_type "String"
	  param in name "interfaceName" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Used by tasks for finding some registered remote interface.
Given names are compared for exact match (doesn't use regular
expressions).

@param serviceName Name of service.
@param interfaceName Name of service's interface.
@return Remote representation of one from all matching interfaces
	or null if none.
@throws RemoteException If something failed during the execution of
	the remote method call.
"
      end

      operation 695682 "serviceFindURI"
	public explicit_return_type "URI"
	nparams 2
	  param in name "serviceName" explicit_type "String"
	  param in name "interfaceName" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Used by tasks for finding some registered remote interface.
Given names are compared for exact match (doesn't use regular
expressions).

@param serviceName Name of service.
@param interfaceName Name of service's interface.
@return URI representation of one from all matching interfaces or
	null if none.
@throws RemoteException If something failed during the execution of
	the remote method call.
"
      end

      operation 695810 "getLogsForTask"
	public return_type class_ref 184194 // LogRecord
	nparams 2
	  param in name "context" explicit_type "String"
	  param in name "taskID" explicit_type "String"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 184322 // LogStorageException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "NullPointerException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " (non-Javadoc)
@see cz.cuni.mff.been.taskmanager.TaskManagerInterface#getLogsForTask(java.lang.String, java.lang.String)
"
      end

      operation 695938 "isContextRegistered"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 184322 // LogStorageException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "NullPointerException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " (non-Javadoc)
@see cz.cuni.mff.been.taskmanager.TaskManagerInterface#isContextRegistered(java.lang.String)
"
      end

      operation 696066 "isTaskRegistered"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "context" explicit_type "String"
	  param in name "taskID" explicit_type "String"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 184322 // LogStorageException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "NullPointerException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " (non-Javadoc)
@see cz.cuni.mff.been.taskmanager.TaskManagerInterface#isTaskRegistered(java.lang.String, java.lang.String)
"
      end

      operation 696194 "addErrorOutput"
	public explicit_return_type "void"
	nparams 3
	  param in name "context" explicit_type "String"
	  param in name "taskID" explicit_type "String"
	  param in name "output" explicit_type "String"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 184322 // LogStorageException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "NullPointerException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " (non-Javadoc)
@see cz.cuni.mff.been.taskmanager.TaskManagerInterface#addErrorOutput(java.lang.String, java.lang.String, java.lang.String)
"
      end

      operation 696322 "addStandardOutput"
	public explicit_return_type "void"
	nparams 3
	  param in name "context" explicit_type "String"
	  param in name "taskID" explicit_type "String"
	  param in name "output" explicit_type "String"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 184322 // LogStorageException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "NullPointerException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " (non-Javadoc)
@see cz.cuni.mff.been.taskmanager.TaskManagerInterface#addStandardOutput(java.lang.String, java.lang.String, java.lang.String)
"
      end

      operation 696450 "getErrorOutput"
	public return_type class_ref 184450 // OutputHandle
	nparams 2
	  param in name "context" explicit_type "String"
	  param in name "taskID" explicit_type "String"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 184322 // LogStorageException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "NullPointerException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " (non-Javadoc)
@see cz.cuni.mff.been.taskmanager.TaskManagerInterface#getErrorOutput(java.lang.String, java.lang.String)
"
      end

      operation 696578 "getStandardOutput"
	public return_type class_ref 184450 // OutputHandle
	nparams 2
	  param in name "context" explicit_type "String"
	  param in name "taskID" explicit_type "String"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 184322 // LogStorageException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "NullPointerException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " (non-Javadoc)
@see cz.cuni.mff.been.taskmanager.TaskManagerInterface#getStandardOutput(java.lang.String, java.lang.String)
"
      end

      operation 696706 "isContextFinished"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "contextId" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Test if context is finished (i.e. closed and all its tasks are ended).

@param contextId ID of context.
@return <code>true</code> if context is finished; <code>false</code>
	otherwise.
@throws IllegalArgumentException If context with specified ID does not
	exist.
"
      end

      operation 696834 "removeContext"
	private explicit_return_type "void"
	nparams 1
	  param in name "contextId" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Remove specified context from Task Manager and notify all Host Runtimes.
Do nothing if specified context is system context of BEEN.

@param contextId ID of context.
"
      end

      operation 696962 "taskRestarted"
	public explicit_return_type "void"
	nparams 2
	  param in name "taskId" explicit_type "String"
	  param in name "contextId" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Notification from Host Runtime, that specified task was restarted.

@param taskId ID of task.
@param contextId ID of context.
@throws RemoteException If something failed during the execution of
	the remote method call.
"
      end

      operation 697090 "taskReachedState"
	public explicit_return_type "void"
	nparams 3
	  param in name "taskId" explicit_type "String"
	  param in name "contextId" explicit_type "String"
	  param inout name "state" type class_ref 136066 // TaskState
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Used by Host Runtime for notify of task's reached state.

@param taskId TID of task.
@param state String representation of reached state.
@throws RemoteException If something failed during the execution of
	the remote method call.
"
      end

      operation 697218 "prepareHostName"
	private explicit_return_type "void"
	nparams 1
	  param inout name "taskDescriptor" type class_ref 131074 // TaskDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
For specified taskDescriptor prepare its list of usable hostRuntimes
(based on RSL or asTask attribute) if needed.

@param taskDescriptor TaskDescriptor to process.
"
      end

      operation 697346 "preparePackageName"
	private explicit_return_type "void"
	nparams 1
	  param inout name "taskDescriptor" type class_ref 131074 // TaskDescriptor
	nexceptions 1
	  exception class_ref 205826 // TaskManagerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
For specified taskDescriptor prepare its definition of package (based on
RSL) if needed.

@param taskDescriptor TaskDescriptor to process.
@throws TaskManagerException if anything goes wrong.
"
      end

      operation 697474 "taskStart"
	private explicit_return_type "void"
	nparams 1
	  param inout name "taskData" type class_ref 206850 // TaskData
	nexceptions 1
	  exception class_ref 205826 // TaskManagerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Starts execution of specified task.

@param task Task to start.
"
      end

      operation 697602 "checkDependency"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "dependencyCheckpoint" type class_ref 143106 // Dependency
	  param in name "contextId" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Tests if specified dependencyCheckpoint was already reached.

@param dependencyCheckpoint Tested CheckPoint.
@return True if CheckPoint was already reached, false otherwise.
"
      end

      operation 697730 "checkDependencies"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "taskData" type class_ref 206850 // TaskData
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Tests if all CheckPoints on which this task depends was already
reached.

@param task Task to test.
@return True if all dependencies were already reached, false
	otherwise.
"
      end

      operation 697858 "taskNew"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "taskDescriptor" type class_ref 131074 // TaskDescriptor
	nexceptions 1
	  exception class_ref 205826 // TaskManagerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Adds new task to list of tasks and starts it.

@param taskDescriptor Object representing task descriptor of new
	task.
@throws IllegalArgumentException If taskDescriptor is not valid.
"
      end

      operation 697986 "getHostRuntimeInterface"
	private return_type class_ref 181378 // HostRuntimeInterface
	nparams 1
	  param in name "hostName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "	/**
	 * Starts main loop of Task Manager.
	 * 
	 * @param taskDescriptors List of task descriptor files.
	 */
	private void run(String[] taskDescriptors) {
		try {
			runTask(taskDescriptors);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

Returns RMI interface of hostRuntime based on hostName.

@param hostName Name of host running hostRuntime.
@return RMI interface of hostRuntime.
"
      end

      operation 698114 "getMaxPackageCacheSize"
	public explicit_return_type "long"
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the size limit of the Host Runtime's package cache.

@return size limit of the Host Runtime's package cache.
@throws RemoteException if something failed during the execution of
         the remote method call.
"
      end

      operation 698242 "setMaxPackageCacheSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "maxPackageCacheSize" explicit_type "long"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Set MaxPackageCacheSize option for hostRuntimes.

@param maxPackageCacheSize New value for maxPackageCacheSize option.
"
      end

      operation 698370 "getKeptClosedContextCount"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the number of closed contexts, for which the Host Runtime should
keep data on the disk

@return number of closed contexts, for which the Host Runtime should keep
         data on the disk
@throws RemoteException if something failed during the execution of
         the remote method call.
"
      end

      operation 698498 "setKeptClosedContextCount"
	public explicit_return_type "void"
	nparams 1
	  param in name "keptClosedContextCount" explicit_type "int"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Set KeptClosedContextCount option for hostRuntimes.

@param keptClosedContextCount New value for keptClosedContextCount
	option.
"
      end

      operation 698626 "getTaskManager"
	public return_type class_ref 181762 // TaskManagerInterface
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.taskmanager.HostRuntimesPortInterface#getTaskManager()
"
      end

      operation 698754 "unregisterFinishedService"
	private explicit_return_type "void"
	nparams 2
	  param in name "contextId" explicit_type "String"
	  param in name "taskId" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Searches the service registry and if it finds a service with the same 
task ID and context ID, it unregisters it.

@param contextId
@param taskId
"
      end

      operation 698882 "log"
	private explicit_return_type "void"
	nparams 2
	  param inout name "level" type class_ref 129666 // LogLevel
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Logs a log message.

@param level log level of the log message.
@param message log message.
"
      end

      operation 699010 "logFatal"
	private explicit_return_type "void"
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Logs a log message with the FATAL log level.
 
@param message log message.
@throws TaskManagerException if something goes wrong.
"
      end

      operation 699138 "logError"
	private explicit_return_type "void"
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Logs a log message with the ERROR log level.
 
@param message log message.
@throws TaskManagerException if something goes wrong.
"
      end

      operation 699266 "logWarning"
	private explicit_return_type "void"
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Logs a log message with the WARN log level.
 
@param message log message.
@throws TaskManagerException if something goes wrong.
"
      end

      operation 699394 "logInfo"
	private explicit_return_type "void"
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Logs a log message with the INFO log level.
 
@param message log message.
@throws TaskManagerException if something goes wrong.
"
      end

      operation 699522 "logDebug"
	private explicit_return_type "void"
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Logs a log message with the DEBUG log level.
 
@param message log message.
@throws TaskManagerException if something goes wrong.
"
      end

      operation 699650 "logTrace"
	private explicit_return_type "void"
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Logs a log message with the TRACE log level.
 
@param message log message.
@throws TaskManagerException if something goes wrong.
"
      end

      operation 699778 "registerEventListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 162946 // HostRuntimeRegistrationListener
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
(non-Javadoc)
@see cz.cuni.mff.been.taskmanager.TaskManagerInterface#registerEventListener(cz.cuni.mff.been.taskmanager.HostRuntimeRegistrationListener)
"
      end

      operation 699906 "registerHostRuntime"
	public explicit_return_type "void"
	nparams 1
	  param in name "hostname" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
(non-Javadoc)
@see cz.cuni.mff.been.taskmanager.TaskManagerInterface#registerHostRuntime(java.lang.String)
"
      end

      operation 700034 "unregisterEventListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 162946 // HostRuntimeRegistrationListener
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
(non-Javadoc)
@see cz.cuni.mff.been.taskmanager.TaskManagerInterface#unregisterEventListener(cz.cuni.mff.been.taskmanager.HostRuntimeRegistrationListener)
"
      end

      operation 700162 "unregisterHostRuntime"
	public explicit_return_type "void"
	nparams 1
	  param in name "hostName" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
(non-Javadoc)
@see cz.cuni.mff.been.taskmanager.TaskManagerInterface#unregisterHostRuntime(java.lang.String)
"
      end

      operation 700290 "getRegisteredHostRuntimes"
	public explicit_return_type "String"
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " (non-Javadoc)
@see cz.cuni.mff.been.taskmanager.TaskManagerInterface#getRegisteredHostRuntimes()
"
      end

      operation 700418 "deleteContext"
	public explicit_return_type "void"
	nparams 1
	  param in name "id" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " (non-Javadoc)
@see cz.cuni.mff.been.taskmanager.TaskManagerInterface#deleteContext(java.lang.String)
"
      end

      operation 700546 "getLogCountForTask"
	public explicit_return_type "long"
	nparams 2
	  param in name "context" explicit_type "String"
	  param in name "taskID" explicit_type "String"
	nexceptions 3
	  exception class_ref 184322 // LogStorageException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "NullPointerException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " (non-Javadoc)
@see cz.cuni.mff.been.taskmanager.TaskManagerInterface#getLogCountForTask(java.lang.String, java.lang.String)
"
      end

      operation 700674 "getLogsForTask"
	public return_type class_ref 184194 // LogRecord
	nparams 4
	  param in name "context" explicit_type "String"
	  param in name "taskID" explicit_type "String"
	  param in name "first" explicit_type "long"
	  param in name "last" explicit_type "long"
	nexceptions 3
	  exception class_ref 184322 // LogStorageException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "NullPointerException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " (non-Javadoc)
@see cz.cuni.mff.been.taskmanager.TaskManagerInterface#getLogsForTask(java.lang.String, java.lang.String, long, long)
"
      end
    end

    class 206978 "TaskManagerRunner"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Runner class for Task Manager.

@author Antonin Tomecek
"
      operation 700802 "TaskManagerRunner"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 700930 "main"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 207106 "TaskRunner"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Runner class for adding tasks specified by their TaskDesctriptors to run to
the already running Task Manager.

@author Antonin Tomecek

"
      operation 701058 "TaskRunner"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 268034 // taskManager (<unidirectional association>)
	relation 268034 --->
	  a role_name "taskManager" init_value "=  null" class_relation private
	    comment " RMI reference to the Task Manager. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 268034 // taskManager (<unidirectional association>)
	  b parent class_ref 181762 // TaskManagerInterface
      end

      operation 701186 "printTasks"
	class_operation private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Print list of all tasks (running and waiting) and their states to
the standard output.
"
      end

      operation 701314 "main"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@param args TaskDescriptors represented by XML files.
"
      end
    end

    class 143618 "TaskDescriptorException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Thrown for all exceptions in TaskDescriptor class.

@author Antonin Tomecek
"
      classrelation 266498 // <generalisation>
	relation 266498 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 266498 // <generalisation>
	  b parent class_ref 128258 // Exception
      end

      operation 682498 "TaskDescriptorException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Constructs a new TaskDescriptorException with null as its detail
message.
"
      end

      operation 682626 "TaskDescriptorException"
	public explicit_return_type ""
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Constructs a new TaskDescriptorException with the specified detail
message.

@param message The detail message.
"
      end

      operation 682754 "TaskDescriptorException"
	public explicit_return_type ""
	nparams 2
	  param in name "message" explicit_type "String"
	  param inout name "cause" explicit_type "Throwable"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Constructs a new TaskDescriptorException with the specified detail
message and cause.

@param message The detail message.
@param cause The cause.
"
      end

      operation 682882 "TaskDescriptorException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" explicit_type "Throwable"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Constructs a new TaskDescriptorException with the specified cause.

@param cause The cause.
"
      end
    end

    class 205826 "TaskManagerException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Thrown for all exceptions in package taskmanager.

@author Antonin Tomecek
"
      classrelation 266626 // <generalisation>
	relation 266626 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 266626 // <generalisation>
	  b parent class_ref 128130 // BeenException
      end

      operation 685186 "TaskManagerException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Constructs a new TaskManagerException with null as its detail
message.
"
      end

      operation 685314 "TaskManagerException"
	public explicit_return_type ""
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Constructs a new TaskManagerException with the specified detail
message.

@param message The detail message.
"
      end

      operation 685442 "TaskManagerException"
	public explicit_return_type ""
	nparams 2
	  param in name "message" explicit_type "String"
	  param inout name "cause" explicit_type "Throwable"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Constructs a new TaskManagerException with the specified detail
message and cause.

@param message The detail message.
@param cause The cause.
"
      end

      operation 685570 "TaskManagerException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" explicit_type "Throwable"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Constructs a new TaskManagerException with the specified cause.

@param cause The cause.
"
      end
    end

    class 148360 "TaskDescriptorHelper"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This static class creates common task descriptor types and validates task descriptors.

@author Andrej Podzimek"
      class 148488 "BootTask"
	visibility public stereotype "enum"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 316168 "BENCHMARK_MANAGER_NG"
	  public type class_ref 148488 // BootTask
	  cpp_decl ""
	  java_decl "  ${@}${name}( \"benchmarkmanagerng\", \"1.0\" ),${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " WillBeen's new Benchmark Manager. "
	end

	attribute 316296 "HOST_MANAGER"
	  public type class_ref 148488 // BootTask
	  cpp_decl ""
	  java_decl "  ${@}${name}( \"hostmanager\", \"1.0\" ),${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The original Host Manager. "
	end

	attribute 316424 "DEBUG_ASSISTANT"
	  public type class_ref 148488 // BootTask
	  cpp_decl ""
	  java_decl "  ${@}${name}( \"debugassistant\", \"1.0\" ),${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The original Host Manager. "
	end

	attribute 316552 "SOFTWARE_REPOSITORY"
	  public type class_ref 148488 // BootTask
	  cpp_decl ""
	  java_decl "  ${@}${name}( \"softwarerepository\", \"1.0\" ),${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The original Software Repository. "
	end

	attribute 316680 "RESULTS_REPOSITORY_NG"
	  public type class_ref 148488 // BootTask
	  cpp_decl ""
	  java_decl "  ${@}${name}( \"resultsrepositoryng\", \"1.0\" ),${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " WillBeen's new Results Repository. "
	end

	attribute 316808 "DETECTOR_TASK"
	  public type class_ref 148488 // BootTask
	  cpp_decl ""
	  java_decl "  ${@}${name}( \"detectortask\", \"1.0\" ),${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Hardware detector, uses JNI. "
	end

	attribute 316936 "COMMAND_LINE_INTERFACE"
	  public type class_ref 148488 // BootTask
	  cpp_decl ""
	  java_decl "  ${@}${name}( \"clinterface\", \"1.0\" ),${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " WillBeen's new Command Line Interface. "
	end

	classrelation 245384 // bootTaskMap (<unidirectional association>)
	  relation 245384 --->
	    stereotype "TreeMap"
	    a role_name "bootTaskMap" class_relation const_relation private
	      comment " Maps task names to enum values. "
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}< String, ${type} > ${name}${value};
"
	      classrelation_ref 245384 // bootTaskMap (<unidirectional association>)
	    b parent class_ref 148488 // BootTask
	end

	extra_member 130952 "initialization"
	  
	  cpp "" ""
	  java "  static {
			bootTaskMap = new TreeMap< String, BootTask >();
			
			for ( BootTask value : BootTask.values() ) {
				bootTaskMap.put( value.getName(), value );
			}
		}"
	  php ""
	  python ""
	  idl ""
	end

	attribute 317064 "name"
	  const_attribute private explicit_type "String"
	  stereotype "attribute"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Name of the service. "
	end

	attribute 317192 "version"
	  const_attribute private explicit_type "String"
	  stereotype "attribute"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Version of the service "
	end

	operation 564360 "BootTask"
	  private explicit_return_type ""
	  nparams 2
	    param in name "name" explicit_type "String"
	    param in name "version" explicit_type "String"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Initializes the enum member with a name and a version.

@param name Name of the service.
@param version Verion of the service (package)."
	end

	operation 564488 "getName"
	  public explicit_return_type "String"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Task name getter.

@return BEEN task name of the given boot task."
	end

	operation 564616 "getVersion"
	  public explicit_return_type "String"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Version string getter.

@return Version of package which should be used for this BootTask. "
	end

	operation 564744 "forName"
	  class_operation public return_type class_ref 148488 // BootTask
	  nparams 1
	    param in name "name" explicit_type "String"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Enum member getter.

@param name Name of the member to find.
@return A member of that name or null if no such member exists."
	end
      end

      attribute 317320 "LEGACY_PATH_PREFIX"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"/legacy/\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " A prefix that should be used to construct tree paths for legacy tasks. "
      end

      attribute 317448 "BOOT_TASK_ID_SUFFIX"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"-tid\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Suffix added to names of boot tasks to create their IDs. "
      end

      attribute 317576 "PACKAGE_FILE_SUFFIX"
	class_attribute const_attribute private explicit_type "String"
	init_value " \".bpk\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Standard suffic of BEEN's package files. "
      end

      operation 564872 "TaskDescriptorHelper"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "No, don't do this."
      end

      operation 565000 "validate"
	class_operation public explicit_return_type "StringBuilder"
	nparams 1
	  param inout name "taskDescriptor" type class_ref 129544 // TaskDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if this taskDescriptor is valid.

@return {@code true} if valid, {@code false} otherwise."
      end

      operation 565128 "addTaskProperties"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "taskDescriptor" type class_ref 129544 // TaskDescriptor
	  param inout name "properties" explicit_type "Entry< ?, ? >..."
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds task properties to a task descriptor.

@param taskDescriptor The task descriptor to modify.
@param properties Properties to add."
      end

      operation 565256 "addTaskPropertyObjects"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "taskDescriptor" type class_ref 129544 // TaskDescriptor
	  param inout name "objects" explicit_type "Entry< ?, ? >..."
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds task property objects to a task descriptor.

@param taskDescriptor The task descriptor to modify.
@param objects Property objects to add.
@throws IOException When serialization to Base64 fails."
      end

      operation 565384 "addDependencyCheckpoint"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "taskDescriptor" type class_ref 129544 // TaskDescriptor
	  param in name "taskId" explicit_type "String"
	  param in name "type" explicit_type "String"
	  param in name "value" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a dependency checkpoint to a task descriptor.

@param taskDescriptor The task descriptor to modify.
@param taskId Task id to set.
@param type Checkpoint type to set.
@param value Checkpoint String value to set."
      end

      operation 565512 "addDependencyCheckpoint"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "taskDescriptor" type class_ref 129544 // TaskDescriptor
	  param in name "taskId" explicit_type "String"
	  param in name "type" explicit_type "String"
	  param inout name "value" type class_ref 148226 // Serializable
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a dependency checkpoint to a task descriptor.

@param taskDescriptor The task descriptor to modify.
@param taskId Task id to set.
@param type Checkpoint type to set.
@param value Checkpoint String value to set.
@throws IOException When serialization to Base64 fails."
      end

      operation 565640 "addJavaOptions"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "taskDescriptor" type class_ref 129544 // TaskDescriptor
	  param in name "options" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ... ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds Java options to a task descriptor.

@param taskDescriptor The task descriptor to modify.
@param options Options to set."
      end

      operation 565768 "addDependencyCheckpoint"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "taskDescriptor" type class_ref 129544 // TaskDescriptor
	  param in name "taskId" explicit_type "String"
	  param in name "type" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a dependency checkpoint to a task descriptor.

@param taskDescriptor The task descriptor to modify.
@param taskId Task id to set.
@param type Checkpoint type to set."
      end

      operation 565896 "checkpointValueToString"
	class_operation public explicit_return_type "String"
	nparams 1
	  param inout name "checkPoint" type class_ref 177928 // DependencyCheckPoint
	nexceptions 1
	  exception class_ref 160648 // DeserializeException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the String value computed from a checkpoint value.

@param checkPoint The dependency checkpoint from which the value will be extracted.
@return A String representing the value of the checkpoint.
@throws DeserializeException When data deserialization is necessary and fails."
      end

      operation 566024 "propertyObjectValue"
	class_operation public return_type class_ref 148226 // Serializable
	nparams 1
	  param inout name "property" type class_ref 179080 // TaskPropertyObject
	nexceptions 1
	  exception class_ref 160648 // DeserializeException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a Serializable value computed from a property object value.

@param property The property object from which the value will be extracted.
@return A String representing the value of the property object.
@throws DeserializeException When data deserialization is neecessary and fails."
      end

      operation 566152 "clone"
	class_operation public return_type class_ref 129544 // TaskDescriptor
	nparams 1
	  param inout name "template" type class_ref 129544 // TaskDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clones a Task Descriptor.
Immutable fields (String) are copied by reference. All other fields are copied by value.

@param template The original.
@return The deep copy."
      end

      operation 566280 "createBootTask"
	class_operation public return_type class_ref 129544 // TaskDescriptor
	nparams 3
	  param inout name "bootTask" type class_ref 148488 // BootTask
	  param in name "hostName" explicit_type "String"
	  param in name "treeAddress" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Factory method for creating BEEN boot tasks. Boot packages are placed in HostRuntime's
boot directory.

As among boot tasks are also HostManager and SoftwareRepository (BEEN services that expand
RSL for regular tasks), boot tasks use RSL neither for hosts nor for package specification.
Instead, package name and host name will be specified directly in the task descriptor

@param bootTask Enum member of the boot task to create.
@param hostName Name of the host on which the boot task should run.
@param treeAddress The tree address the new task will occupy."
      end

      operation 566408 "createDetector"
	class_operation public return_type class_ref 129544 // TaskDescriptor
	nparams 3
	  param in name "taskID" explicit_type "String"
	  param in name "hostName" explicit_type "String"
	  param in name "treeAddress" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates task descriptor for a detector task. Can't be done via
{@link #createBootTask(BootTask, String)} call because we need detetctor task identifier
to determine task package, but also unqiue task identifier so that it runs in a different
directory each time. 

@param taskID Unique id of detector task.
@param hostName Host on which the task should run.
@return Task Descriptor for the detector task."
      end

      operation 566536 "createTask"
	class_operation public return_type class_ref 129544 // TaskDescriptor
	nparams 5
	  param in name "taskID" explicit_type "String"
	  param in name "taskName" explicit_type "String"
	  param in name "contextID" explicit_type "String"
	  param inout name "hostRSL" type class_ref 138242 // Condition
	  param in name "treeAddress" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility method for creating descriptors for regular tasks. The method creates
a TaskDescriptor using RSL for matching hosts and task package. Task package match
is based on task name.

@param taskID Identifier of the task to create.
@param taskName Name of the task to create.
@param contextID	Identifier of a context to create.
@param hostRSL RSL to match target hosts. This is the only argument that can be null.
@param treeAddress Address of the task in the visual tree.
@return A new TaskDescriptor for the task."
      end

      operation 566664 "createTask"
	class_operation public return_type class_ref 129544 // TaskDescriptor
	nparams 4
	  param in name "taskID" explicit_type "String"
	  param in name "taskName" explicit_type "String"
	  param in name "contextID" explicit_type "String"
	  param inout name "hostRSL" type class_ref 138242 // Condition
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment " ********************************************************* 
 Legacy, deprecated and (hopefully) unused methods follow. 
 ********************************************************* 

Utility method for creating descriptors for regular tasks. The method creates
a TaskDescriptor using RSL for matching hosts and task package. Task package match
is based on task name.

@param taskID Identifier of the task to create.
@param taskName Name of the task to create.
@param contextID	Identifier of a context to create.
@param hostRSL RSL to match target hosts.
@return A new TaskDescriptor for the task."
      end

      operation 566792 "createBootTask"
	class_operation public return_type class_ref 129544 // TaskDescriptor
	nparams 2
	  param inout name "bootTask" type class_ref 148488 // BootTask
	  param in name "host" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Factory method for creating BEEN boot tasks. Boot packages are placed in HostRuntime's
boot directory.

As among boot tasks are also HostManager and SoftwareRepository (BEEN services that expand
RSL for regular tasks), boot tasks use RSL neither for hosts nor for package specification.
Instead, package name and host name will be specified directly in the task descriptor

@param bootTask Enum member of the boot task to create.
@param host Name of the host on which the boot task should run.
@return A Task Descriptor for the boot task."
      end

      operation 566920 "createDetector"
	class_operation public return_type class_ref 129544 // TaskDescriptor
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "host" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Creates task descriptor for a detector task. Can't be done via
{@link #createBootTask(BootTask, String)} call because we need detetctor task identifier
to determine task package, but also unqiue task identifier so that it runs in a different
directory each time. 

@param name Unique name of detector task.
@param host Host on which the task should run.
@return Task Descriptor for the detector task."
      end
    end

    class 197000 "DeprecatedTaskDescriptor"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Class representation of the XML task descriptor with methods for
manipulation.

@author Antonin Tomecek"
      classrelation 244360 // <realization>
	relation 244360 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 244360 // <realization>
	  b parent class_ref 148226 // Serializable
      end

      attribute 312200 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 2839578401666122477L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 197128 "BootTask"
	visibility public stereotype "enum"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 312328 "BENCHMARK_MANAGER"
	  public type class_ref 197128 // BootTask
	  cpp_decl ""
	  java_decl "  ${@}${name}(\"benchmarkmanager\", \"1.0\"),${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 312456 "BENCHMARK_MANAGER_NG"
	  public type class_ref 197128 // BootTask
	  cpp_decl ""
	  java_decl "  ${@}${name}(\"benchmarkmanagerng\", \"1.0\"),${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 312584 "HOST_MANAGER"
	  public type class_ref 197128 // BootTask
	  cpp_decl ""
	  java_decl "  ${@}${name}(\"hostmanager\", \"1.0\"),${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 312712 "SOFTWARE_REPOSITORY"
	  public type class_ref 197128 // BootTask
	  cpp_decl ""
	  java_decl "  ${@}${name}(\"softwarerepository\", \"1.0\"),${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 312840 "RESULTS_REPOSITORY"
	  public type class_ref 197128 // BootTask
	  cpp_decl ""
	  java_decl "  ${@}${name}(\"resultsrepository\", \"1.0\"),${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 312968 "RESULTS_REPOSITORYNG"
	  public type class_ref 197128 // BootTask
	  cpp_decl ""
	  java_decl "  ${@}${name}(\"resultsrepositoryng\", \"1.0\"),${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 313096 "TEST_MANAGER"
	  public type class_ref 197128 // BootTask
	  cpp_decl ""
	  java_decl "  ${@}${name}(\"testmanager\", \"1.0\"),${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 313224 "DETECTOR_TASK"
	  public type class_ref 197128 // BootTask
	  cpp_decl ""
	  java_decl "  ${@}${name}(\"detectortask\", \"1.0\"),${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 313352 "COMMAND_LINE_INTERFACE"
	  public type class_ref 197128 // BootTask
	  cpp_decl ""
	  java_decl "  ${@}${name}(\"clinterface\", \"1.0\"),${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 313480 "serviceName"
	  const_attribute private explicit_type "String"
	  stereotype "attribute"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 313608 "version"
	  const_attribute private explicit_type "String"
	  stereotype "attribute"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 556040 "BootTask"
	  private explicit_return_type ""
	  nparams 2
	    param in name "serviceName" explicit_type "String"
	    param in name "version" explicit_type "String"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 556168 "getName"
	  public explicit_return_type "String"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Package name getter.

@return BEEN package name of given boot task"
	end

	operation 556296 "getVersion"
	  public explicit_return_type "String"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Version string getter.

@return Version of package which should be used for this BootTask. "
	end
      end

      attribute 313736 "DEFAULT_PATH_PREFIX"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"/legacy/\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 313864 "validateLog"
	private explicit_type "String"
	init_value " \"\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Log created by validate() method. "
      end

      attribute 313992 "taskId"
	private explicit_type "String"
	init_value " null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Task ID [#REQUIRED] "
      end

      attribute 314120 "contextId"
	private explicit_type "String"
	init_value " null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Context ID [#REQUIRED] "
      end

      attribute 314248 "taskName"
	private explicit_type "String"
	init_value " \"\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Human readable name of task. "
      end

      attribute 314376 "taskDescription"
	private explicit_type "String"
	init_value " \"\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Human readable description of task. "
      end

      attribute 314504 "taskArguments"
	private explicit_type "String"
	multiplicity "[]"
	init_value " new String[0]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Array of command-line arguments [#IMPLIED] "
      end

      attribute 314632 "javaOptions"
	private explicit_type "String"
	multiplicity "[]"
	init_value " new String[0]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Array of command-line options for JVM (for running new task)
[#IMPLIED] "
      end

      classrelation 244488 // taskExclusivity (<unidirectional association>)
	relation 244488 --->
	  a role_name "taskExclusivity" init_value " TaskExclusivity.NON_EXCLUSIVE" private
	    comment " Flag telling that this task should be exclusive. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 244488 // taskExclusivity (<unidirectional association>)
	  b parent class_ref 179592 // TaskExclusivity
      end

      attribute 314760 "taskProperties"
	private explicit_type "Properties"
	init_value " new Properties()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Special property pairs (key, value) for tasks. "
      end

      attribute 314888 "treeAddress"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Address of the task in the visual tree of tasks. "
      end

      class 197256 "TaskPropertyObject"
	visibility public 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 244616 // <realization>
	  relation 244616 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 244616 // <realization>
	    b parent class_ref 148226 // Serializable
	end

	attribute 315016 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -8083118215631216295L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 315144 "key"
	  private explicit_type "String"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Key of property. "
	end

	classrelation 244744 // value (<unidirectional association>)
	  relation 244744 --->
	    a role_name "value" private
	      comment " Value of property. 
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 244744 // value (<unidirectional association>)
	    b parent class_ref 148226 // Serializable
	end

	operation 556424 "TaskPropertyObject"
	  public explicit_return_type ""
	  nparams 2
	    param in name "key" explicit_type "String"
	    param inout name "value" type class_ref 148226 // Serializable
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Constructor of this class.

@param key Key of this property.
@param value Value of this property."
	end

	operation 556552 "setKey"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "key" explicit_type "String"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets key of this property.

@param key New key of this property."
	end

	operation 556680 "setValue"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "value" type class_ref 148226 // Serializable
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets value of this property

@param value New value of this property."
	end

	operation 556808 "getKey"
	  public explicit_return_type "String"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns key of this property.

@return Key of this property."
	end

	operation 556936 "getValue"
	  public return_type class_ref 148226 // Serializable
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returnts value of this property.

@return Value of this property."
	end
      end

      classrelation 244872 // taskPropertyObjectList (<unidirectional association>)
	relation 244872 --->
	  stereotype "ArrayList"
	  a role_name "taskPropertyObjectList" init_value " new ArrayList<TaskPropertyObject>()" private
	    comment " List of task properties with object as value. "
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 244872 // taskPropertyObjectList (<unidirectional association>)
	  b parent class_ref 197256 // TaskPropertyObject
      end

      attribute 315272 "packageName"
	private explicit_type "String"
	init_value " null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Name of BEEN package to use for this task. "
      end

      classrelation 245000 // packageRsl (<unidirectional association>)
	relation 245000 --->
	  a role_name "packageRsl" init_value " null" private
	    comment " RSL description of BEEN package to use for this task. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 245000 // packageRsl (<unidirectional association>)
	  b parent class_ref 138242 // Condition
      end

      attribute 315400 "hostRuntimesAsTask"
	private explicit_type "String"
	init_value " null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " If set, use the same Host Runtime as used for another task. "
      end

      attribute 315528 "hostRuntimesName"
	private explicit_type "String"
	multiplicity "[]"
	init_value " null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Hostnames of possible Host Runtime to use for running this task. "
      end

      classrelation 245128 // hostRuntimesRsl (<unidirectional association>)
	relation 245128 --->
	  a role_name "hostRuntimesRsl" init_value " null" private
	    comment " RSL description of Host Runtime for running of this task. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 245128 // hostRuntimesRsl (<unidirectional association>)
	  b parent class_ref 138242 // Condition
      end

      classrelation 245256 // dependencyCheckPoints (<unidirectional association>)
	relation 245256 --->
	  a role_name "dependencyCheckPoints" multiplicity "[]" init_value " new Dependency[0]" private
	    comment " List of dependencies based on check points. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 245256 // dependencyCheckPoints (<unidirectional association>)
	  b parent class_ref 143106 // Dependency
      end

      attribute 315656 "restartMax"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " How many restarts for this task are allowed. "
      end

      attribute 315784 "timeoutRun"
	private explicit_type "long"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " How long (in milliseconds) this task can run (from started to finished
state). Zero if not restricted.
"
      end

      attribute 315912 "detailedLoad"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Flag indicating if the task want to enable detailed load monitoring. "
      end

      attribute 316040 "detailedLoadInterval"
	private explicit_type "long"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " How often do detailed load monitoring (in milliseconds). Value 0 means \"use default\". "
      end

      operation 557064 "validate"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if this taskDescriptor is valid.

@return <code>true</code> if valid, <code>false</code> otherwise."
      end

      operation 557192 "validateGetLog"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return log from last calling of method validate(). The validate() method
should be called before.

@return Log from last calling of method validate()."
      end

      operation 557320 "setTaskId"
	public explicit_return_type "void"
	nparams 1
	  param in name "taskId" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets value of the \"taskId\" attribute of the \"taskDescriptor\" element.

@param taskId ID of task.
@throws NullPointerException If input parameter is <code>null</code>."
      end

      operation 557448 "setTaskName"
	public explicit_return_type "void"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets value of the \"name\" attribute of the \"taskDescriptor\" element.

@param name Human readable name.
@throws NullPointerException If input parameter is <code>null</code>."
      end

      operation 557576 "setTaskDescription"
	public explicit_return_type "void"
	nparams 1
	  param in name "description" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets value of the \"description\" attribute of the \"taskDescriptor\"
element.

@param description Human readable description.
@throws NullPointerException If input parameter is <code>null</code>."
      end

      operation 557704 "setContextId"
	public explicit_return_type "void"
	nparams 1
	  param in name "contextId" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets value of the \"contextId\" attribute of the \"taskDescriptor\" element.

@param contextId ID of context.
@throws NullPointerException If input parameter is <code>null</code>."
      end

      operation 557832 "addArguments"
	public explicit_return_type "void"
	nparams 1
	  param in name "argument" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds one argument to the end of currently specified command-line
arguments (i.e. \"arguments\" attribute of the \"taskDescriptor\"
element).

@param argument Argument to add."
      end

      operation 557960 "setArguments"
	public explicit_return_type "void"
	nparams 2
	  param in name "arguments" explicit_type "String"
	  param inout name "append" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets value of the \"arguments\" attribute of the \"taskDescriptor\" element.

@param arguments A space-delimited list of command-line arguments
	or null for none.
@param append If true then specifiead arguments are added to existing list
           else it is overwriten."
      end

      operation 558088 "addJavaOption"
	public explicit_return_type "void"
	nparams 1
	  param in name "option" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds one option to the end of currently specified list of java options.

@param option
           Java option to add."
      end

      operation 558216 "setJavaOptions"
	public explicit_return_type "void"
	nparams 2
	  param in name "options" explicit_type "String"
	  param inout name "append" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets value of the \"options\" attribute of the \"java\" element.

@param options Command-line options for JVM.
@param append If true then specified options are added to existing
	list else it is overwriten."
      end

      operation 558344 "setTreeAddress"
	public explicit_return_type "void"
	nparams 1
	  param in name "treeAddress" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tree address setter.

@param treeAddress String representation of the tree address of the new task."
      end

      operation 558472 "setTaskExclusive"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exclusivity" type class_ref 179592 // TaskExclusivity
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets task's exclusivity flag.

@param exclusivity Value of task's exclusivity flag."
      end

      operation 558600 "addTaskProperties"
	public explicit_return_type "void"
	nparams 2
	  param in name "key" explicit_type "String"
	  param in name "value" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds one property (key-value pair) for this task.

@param key Key of new property.
@param value Value of new property."
      end

      operation 558728 "setTaskProperties"
	public explicit_return_type "void"
	nparams 1
	  param inout name "properties" explicit_type "Properties"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets key-value pairs of task's properties.

@param properties New definitions of properties."
      end

      operation 558856 "addTaskPropertyObject"
	public explicit_return_type "void"
	nparams 2
	  param in name "key" explicit_type "String"
	  param inout name "value" type class_ref 148226 // Serializable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds one property (with object as value) for this task.

@param key Key of new property.
@param value Value of new property."
      end

      operation 558984 "setPackageName"
	public explicit_return_type "void"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets content of \"name\" element within \"package\" element.

@param name Name of package to use for this task.
@throws NullPointerException If input parameter is <code>null</code>
@throws IllegalArgumentException If input parameter is empty string."
      end

      operation 559112 "setPackageRsl"
	public explicit_return_type "void"
	nparams 1
	  param inout name "rsl" type class_ref 138242 // Condition
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets content of \"rsl\" element within \"package\" element.

@param rsl RSL description of package.
@throws NullPointerException If input parameter is <code>null</code>
@throws IllegalArgumentException If input parameter is empty string."
      end

      operation 559240 "addHostRuntimesName"
	protected explicit_return_type "void"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds one name to list of usable host for running of this task. (I.e.
content of \"name\" element within \"hostRuntimes\" element.)

@param name Name of host for running of this task."
      end

      operation 559368 "setHostRuntimesAsTask"
	public explicit_return_type "void"
	nparams 1
	  param in name "taskId" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets hostRuntime in way: \"use the same hostRuntime as task with ID
<code>taskId</code>\".
It also adds START-dependency on referenced task to avoid starting
this task before the referenced task.

@param taskId ID of task determining hostRuntime."
      end

      operation 559496 "setHostRuntimesName"
	public explicit_return_type "void"
	nparams 1
	  param inout name "names" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets content of \"name\" element within \"hostRuntimes\" element.
(Owerwrites all previously specified names.)

@param names Names of hosts usable for running of this task."
      end

      operation 559624 "setHostRuntimesRsl"
	public explicit_return_type "void"
	nparams 1
	  param inout name "rsl" type class_ref 138242 // Condition
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets content of \"rsl\" element within \"hostRuntimes\" element.

@param rsl RSL condition for host."
      end

      operation 559752 "addDependencyCheckPoint"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dependencyCheckPoint" type class_ref 143106 // Dependency
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds one dependency based on the check point.

@param dependencyCheckPoint Dependency check point to add."
      end

      operation 559880 "setDependencyCheckPoints"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dependencyCheckPoints" type class_ref 143106 // Dependency
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets values of all attributes of all dependencies based on check points.
 
@param dependencyCheckPoints Array with definitions of
	DependencyCheckPoints."
      end

      operation 560008 "getTreeAddress"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the address of this task in the visual task tree.

@return A path to the tree node that should represent this task."
      end

      operation 560136 "getTaskId"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns value of the \"taskId\" attribute of the \"taskDescriptor\" element.

@return Value of the \"taskId\" attribute."
      end

      operation 560264 "getTaskName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns value of the \"name\" attribute of the \"taskDescriptor\" element.

@return Human readable name."
      end

      operation 560392 "getTaskDescription"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns value of the \"description\" attribute of the \"taskDescriptor\"
element.

@return Human readable value."
      end

      operation 560520 "getContextId"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns value of the \"contextId\" attribute of the \"taskDescriptor\"
element.

@return Value of the \"contextId\" attribute."
      end

      operation 560648 "getTaskArguments"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns command-line arguments from the \"arguments\" attribute of the
\"taskDescriptor\" element.

@return Array corresponding to the \"arguments\" attribute."
      end

      operation 560776 "getJavaOptions"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns value of the \"javaOptions\" attribute of the \"java\" element.

@return Array corresponding to the \"javaOptions\" attribute."
      end

      operation 560904 "getTaskExclusive"
	public return_type class_ref 179592 // TaskExclusivity
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns state of task exclusive flag (i.e. \"exclusive\" attribute of
\"task\" element).

@return The task exclusive flag."
      end

      operation 561032 "getTaskProperties"
	public explicit_return_type "Properties"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns definition of the \"taskProperties\".

@return Properties defined for this task."
      end

      operation 561160 "getTaskPropertyObjects"
	public return_type class_ref 197256 // TaskPropertyObject
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns array of all defined taskPropertyObjects.

@return Array of taskPropertyObjects."
      end

      operation 561288 "getPackageName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns content of \"name\" element within \"package\" element.

@return Content of \"name\" element within \"package\" element (may be
	<code>null</code> if name is not evaluated from RSL yet or no matching
	was founded)."
      end

      operation 561416 "getPackageRsl"
	public return_type class_ref 138242 // Condition
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns content of \"rsl\" element within \"package\" element.

@return Content of \"rsl\" element within \"package\" element."
      end

      operation 561544 "getHostRuntimesAsTask"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets hostRuntime in way: \"use the same hostRuntime as task with ID
<code>taskId</code>\" (if it was specified).

@return ID of task determining hostRuntime."
      end

      operation 561672 "getHostRuntimesName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns contents of \"name\" elements within \"hostRuntimes\" element.

@return Contents of \"name\" elements within \"hostRuntimes\" element (may
	be <code>null</code> if names are not evaluated from RSL yet or no
	matching were founded)."
      end

      operation 561800 "getHostRuntimesRsl"
	public return_type class_ref 138242 // Condition
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns content of \"rsl\" element within \"hostRuntimes\" element.

@return Content of \"rsl\" elements within \"histRuntimes\" element."
      end

      operation 561928 "getDependencyCheckPoints"
	public return_type class_ref 143106 // Dependency
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns definitions of all DependencyCheckPoints.

@return Array of objects representing DependencyCheckPoint."
      end

      operation 562056 "getRestartMax"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return how many restarts for this task are allowed "
      end

      operation 562184 "setRestartMax"
	public explicit_return_type "void"
	nparams 1
	  param in name "restartMax" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets how many restarts for this task are allowed.

@param restartMax number of allowed restarts"
      end

      operation 562312 "getTimeoutRun"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return how long (in milliseconds) this task can run (from started to
finished state). Zero if not restricted"
      end

      operation 562440 "setTimeoutRun"
	public explicit_return_type "void"
	nparams 1
	  param in name "timeoutRun" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets how long (in milliseconds) this task can run (from started to finished
state).

@param timeoutRun how long (in milliseconds) this task can run (from
        started to finished state); zero if not restricted"
      end

      operation 562568 "getDetailedLoad"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return flag indicating if the task want to enable detailed load
         monitoring"
      end

      operation 562696 "setDetailedLoad"
	public explicit_return_type "void"
	nparams 1
	  param inout name "detailedLoad" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the flag indicating if the task want to enable detailed load
monitoring.

@param detailedLoad flag indicating if the task want to enable detailed
        load monitoring"
      end

      operation 562824 "getDetailedLoadInterval"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return how often do detailed load monitoring (in milliseconds). Value 0
means \"use default\".

@return How often do detailed load monitoring (in milliseconds). Value 0
         means \"use default\"."
      end

      operation 562952 "setDetailedLoadInterval"
	public explicit_return_type "void"
	nparams 1
	  param in name "detailedLoadInterval" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set how often do detailed load monitoring (in milliseconds). Value 0 means
\"use default\".

@param detailedLoadInterval How often do detailed load monitoring (in
	milliseconds). Value 0 means \"use default\"."
      end

      operation 563080 "DeprecatedTaskDescriptor"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor required by Serializable."
      end

      operation 563208 "DeprecatedTaskDescriptor"
	private explicit_return_type ""
	nparams 5
	  param in name "taskId" explicit_type "String"
	  param in name "contextId" explicit_type "String"
	  param inout name "packageRsl" type class_ref 138242 // Condition
	  param inout name "hostRuntimesRsl" type class_ref 138242 // Condition
	  param in name "treeAddress" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create new TaskDescriptor.

@param taskId Identification of the task.
@param contextId ID of the context task should run in.
@param packageRsl RSL condition for package.
@param hostRuntimesRsl RSL condition for hostRuntimes.
@param treeAddress Address of the task in the visual tree."
      end

      operation 563336 "DeprecatedTaskDescriptor"
	private explicit_return_type ""
	nparams 3
	  param inout name "beenService" type class_ref 197128 // BootTask
	  param in name "host" explicit_type "String"
	  param in name "treeAddress" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "	TODO NEVER USED!
/**
Create new TaskDescriptor.

@param taskId Identification of the task.
@param contextId ID of the context task should run in.
@param packageRsl RSL condition for package.
@param hostTaskId ID of task determining hostRuntime.
@param treeAddress Address of the task in the visual tree.

	private TaskDescriptor(
String taskId,
String contextId,
Condition packageRsl,
String hostTaskId,
String treeAddress
) {
setTaskId(taskId);
setContextId(contextId);
setPackageRsl(packageRsl);
setHostRuntimesAsTask(hostTaskId);
this.treeAddress = treeAddress;
}


Creates task descriptor for BEEN service.

@param beenService	String identification of BEEN service
@param host	Host on which the service should run
@param treeAddress Address of the task in the visual tree.

@see BeenService"
      end

      operation 563464 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Brief implementation of toString(), used for debugging purposes"
      end

      operation 563592 "createBootTask"
	class_operation public return_type class_ref 197000 // DeprecatedTaskDescriptor
	nparams 3
	  param in name "bootTask" explicit_type "String"
	  param in name "host" explicit_type "String"
	  param in name "treeAddress" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Factory method for creating BEEN boot tasks. Boot packages are placed
in HostRuntime's boot directory.

As among boot tasks are also HostManager and SoftwareManager i.e. BEEN
services that expand RSL for regular tasks, boot tasks don't use
RSL in their tasks descriptors neither for hosts not for package
specification. Instead directly package name and host name will be
specified in the task descriptor

@param bootTask	name of boot tasks to start
@param host		host name on which the boot task should run
@param treeAddress Address of the task in the visual tree.

@see BootTask"
      end

      operation 563720 "createDetector"
	class_operation public return_type class_ref 197000 // DeprecatedTaskDescriptor
	nparams 3
	  param in name "name" explicit_type "String"
	  param in name "host" explicit_type "String"
	  param in name "treeAddress" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates task descriptor for a detector task
Can't be done via {@link #createBootTask(String, String)} call because we
need detetctor task identifier to determine task package, but also unqiue
task identifier so that it every time in separate directory 

@param name 	unique name of detector task
@param host	host on which the task should run
@param treeAddress Address of the task in the visual tree.
@return	task descriptor for the detector task"
      end

      operation 563848 "createTask"
	class_operation public return_type class_ref 197000 // DeprecatedTaskDescriptor
	nparams 5
	  param in name "taskID" explicit_type "String"
	  param in name "taskName" explicit_type "String"
	  param in name "context" explicit_type "String"
	  param inout name "hostRSL" type class_ref 138242 // Condition
	  param in name "treeAddress" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility method for creating tasks for regular tasks.
The method creates TaskDescriptor using RSL for matching hosts and 
task package. Task package match is based on task name.

@param taskID	identifier of a task to created
@param taskName	name of task to create
@param context	identifier of a context to create
@param hostRSL	RSL to match target hosts
@param treeAddress Address of the task in the visual tree.
@return	corresponding TaskDescriptor for the task"
      end

      operation 563976 "createDetector"
	class_operation public return_type class_ref 197000 // DeprecatedTaskDescriptor
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "host" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "TODO LEGACY constructors follow. All of them should be removed as the rest of the code gets
updated.


Creates task descriptor for a detector task
Can't be done via {@link #createBootTask(String, String)} call because we
need detetctor task identifier to determine task package, but also unqiue
task identifier so that it every time in separate directory 

@param name 	unique name of detector task
@param host	host on which the task should run
@return	task descriptor for the detector task"
      end

      operation 564104 "createTask"
	class_operation public return_type class_ref 197000 // DeprecatedTaskDescriptor
	nparams 4
	  param in name "taskID" explicit_type "String"
	  param in name "taskName" explicit_type "String"
	  param in name "context" explicit_type "String"
	  param inout name "hostRSL" type class_ref 138242 // Condition
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Utility method for creating tasks for regular tasks.
The method creates TaskDescriptor using RSL for matching hosts and 
task package. Task package match is based on task name.

@param taskID	identifier of a task to created
@param taskName	name of task to create
@param context	identifier of a context to create
@param hostRSL	RSL to match target hosts
@return	corresponding TaskDescriptor for the task"
      end

      operation 564232 "createBootTask"
	class_operation public return_type class_ref 197000 // DeprecatedTaskDescriptor
	nparams 2
	  param in name "bootTask" explicit_type "String"
	  param in name "host" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Factory method for creating BEEN boot tasks. Boot packages are placed
in HostRuntime's boot directory.

As among boot tasks are also HostManager and SoftwareManager i.e. BEEN
services that expand RSL for regular tasks, boot tasks don't use
RSL in their tasks descriptors neither for hosts not for package
specification. Instead directly package name and host name will be
specified in the task descriptor

@param bootTask	name of boot tasks to start
@param host		host name on which the boot task should run

@see BootTask"
      end
    end

    class 197384 "TaskEventListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Callback interface used when listening for events in the Task Manager
(currently only task end). Those who are interested in the events must
register using {@link TaskManagerInterface#registerEventListener(TaskEventListener)}
method and later unregister using
<code>TaskManagerInterface.unregisterEventListener</code>.

@author Jiri Tauber"
      classrelation 245512 // <generalisation>
	relation 245512 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 245512 // <generalisation>
	  b parent class_ref 148226 // Serializable
      end

      operation 567048 "TaskFinished"
	public explicit_return_type "void"
	nparams 2
	  param in name "taskId" explicit_type "String"
	  param in name "contextId" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a task is finished.

@param taskId The finished task ID
@param contextId The finished task context "
      end
    end
  end

  package_ref 130562 // data

  deploymentview 130050 "taskmanager"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 150274 "HostRuntimeRegistrationListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.rmi.Remote;
import java.rmi.RemoteException;
${definition}"
      associated_classes
	class_ref 162946 // HostRuntimeRegistrationListener
      end
    end

    artifact 185474 "CheckPoint"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 205698 // CheckPoint
      end
    end

    artifact 185602 "Dependency"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 143106 // Dependency
      end
    end

    artifact 185730 "HostRuntimesPortInterface"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.net.URI;
import java.rmi.Remote;
import java.rmi.RemoteException;
import java.util.Date;
import cz.cuni.mff.been.logging.LogLevel;
import cz.cuni.mff.been.logging.LogStorageException;
import cz.cuni.mff.been.taskmanager.data.TaskState;
${definition}"
      associated_classes
	class_ref 181506 // HostRuntimesPortInterface
      end
    end

    artifact 185858 "ServiceEntry"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.net.URI;
import java.rmi.Remote;
${definition}"
      associated_classes
	class_ref 184578 // ServiceEntry
      end
    end

    artifact 185986 "SystemOutput"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 205954 // SystemOutput
      end
    end

    artifact 186114 "TaskDescriptor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Properties;
import cz.cuni.mff.been.common.rsl.AndCondition;
import cz.cuni.mff.been.common.rsl.Condition;
import cz.cuni.mff.been.common.rsl.EqualsCondition;
import cz.cuni.mff.been.softwarerepository.PackageType;
import cz.cuni.mff.been.task.Task;
import cz.cuni.mff.been.taskmanager.data.TaskExclusivity;
${definition}"
      associated_classes
	class_ref 131074 // TaskDescriptor
      end
    end

    artifact 186242 "TaskDescriptorException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 143618 // TaskDescriptorException
      end
    end

    artifact 186370 "TaskDescriptorXmlParser"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;
import cz.cuni.mff.been.common.rsl.Condition;
import cz.cuni.mff.been.common.rsl.ParseException;
import cz.cuni.mff.been.common.rsl.ParserWrapper;
import cz.cuni.mff.been.taskmanager.data.TaskExclusivity;
${definition}"
      associated_classes
	class_ref 206338 // TaskDescriptorXmlParser
      end
    end

    artifact 186498 "TaskManagerException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import cz.cuni.mff.been.common.BeenException;
${definition}"
      associated_classes
	class_ref 205826 // TaskManagerException
      end
    end

    artifact 186626 "TaskManagerInterface"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.net.URI;
import java.rmi.Remote;
import java.rmi.RemoteException;
import cz.cuni.mff.been.logging.LogRecord;
import cz.cuni.mff.been.logging.LogStorageException;
import cz.cuni.mff.been.logging.OutputHandle;
import cz.cuni.mff.been.taskmanager.data.ContextEntry;
import cz.cuni.mff.been.taskmanager.data.TaskEntry;
${definition}"
      associated_classes
	class_ref 181762 // TaskManagerInterface
      end
    end

    artifact 186754 "TaskManagerImplementation"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.Serializable;
import java.net.InetAddress;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.UnknownHostException;
import java.rmi.Naming;
import java.rmi.Remote;
import java.rmi.RemoteException;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Random;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.OutputKeys;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.xml.sax.SAXException;
import cz.cuni.mff.been.common.anttasks.AntTaskException;
import cz.cuni.mff.been.common.anttasks.Delete;
import cz.cuni.mff.been.hostmanager.HostManagerException;
import cz.cuni.mff.been.hostmanager.HostManagerInterface;
import cz.cuni.mff.been.hostmanager.HostManagerService;
import cz.cuni.mff.been.hostmanager.database.HostInfoInterface;
import cz.cuni.mff.been.hostmanager.database.RSLRestriction;
import cz.cuni.mff.been.hostmanager.database.RestrictionInterface;
import cz.cuni.mff.been.hostruntime.HostRuntimeException;
import cz.cuni.mff.been.hostruntime.HostRuntimeInterface;
import cz.cuni.mff.been.hostruntime.TaskInterface;
import cz.cuni.mff.been.logging.FilesystemLogStorage;
import cz.cuni.mff.been.logging.LogLevel;
import cz.cuni.mff.been.logging.LogRecord;
import cz.cuni.mff.been.logging.LogStorage;
import cz.cuni.mff.been.logging.LogStorageException;
import cz.cuni.mff.been.logging.OutputHandle;
import cz.cuni.mff.been.softwarerepository.MatchException;
import cz.cuni.mff.been.softwarerepository.PackageMetadata;
import cz.cuni.mff.been.softwarerepository.RSLPackageQueryCallback;
import cz.cuni.mff.been.softwarerepository.SoftwareRepositoryInterface;
import cz.cuni.mff.been.softwarerepository.SoftwareRepositoryService;
import cz.cuni.mff.been.task.Service;
import cz.cuni.mff.been.task.Task;
import cz.cuni.mff.been.taskmanager.data.CheckPointEntry;
import cz.cuni.mff.been.taskmanager.data.ContextEntry;
import cz.cuni.mff.been.taskmanager.data.Data;
import cz.cuni.mff.been.taskmanager.data.HostRuntimeEntry;
import cz.cuni.mff.been.taskmanager.data.TaskData;
import cz.cuni.mff.been.taskmanager.data.TaskEntry;
import cz.cuni.mff.been.taskmanager.data.TaskExclusivity;
import cz.cuni.mff.been.taskmanager.data.TaskState;
${definition}"
      associated_classes
	class_ref 206466 // TaskManagerImplementation
      end
    end

    artifact 186882 "TaskManagerRunner"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.rmi.Naming;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import cz.cuni.mff.been.logging.LogLevel;
${definition}"
      associated_classes
	class_ref 206978 // TaskManagerRunner
      end
    end

    artifact 187010 "TaskRunner"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.rmi.Naming;
import cz.cuni.mff.been.taskmanager.data.TaskEntry;
${definition}"
      associated_classes
	class_ref 207106 // TaskRunner
      end
    end

    artifact 184840 "DeprecatedTaskDescriptor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Properties;
import cz.cuni.mff.been.common.rsl.AndCondition;
import cz.cuni.mff.been.common.rsl.Condition;
import cz.cuni.mff.been.common.rsl.EqualsCondition;
import cz.cuni.mff.been.jaxb.td.TaskExclusivity;
import cz.cuni.mff.been.softwarerepository.PackageType;
import cz.cuni.mff.been.task.Task;
${definition}"
      associated_classes
	class_ref 197000 // DeprecatedTaskDescriptor
      end
      comment " BEEN: Benchmarking Environment
 ==============================

 File author: Antonin Tomecek

 GNU Lesser General Public License Version 2.1
 ---------------------------------------------
 Copyright (C) 2004-2006 Distributed Systems Research Group,
 Faculty of Mathematics and Physics, Charles University in Prague

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License version 2.1, as published by the Free Software Foundation.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 MA  02111-1307  USA"
    end

    artifact 184968 "TaskDescriptorHelper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.Serializable;
import java.util.List;
import java.util.TreeMap;
import java.util.Map.Entry;
import cz.cuni.mff.been.common.rsl.AndCondition;
import cz.cuni.mff.been.common.rsl.Condition;
import cz.cuni.mff.been.common.rsl.EqualsCondition;
import cz.cuni.mff.been.common.serialize.Deserialize;
import cz.cuni.mff.been.common.serialize.DeserializeException;
import cz.cuni.mff.been.common.serialize.Serialize;
import cz.cuni.mff.been.jaxb.Factory;
import cz.cuni.mff.been.jaxb.td.Arguments;
import cz.cuni.mff.been.jaxb.td.Dependencies;
import cz.cuni.mff.been.jaxb.td.DependencyCheckPoint;
import cz.cuni.mff.been.jaxb.td.FailurePolicy;
import cz.cuni.mff.been.jaxb.td.HostRuntimes;
import cz.cuni.mff.been.jaxb.td.Java;
import cz.cuni.mff.been.jaxb.td.JavaOptions;
import cz.cuni.mff.been.jaxb.td.LoadMonitoring;
import cz.cuni.mff.been.jaxb.td.Package;
import cz.cuni.mff.been.jaxb.td.StrVal;
import cz.cuni.mff.been.jaxb.td.TaskDescriptor;
import cz.cuni.mff.been.jaxb.td.TaskProperties;
import cz.cuni.mff.been.jaxb.td.TaskProperty;
import cz.cuni.mff.been.jaxb.td.TaskPropertyObject;
import cz.cuni.mff.been.jaxb.td.TaskPropertyObjects;
import cz.cuni.mff.been.softwarerepository.PackageType;
${definition}"
      associated_classes
	class_ref 148360 // TaskDescriptorHelper
      end
    end

    artifact 185096 "TaskEventListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 197384 // TaskEventListener
      end
    end
  end

  package_ref 128776 // tasktree
end
