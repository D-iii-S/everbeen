class SoftwareAlias
!!!384898.java!!!	SoftwareAlias(in aliasName : String, in productName : String, in productVersion : String, in productVendor : String)
		
		super(HostInfoInterface.Objects.SOFTWARE_ALIAS, null);
		
		this.aliasName = aliasName;
		this.productName = productName;
		this.productVersion = productVersion;
		this.productVendor = productVendor;
		
		try {
			putProperty(Properties.ALIAS_NAME, new ValueString(this.aliasName));
			putProperty(Properties.PRODUCT_NAME, new ValueString(this.productName));
			putProperty(Properties.PRODUCT_VENDOR, new ValueString(this.productVendor));
			putProperty(Properties.PRODUCT_VERSION, new ValueVersion(this.productVersion));
		} catch (Exception e) {
			e.printStackTrace();
			
			assert false : "Unable to add properties to the Software Alias.";
		}
!!!385026.java!!!	SoftwareAlias(inout node : Node)
		
		super(HostInfoInterface.Objects.SOFTWARE_ALIAS, null);
		
		parseXMLNode(node);
!!!385154.java!!!	exportAsElement(inout document : Document) : Element

		Element element = document.createElement(getXMLNodeName());
		
		element.appendChild(XMLHelper.writeValueToElement(document, aliasName, "alias"));
		element.appendChild(XMLHelper.writeValueToElement(document, productName, "name"));
		element.appendChild(XMLHelper.writeValueToElement(document, productVendor, "vendor"));
		element.appendChild(XMLHelper.writeValueToElement(document, productVersion, "version"));
		
		return element;
!!!385282.java!!!	getXMLNodeName() : String
		
		return ALIAS_XML_NODE_NAME;
!!!385410.java!!!	parseXMLNode(inout node : Node) : void
		
		if (!node.getNodeName().equals(getXMLNodeName())) {
			throw new InputParseException("Node does not contain Software Alias data.");
		}
		
		aliasName = XMLHelper.getSubNodeValueByName("alias", node);
		productName = XMLHelper.getSubNodeValueByName("name", node);
		productVersion = XMLHelper.getSubNodeValueByName("version", node);
		productVendor = XMLHelper.getSubNodeValueByName("vendor", node);
		
		try {
			putProperty(Properties.ALIAS_NAME, new ValueString(this.aliasName));
			putProperty(Properties.PRODUCT_NAME, new ValueString(this.productName));
			putProperty(Properties.PRODUCT_VENDOR, new ValueString(this.productVendor));
			putProperty(Properties.PRODUCT_VERSION, new ValueVersion(this.productVersion));
		} catch (Exception e) {
			e.printStackTrace();
			
			assert false : "Unable to add properties to the Software Alias.";
		}
!!!385538.java!!!	getAliasName() : String
		return aliasName;
!!!385666.java!!!	getProductName() : String
		return productName;
!!!385794.java!!!	getProductVendor() : String
		return productVendor;
!!!385922.java!!!	getProductVersion() : String
		return productVersion;
!!!386050.java!!!	hashCode() : int
		
		return productVendor.hashCode() + 31 * productVersion.hashCode()
		       + 967 * productName.hashCode() + 29789 * aliasName.hashCode();
!!!386178.java!!!	equals(inout o : Object) : boolean
		
		if (o instanceof SoftwareAlias) {
			SoftwareAlias p = (SoftwareAlias) o;
			
			return aliasName.equals(p.aliasName) && productVersion.equals(p.productVersion)
			       && productVendor.equals(p.productVendor) && productName.equals(p.productName);
		} else {
			return false;
		}
!!!386306.java!!!	toString() : String
		
		return "Alias{" + aliasName + "|" + productName + ", " + productVendor + ", " + productVersion + "}";
