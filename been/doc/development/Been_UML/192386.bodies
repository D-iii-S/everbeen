class ResultsRepositoryImplementation
!!!566274.java!!!	initialize(in dbaseDir : String, in tempDir : String) : void
		/* Very important to initialize before other components, which use it */
		Logger.initialize();
		database = Database.getInstance();
		database.initialize(dbaseDir, tempDir, 0);		
		analysisEntityManager = database.getAnalysisEntityManager();
		experimentEntityManager = database.getExperimentEntityManager();
		binaryEntityManager = database.getBinaryEntityManager();
		runEntityManager = database.getRunEntityManager();
		loadCollector = database.getLoadCollector();
		logCollector = database.getLogCollector();		
		rManager = database.getRManager();
		
!!!566402.java!!!	shutdown() : void
	    database.shutdown();	    
!!!566530.java!!!	getInstance() : ResultsRepositoryImplementation
		if (resultsRepositoryInstance == null) {
			return new ResultsRepositoryImplementation();
		} else {
			return resultsRepositoryInstance;
		}
!!!566658.java!!!	rScriptingEnabled() : boolean
	    return rManager.rScriptingEnabled();
!!!566786.java!!!	addAnalysis(inout description : AnalysisEntity) : void

		analysisEntityManager.addAnalysis(description);
!!!566914.java!!!	addAnalysisMetadata(inout analysisId : AID, in key : String, in value : String) : void

		analysisEntityManager.addAnalysisMetadata(analysisId, key, value);
!!!567042.java!!!	addExperiment(inout description : ExperimentEntity) : void
		
		experimentEntityManager.addExperiment(description);				
!!!567170.java!!!	addExperimentMetadata(inout analysisId : AID, inout experimentId : EID, in key : String, in value : String) : void
		
		experimentEntityManager.addExperimentMetadata(analysisId, experimentId, key, value);		
!!!567298.java!!!	addBinary(inout description : BinaryEntity) : void
	
		binaryEntityManager.addBinary(description);		
!!!567426.java!!!	addBinaryMetadata(inout analysisId : AID, inout experimentId : EID, inout binaryId : BID, in key : String, in value : String) : void
	
		binaryEntityManager.addBinaryMetadata(analysisId, experimentId, binaryId, key, value);		
!!!567554.java!!!	initLoadUpload(inout aid : AID, inout eid : EID, inout bid : BID, inout rid : RID) : void
		loadCollector.initLoadUpload(aid, eid, bid, rid);
!!!567682.java!!!	closeLoadUpload(inout aid : AID, inout eid : EID, inout bid : BID, inout rid : RID, inout valid : boolean) : void
		loadCollector.closeLoadUpload(aid, eid, bid, rid, valid);
!!!567810.java!!!	uploadLoadInfo(inout aid : AID, inout eid : EID, inout bid : BID, inout rid : RID, in filename : String, in host : String, in port : int, inout blocking : boolean) : UploadHandle
 
		
		return loadCollector.uploadLoadInfo(aid, eid, bid, rid, filename, host, port, blocking);
!!!567938.java!!!	uploadRunResults(inout aid : AID, inout eid : EID, inout bid : BID, inout rid : RID, in roleName : String, in host : String, in port : int, inout runValid : boolean, inout blocking : boolean, in tableIndex : int, in totalTables : int) : UploadHandle
		
		
		return runEntityManager.uploadRunResults(aid, eid, bid, rid, roleName,
				host, port, runValid, blocking, tableIndex, totalTables);
!!!568066.java!!!	getFileUploadStatus(inout handle : UploadHandle) : UploadStatus
		return database.getFileUploadStatus(handle);
!!!568194.java!!!	endRunUpload(inout aid : AID, inout eid : EID, inout bid : BID, inout rid : RID, in host : String, inout handle : UploadHandle) : void
		runEntityManager.endRunUpload(aid, eid, bid, rid, host, handle);
!!!568322.java!!!	endFileUpload(inout handle : UploadHandle) : void
		database.endFileUpload(handle);
!!!568450.java!!!	getAnalysisInterface() : EntityInterface
		return new AnalysisImplementation();
!!!568578.java!!!	beginRScriptPackageUpload(in name : String, inout ip : InetAddress, in port : int) : UploadHandle
		
		try {
		    	return rManager.uploadAndRegisterRPackge(name, ip.getCanonicalHostName(), port);
		} catch (ResultsRepositoryBusyException e) {
			Logger.logError("Unable to upload script package - Results Repository is busy");
		} catch (UnknownHostException e) {
			Logger.logError("Unable to upload script package - Host not found");
		} catch (IOException e) {
			Logger.logError("Unable to upload script package - I/O error " + e.getMessage());
		}
		return null;
!!!568706.java!!!	deleteRScriptPackage(in name : String) : boolean
		return rManager.deleteRPackage(name);
!!!568834.java!!!	endRScriptPackageUpload(inout handle : UploadHandle) : void
		database.endFileUpload(handle);		
!!!568962.java!!!	getAnalysisCallbackRScripts(inout aid : AID) : CallbackRScripts
		return rManager.getAnalysisCallbackRScripts(aid); 
!!!569090.java!!!	getRFunctionsHelp() : RFunctionHelp
	    return rManager.getRFunctionsHelp();
!!!569218.java!!!	getRScriptPackageUploadStatus(inout handle : UploadHandle) : UploadStatus
		return database.getFileUploadStatus(handle);
!!!569346.java!!!	getRScriptPackages() : RScriptPackage
	    return rManager.getRScriptPackages();		
!!!569474.java!!!	getRejectedRScriptPackageUploadErrorMessages(inout handle : UploadHandle) : String
		return rManager.getRejectedRPackageUploadErrorMessages(handle);
!!!569602.java!!!	setAnalysisCallbackRScripts(inout aid : AID, inout callbackRScripts : CallbackRScripts) : void
		rManager.setAnalysisCallbackRScripts(aid, callbackRScripts);
!!!569730.java!!!	setExperimentCallbackRScripts(inout aid : AID, inout eid : EID, inout callbackRScripts : CallbackRScripts) : void
	    rManager.setExperimentCallbackRScripts(aid, eid, callbackRScripts);
!!!569858.java!!!	finishLogUpload(inout analysisId : AID, inout experimentId : EID) : void
		logCollector.finishLogUpload(analysisId, experimentId);
!!!569986.java!!!	performLogUpload(inout aid : AID, inout eid : EID, in contextName : String, in taskName : String) : void
		logCollector.performLogUpload(aid, eid, contextName, taskName);
		
!!!570114.java!!!	enqueueScriptExecution(inout aid : AID, inout eid : EID, in functionToRun : String) : void
	    RScriptsRunner.getInstance().enqueueScriptExecution(aid, eid, functionToRun);
!!!570242.java!!!	enqueueScriptExecution(inout aid : AID, inout eid : EID, inout bid : BID, in functionToRun : String) : void
		RScriptsRunner.getInstance().enqueueScriptExecution(aid, eid, functionToRun);
!!!570370.java!!!	enqueueScriptExecution(inout aid : AID, inout eid : EID, inout bid : BID, inout rid : RID, in functionToRun : String) : void
		RScriptsRunner.getInstance().enqueueScriptExecution(aid, eid, functionToRun);
!!!570498.java!!!	resourceRScripts() : void
			RManager.sourceRegisteredScripts();
!!!570626.java!!!	reportExperimentColumnNames(inout analysisId : AID, inout experimentId : EID, inout columnNames : ArrayList<String>) : void
		
		synchronized (LockManager.columnsLock) {
			experimentEntityManager.reportExperimentColumnNames(analysisId, experimentId, columnNames);
		}
		
