class HostManagerLogger
!!!301698.java!!!	HostManagerLogger(inout task : Task)
		
		if (task != null) {
			this.task = task;
			this.level = LogLevels.fromTaskLogLevel(task.getLogLevel());
		} else {
			this.level = DEFAULT_LOG_LEVEL;
		}
!!!301826.java!!!	HostManagerLogger(inout level : LogLevels)
		
		this.level = level;
!!!301954.java!!!	HostManagerLogger()
		
		this.level = DEFAULT_LOG_LEVEL;
!!!302082.java!!!	logInfo(in message : String) : void
		
		if (task != null) {
			task.logInfo(message);
		} else {
			if (level.ordinal() <= LogLevels.INFO.ordinal()) {
				System.out.println(TimeUtils.nowFormated() + " " + INFO_HEADER + " " + message);
			}
		}
!!!302210.java!!!	logInfo(in message : String, inout e : Exception) : void
		
		if (task != null) {
			task.logInfo(message + " Exception: " + e.getMessage() + ".");
		} else {
			if (level.ordinal() <= LogLevels.INFO.ordinal()) {
				System.out.println(TimeUtils.nowFormated() + " " + INFO_HEADER + " "
					+ message + " Exception: " + e.getMessage() + ".");
			}
		}
!!!302338.java!!!	logDebug(in message : String) : void
		
		if (task != null) {
			task.logDebug(message);
		} else {
			if (level.ordinal() <= LogLevels.DEBUG.ordinal()) {
				System.out.println(TimeUtils.nowFormated() + " " + DEBUG_HEADER + " " + message);
			}
		}
!!!302466.java!!!	logDebug(in message : String, inout e : Exception) : void
		
		if (task != null) {
			task.logDebug(message + " Exception: " + e.getMessage() + ".");
		} else {
			if (level.ordinal() <= LogLevels.DEBUG.ordinal()) {
				System.out.println(TimeUtils.nowFormated() + " " + DEBUG_HEADER + " "
					+ message + " Exception: " + e.getMessage() + ".");
			}
		}
!!!302594.java!!!	logTrace(in message : String) : void
		
		if (task != null) {
			task.logTrace(message);
		} else {
			if (level.ordinal() <= LogLevels.TRACE.ordinal()) {
				System.out.println(TimeUtils.nowFormated() + " " + TRACE_HEADER + " " + message);
			}
		}
!!!302722.java!!!	logTrace(in message : String, inout e : Exception) : void
		
		if (task != null) {
			task.logTrace(message + " Exception: " + e.getMessage() + ".");
		} else {
			if (level.ordinal() <= LogLevels.TRACE.ordinal()) {
				System.out.println(TimeUtils.nowFormated() + " " + TRACE_HEADER + " "
					+ message + " Exception: " + e.getMessage() + ".");
			}
		}
!!!302850.java!!!	logWarning(in message : String) : void
		
		if (task != null) {
			task.logWarning(message);
		} else {
			if (level.ordinal() <= LogLevels.WARNING.ordinal()) {
				System.out.println(TimeUtils.nowFormated() + " " + WARNING_HEADER + " " + message);
			}
		}
!!!302978.java!!!	logWarning(in message : String, inout e : Exception) : void
		
		if (task != null) {
			task.logWarning(message + " Exception: " + e.getMessage() + ".");
		} else {
			if (level.ordinal() <= LogLevels.WARNING.ordinal()) {
				System.out.println(TimeUtils.nowFormated() + " " + WARNING_HEADER + " "
					+ message + " Exception: " + e.getMessage() + ".");
			}
		}
!!!303106.java!!!	logError(in message : String) : void
		
		if (task != null) {
			task.logError(message);
		} else {
			if (level.ordinal() <= LogLevels.ERROR.ordinal()) {
				System.out.println(TimeUtils.nowFormated() + " " + ERROR_HEADER + " " + message);
			}
		}
!!!303234.java!!!	logError(in message : String, inout e : Exception) : void
		
		if (task != null) {
			task.logError(message + " Exception: " + e.getMessage() + ".");
		} else {
			if (level.ordinal() <= LogLevels.ERROR.ordinal()) {
				System.out.println(TimeUtils.nowFormated() + " " + ERROR_HEADER + " "
					+ message + " Exception: " + e.getMessage() + ".");
			}
		}
!!!303362.java!!!	logFatal(in message : String) : void
		
		if (task != null) {
			task.logFatal(message);
		} else {
			if (level.ordinal() <= LogLevels.FATAL.ordinal()) {
				System.out.println(TimeUtils.nowFormated() + " " + FATAL_HEADER + " " + message);
			}
		}
!!!303490.java!!!	logFatal(in message : String, inout e : Exception) : void
		
		if (task != null) {
			task.logInfo(message + " Exception: " + e.getMessage() + ".");
		} else {
			if (level.ordinal() <= LogLevels.FATAL.ordinal()) {
				System.out.println(TimeUtils.nowFormated() + " " + FATAL_HEADER + " "
					+ message + " Exception: " + e.getMessage() + ".");
			}
		}
!!!303618.java!!!	log(in message : String) : void
		
		if (level != LogLevels.NONE) {
			System.out.println(message);
		}
!!!303746.java!!!	log(in message : String, inout e : Exception) : void
		
		if (level != LogLevels.NONE) {
			System.out.println(message + " Exception: " + e.getMessage() + ".");
		}
!!!303874.java!!!	getLogLevel() : LogLevels
		
		return level;
!!!304002.java!!!	setLogLevel(inout level : LogLevels) : void
		
		this.level = level;
!!!304130.java!!!	isConsoleLogger() : boolean
		
		return task == null;
