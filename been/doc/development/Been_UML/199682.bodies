class JBossConfigure
!!!636162.java!!!	JBossConfigure()
		super();
!!!636290.java!!!	run() : void
		
		jbossRoot = getTaskProperty(JBOSS_ROOT);
		logInfo("JBoss root: " + jbossRoot);

		
		String fs = File.separator;
		
		try {
			String jawsDatasource = getTaskProperty(JAWS_DATASOURCE);
			if (jawsDatasource != null) {
				String path = jbossRoot + fs + "server" + fs + "default" 
				+ fs + "conf" + fs + "standardjaws.xml";
				logInfo("Setting jaws datasource to \"" + jawsDatasource + "\" in file " 
						+ path);
				RegexSubstitute.substitute(path, 
						"<datasource>java:/DefaultDS</datasource>", 
						"<datasource>" + jawsDatasource + "</datasource>");
			}
			
			String jawsTypeMapping = getTaskProperty(JAWS_TYPEMAPPING);
			if (jawsTypeMapping != null) {
				String path = jbossRoot + fs + "server" + fs + "default"
				+ fs + "conf" + fs + "standardjaws.xml";
				logInfo("Setting jaws type mapping tp \"" + jawsTypeMapping + "\" in file "
						+ path);
				RegexSubstitute.substitute(path, 
						"<type-mapping>Hypersonic SQL</type-mapping>", 
						"<type-mapping>" + jawsTypeMapping + "</type-mapping>");
			}
			
			String cmpJdbcDatasource = getTaskProperty(CMP_JDBC_DATASOURCE);
			if (cmpJdbcDatasource != null) {
				String path = jbossRoot + fs + "server" + fs + "default"
				+ fs + "conf" + fs + "standardjbosscmp-jdbc.xml";
				logInfo("Setting jdbc datasource to \"" + cmpJdbcDatasource + "\" in file "
						+ path);
				RegexSubstitute.substitute(path, 
						"<datasource>java:/DefaultDS</datasource>", 
						"<datasource>" + cmpJdbcDatasource + "</datasource>");
			}
			
			String cmpJdbcTypeMapping = getTaskProperty(CMP_JDBC_TYPEMAPPING);
			if (cmpJdbcTypeMapping != null) {
				String path = jbossRoot + fs + "server" + fs + "default"
				+ fs + "conf" + fs + "standardjbosscmp-jdbc.xml";
				logInfo("Setting jdbc type mapping to \"" + cmpJdbcTypeMapping + "\" in file "
						+ path);
				RegexSubstitute.substitute(path, 
						"<!-- optional since 4.0 <datasource-mapping>Hypersonic SQL</datasource-mapping> -->", 
						"<datasource-mapping>" + cmpJdbcTypeMapping + "</datasource-mapping>");
			}
			
			String jnpPort = getTaskProperty(JBOSS_JNP_PORT);
			if (jnpPort != null) {
				String path = jbossRoot + fs + "server" + fs + "default"
				+ fs + "conf" + fs + "jboss-service.xml";
				logInfo("Setting JNP port to \"" + jnpPort + "\" in file "
						+ path);
				RegexSubstitute.substitute(path, 
						"1099", 
						jnpPort);
			}

			String webServicePort = getTaskProperty(JBOSS_WEBSERVICE_PORT);
			if (webServicePort != null) {
				String path = jbossRoot + fs + "server" + fs + "default"
				+ fs + "conf" + fs + "jboss-service.xml";
				logInfo("Setting webservice port to \"" + webServicePort + "\" in file "
						+ path);
				RegexSubstitute.substitute(path, 
						"8083", 
						webServicePort);
			}

			String callByValue = getTaskProperty(NAMING_CALL_BY_VALUE);
			if (callByValue != null) {
				String path = jbossRoot + fs + "server" + fs + "default"
				+ fs + "conf" + fs + "jboss-service.xml";
				logInfo("Setting Naming CallByValue attribute to \"" + callByValue + "\" in file "
						+ path);
				RegexSubstitute.substitute(path, 
						"<attribute name=\"CallByValue\">false</attribute>", 
						"<attribute name=\"CallByValue\">" + callByValue + "</attribute>");
			}
			
			String useJBossWebLoader = getTaskProperty(USE_JBOSS_WEB_LOADER);
			if (useJBossWebLoader != null) {
				String path = jbossRoot + fs + "server" + fs + "default"
				+ fs + "deploy" + fs + "jbossweb-tomcat55.sar" + fs + "META-INF" + fs
				+ "jboss-service.xml";
				logInfo("Setting UseJBossWebLoader attribute to \"" + useJBossWebLoader + "\" in file "
						+ path);
				RegexSubstitute.substitute(path, 
						"<attribute name=\"UseJBossWebLoader\">false</attribute>", 
						"<attribute name=\"UseJBossWebLoader\">" + useJBossWebLoader
						+ "</attribute>");
			}

		} catch (Exception e) {
			throw new TaskException("Cannot edit configuration file", e);
		}

		logInfo("Copying the MySQL JDBC connector");
		try {
			Copy.copyToDir(getTaskDirectory() + fs + "mysql-connector.jar", 
					jbossRoot + fs + "server" + fs + "default"
					+ fs + "lib");
		} catch (AntTaskException e) {
			throw new TaskException("Cannot copy the mysql jdbc connector "
					+ getTaskDirectory() + fs + "mysql-connector.jar"
					+ " to the directory " 
					+ jbossRoot + fs + "server" + fs + "default"
					+ fs + "lib",
					e);
		}
!!!636418.java!!!	checkRequiredProperties() : void
		checkRequiredProperty(JBOSS_ROOT);
