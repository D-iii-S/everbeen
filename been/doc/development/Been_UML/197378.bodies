class AntBuild
!!!627202.java!!!	AntBuild()
		super();
!!!627330.java!!!	run() : void
		directory = getTaskProperty(DIRECTORY);
		if (directory != null) {
			logInfo("Directory: " + directory);
		}
		
		target = getTaskProperty(TARGET);
		if (target != null) {
			logInfo("Target: " + target);
		}
		
		parameters = getTaskProperty(PARAMETERS);
		if (parameters != null) {
			logInfo("Parameters: " + parameters);
		}

		// create the command to launch Ant
		ArrayList<String> params = new ArrayList<String>();
		
		if (isRunningInWindows()) {
			params.add("cmd");
			params.add("/C");
			params.add("call");
		}
		params.add("ant");
		
		// parse the command line arguments for Ant
		if (parameters != null) {
			Scanner scanner = new Scanner(parameters);
			scanner.useDelimiter(" ");
			ScannerExtended scannerEx = new ScannerExtended(scanner);
			while (scannerEx.hasNext()) {
				params.add(scannerEx.next());
			}
		}

		if (target != null) {
			params.add(target);
		}

		String[] cmdArray = params.toArray(new String[params.size()]);
		
		try {
			logInfo("Starting Ant");
			logInfo("Executing: " + ArrayUtils.join(" ", cmdArray));
			
			ProcessBuilder builder = new ProcessBuilder(cmdArray);
			Map<String, String> env = builder.environment();
			if (env.containsKey("CLASSPATH")) {
				logDebug("Removing CLASSPATH");
				env.remove("CLASSPATH");
			}
			builder.directory(new File(directory));
			Process p = builder.start();
			p.getOutputStream().close();

			/* Read in the output from the subprocess */
			OutputReader stdoutReader = 
				new OutputReader(p.getInputStream(), OutputType.STDOUT);
			OutputReader stderrReader = 
				new OutputReader(p.getErrorStream(), OutputType.STDERR);
			stdoutReader.start();
			stderrReader.start();
			// wait until the script finishes
			if (p.waitFor() != 0) {
				throw new TaskException("Build failed");
			}
		} catch (TaskException e) {
			throw e;
		} catch (Exception e) {
			throw new TaskException("Cannot run Ant", e);
		}
		
		logInfo("Build succesfull");
		checkPointReached("finish", null);
!!!627458.java!!!	checkRequiredProperties() : void
		checkRequiredProperty(DIRECTORY);
