class QualifiedConditionTest
!!!831234.java!!!	testQualifiedCondition1() : void
		assertEquals(
			new QualifiedCondition(
				"x",
				new EqualsCondition<LongWithUnit>("a", new LongWithUnit("5"))
			),
			ParserWrapper.parseString("x { a == 5 }")
		);
!!!831362.java!!!	testQualifiedCondition2() : void
		assertEquals(
			new QualifiedCondition(
				"x.y.z",
				new EqualsCondition<LongWithUnit>("a", new LongWithUnit("5"))
			),
			ParserWrapper.parseString("x.y.z { a == 5 }")
		);
!!!831490.java!!!	testToString() : void
		assertEquals(
			"x { a == 5 }",
			ParserWrapper.parseString("x { a == 5 }").toString()
		);
!!!831618.java!!!	testInvalidProperty() : void
		try {
			Utils.eval("invalidProperty { subproperty == 42 }", context);
			fail();
		} catch (InvalidPropertyException e) {
			/* Eat it. */
		}
!!!831746.java!!!	testInvalidPropertyType() : void
		try {
			Utils.eval("longProperty { subproperty == 42 }", context);
			fail();
		} catch (InvalidPropertyException e) {
			/* Eat it. */
		}
!!!831874.java!!!	testContainerPropertyTrue() : void
		assertTrue(Utils.eval("mother { age == 30 } ", context));
!!!832002.java!!!	testContainerPropertyFalse() : void
		assertFalse(Utils.eval("mother { age > 30 } ", context));
!!!832130.java!!!	testArrayPropertyTrue() : void
		assertTrue(Utils.eval("children { age == 12 } ", context));
!!!832258.java!!!	testArrayPropertyFalse() : void
		assertFalse(Utils.eval("children { age < 12 } ", context));
!!!832386.java!!!	testArrayPropertyFalseSpecial() : void
		/* Tests if the expression in {...} is really evaluated in context of one
		 * child, not both.
		 */ 
		assertFalse(Utils.eval("children { name == \"name1\" && age == 13 } ", context));
