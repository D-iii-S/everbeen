class GroupsQueryInterface
!!!392194.java!!!	main(in args : String) : void

		String managerURL = MANAGER_URL_DEFAULT;

		/* set path to the manager from the commandline.
		 */
		if (args.length > 0) {
			managerURL = args[0];
		}

		/* Connect to Host Manager
		 */
		HostManagerInterface manager = null;
		
		try {
			manager = (HostManagerInterface) Naming.lookup("rmi://" + managerURL + INTERFACE_URL);
		} catch (Exception e) {
			System.err.println("Unable to connect to the Host Manager.");
			System.err.println("Error message: " + e.getMessage());
			return;
		}

		System.out.println("Creating groups...");
		
		/* Create group for hosts with more than 200 GB disk space.
		 */
		HostGroup group200 = null;
		
		try {
			group200 = manager.createGroup(new HostFilter(214748364800L), "group_200");
		} catch (Exception e) {
			System.err.println("Unable to create group_200.");
			System.err.println("Error message: " + e.getMessage());
			return;
		}
		
		/* Create group for hosts with more than 500 GB disk space.
		 */
		HostGroup group500 = null;
		
		try {
			group500 = manager.createGroup(new HostFilter(536870912000L), "group_500");
		} catch (Exception e) {
			System.err.println("Unable to create group_500.");
			System.err.println("Error message: " + e.getMessage());
			return;
		}


		System.out.println("Adding groups...");
		
		try {
			manager.addGroup(group200);
			System.out.println("group_200 added successfully.");
		} catch (Exception e) {
			System.err.println("Unable to add group_200 to the database.");
			System.err.println("Error message: " + e.getMessage());
			return;
		}

		try {
			manager.addGroup(group500);
			System.out.println("group_500 added successfully.");
		} catch (Exception e) {
			System.err.println("Unable to add group_500 to the database.");
			System.err.println("Error message: " + e.getMessage());
			return;
		}
		
		System.out.println();
		System.out.println("Number of groups in database: " + manager.getGroupCount());
		System.out.println();
		
		/* Walk through all of the groups in database and write members to the output.
		 */
		String []groups = manager.getGroupNames();
		
		for (String cur: groups) {
		
			try {
				System.out.println(manager.getGroup(cur));
			} catch (Exception e) {
				System.err.println("Error querying group.");
				System.err.println("Error message: " + e.getMessage());
			}
		}
