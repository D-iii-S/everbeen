format 70
"load" // been::src::cz::cuni::mff::been::hostmanager::load
  revision 4
  modified_by 8 "BoRiS"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "cz/cuni/mff/been/hostmanager/load"
  java_package "cz.cuni.mff.been.hostmanager.load"
  classview 131586 "load"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    classdiagram 132866 "LoadManager"
      draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A3-Landscape
    end

    class 160770 "LoadServerImplementation"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Implementation of Load Server. Load Server manages all load data collected by Load Monitor on hosts.

@author Branislav Repcek
"
      classrelation 205826 // <generalisation>
	relation 205826 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 205826 // <generalisation>
	  b parent class_ref 130178 // UnicastRemoteObject
      end

      classrelation 206082 // <realization>
	relation 206082 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 206082 // <realization>
	  b parent class_ref 162690 // LoadServerInterface
      end

      classrelation 206210 // <realization>
	relation 206210 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 206210 // <realization>
	  b parent class_ref 164098 // ValueChangeListener
      end

      classrelation 206338 // appData (<unidirectional association>)
	relation 206338 --->
	  a role_name "appData" private
	    comment "
Application settings.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 206338 // appData (<unidirectional association>)
	  b parent class_ref 160130 // HostManagerApplicationData
      end

      classrelation 206466 // database (<unidirectional association>)
	relation 206466 --->
	  a role_name "database" private
	    comment "
Database management.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 206466 // database (<unidirectional association>)
	  b parent class_ref 160514 // HostDatabaseEngine
      end

      classrelation 206594 // logger (<unidirectional association>)
	relation 206594 --->
	  a role_name "logger" private
	    comment "
Logger.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 206594 // logger (<unidirectional association>)
	  b parent class_ref 160258 // HostManagerLogger
      end

      classrelation 206722 // configuration (<unidirectional association>)
	relation 206722 --->
	  a role_name "configuration" private
	    comment "
Configuration.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 206722 // configuration (<unidirectional association>)
	  b parent class_ref 160386 // HostManagerOptionsInterface
      end

      classrelation 206850 // listeners (<unidirectional association>)
	relation 206850 --->
	  stereotype "ConcurrentHashMap"
	  a role_name "listeners" private
	    comment "
Maps listeners to their IDs.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}< ${type}, LoadMonitorEventListener > ${name}${value};
"
	    classrelation_ref 206850 // listeners (<unidirectional association>)
	  b parent class_ref 139010 // OID
      end

      classrelation 206978 // eventQueue (<unidirectional association>)
	relation 206978 --->
	  a role_name "eventQueue" private
	    comment "
Event queue.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 206978 // eventQueue (<unidirectional association>)
	  b parent class_ref 176898 // EventQueue
      end

      classrelation 207106 // eventReceiver (<unidirectional association>)
	relation 207106 --->
	  a role_name "eventReceiver" private
	    comment "
Event receiver.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 207106 // eventReceiver (<unidirectional association>)
	  b parent class_ref 177026 // EventReceiver
      end

      classrelation 207234 // cache (<unidirectional association>)
	relation 207234 --->
	  a role_name "cache" private
	    comment "
Cache manager.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 207234 // cache (<unidirectional association>)
	  b parent class_ref 175106 // ActivityMonitorCache
      end

      classrelation 207362 // activityMonitor (<unidirectional association>)
	relation 207362 --->
	  a role_name "activityMonitor" private
	    comment "
Activity monitor.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 207362 // activityMonitor (<unidirectional association>)
	  b parent class_ref 174850 // ActivityMonitor
      end

      classrelation 207490 // eventStorageListener (<unidirectional association>)
	relation 207490 --->
	  a role_name "eventStorageListener" private
	    comment "
Listener which stores data in the database.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 207490 // eventStorageListener (<unidirectional association>)
	  b parent class_ref 177282 // EventStorageListener
      end

      attribute 228482 "globalBriefModeInterval"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Global brief mode interval.

"
      end

      attribute 228610 "globalDetailedModeInterval"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Global detailed mode interval.

"
      end

      operation 440194 "LoadServerImplementation"
	public explicit_return_type ""
	nparams 1
	  param inout name "appData" type class_ref 160130 // HostManagerApplicationData
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 175234 // LoadMonitorException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create new Load Server.

@param appData Application data provided by the service.

@throws RemoteException If RMI error occurred.
@throws LoadMonitorException If an error occurred while initialising components
        of the Load Server.
"
      end

      operation 440322 "terminate"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 135042 // HostManagerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Terminate Load Server. This will free all resources and close all opened files.

@throws HostManagerException If some error occurred.
"
      end

      operation 440450 "clearHostLoadData"
	public explicit_return_type "void"
	nparams 1
	  param in name "hostName" explicit_type "String"
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 160002 // HostDatabaseException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadServerInterface#clearHostLoadData(java.lang.String)
"
      end

      operation 440578 "getLastSample"
	public return_type class_ref 176130 // LoadSample
	nparams 1
	  param in name "hostName" explicit_type "String"
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 135170 // ValueNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadServerInterface#getLastSample(java.lang.String)
"
      end

      operation 440706 "getLastHardwareDescription"
	public return_type class_ref 176002 // HardwareDescription
	nparams 1
	  param in name "hostName" explicit_type "String"
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 135170 // ValueNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadServerInterface#getLastHardwareDescription(java.lang.String)
"
      end

      operation 440834 "isHostOnline"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "hostName" explicit_type "String"
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 135170 // ValueNotFoundException
	  explicit_exception "UnknownHostException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadServerInterface#isHostOnline(java.lang.String)
"
      end

      operation 440962 "getHostStatus"
	public return_type class_ref 175362 // HostStatus
	nparams 1
	  param in name "hostName" explicit_type "String"
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 135170 // ValueNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
@see cz.cuni.mff.been.hostmanager.load.LoadServerInterface#getHostStatus(java.lang.String)
"
      end

      operation 441090 "getHostStatusMap"
	public return_type class_ref 175362 // HostStatus
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Map< String, ${type} > ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
@see cz.cuni.mff.been.hostmanager.load.LoadServerInterface#getHostStatusMap()
"
      end

      operation 441218 "reportEvent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 175874 // LoadMonitorEvent
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadServerInterface#reportEvent(cz.cuni.mff.been.hostmanager.load.LoadMonitorEvent)
"
      end

      operation 441346 "reportEvents"
	public explicit_return_type "void"
	nparams 1
	  param inout name "events" type class_ref 175874 // LoadMonitorEvent
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadServerInterface#reportEvents(cz.cuni.mff.been.hostmanager.load.LoadMonitorEvent[])
"
      end

      operation 441474 "reportEvents"
	public explicit_return_type "void"
	nparams 1
	  param inout name "events" explicit_type "Collection< LoadMonitorEvent >"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadServerInterface#reportEvents(java.util.Collection)
"
      end

      operation 441602 "registerEventListener"
	public return_type class_ref 139010 // OID
	nparams 1
	  param inout name "listener" type class_ref 176258 // LoadMonitorEventListener
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 161922 // InvalidArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadServerInterface#registerEventListener(cz.cuni.mff.been.hostmanager.load.LoadMonitorEventListener)
"
      end

      operation 441730 "unregisterEventListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listenerID" type class_ref 139010 // OID
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 135170 // ValueNotFoundException
	  exception class_ref 161922 // InvalidArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadServerInterface#unregisterEventListener(cz.cuni.mff.been.common.id.OID)
"
      end

      operation 441858 "getEventListener"
	public return_type class_ref 176258 // LoadMonitorEventListener
	nparams 1
	  param inout name "listenerID" type class_ref 139010 // OID
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 135170 // ValueNotFoundException
	  exception class_ref 161922 // InvalidArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadServerInterface#getEventListener(cz.cuni.mff.been.common.id.OID)
"
      end

      operation 441986 "newHostConnected"
	public explicit_return_type "void"
	nparams 1
	  param in name "hostName" explicit_type "String"
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 175234 // LoadMonitorException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
This method is called automatically by the HM when new host connects to the network.

@param hostName Name of the host.

@throws RemoteException If RMI error occurred.
@throws LoadMonitorException If other error occurred.
"
      end

      operation 442114 "hostDisconnected"
	public explicit_return_type "void"
	nparams 1
	  param in name "hostName" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Method called automatically by the Host Manager when host is disconnected from network.

@param hostName Name of the host that is disconnected.

@throws RemoteException If RMI error occurred.
"
      end

      operation 442242 "getConfiguration"
	public return_type class_ref 160386 // HostManagerOptionsInterface
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
@see cz.cuni.mff.been.hostmanager.load.LoadServerInterface#getConfiguration()
"
      end

      operation 442370 "valueChanged"
	public explicit_return_type "void"
	nparams 2
	  param inout name "option" type class_ref 163330 // Option
	  param in name "newValue" explicit_type "long"
	nexceptions 2
	  exception class_ref 135042 // HostManagerException
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
@see cz.cuni.mff.been.hostmanager.HostManagerOptions.ValueChangeListener#valueChanged(cz.cuni.mff.been.hostmanager.HostManagerOptions.Option, long)
"
      end

      operation 442498 "getStatsProvider"
	public return_type class_ref 177410 // HostDataStatistician
	nparams 1
	  param in name "hostName" explicit_type "String"
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 175234 // LoadMonitorException
	  exception class_ref 135170 // ValueNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
@see cz.cuni.mff.been.hostmanager.load.LoadServerInterface#getHostLoadDataProvider(java.lang.String)
"
      end
    end

    class 162690 "LoadServerInterface"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
This interface provides methods to access load data collected by the load monitors on the hosts
in the environment.

@author Branislav Repcek
"
      classrelation 205954 // <generalisation>
	relation 205954 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 205954 // <generalisation>
	  b parent class_ref 130818 // Remote
      end

      attribute 228354 "URL"
	public explicit_type "String"
	init_value "=  \"/been/hostmanager/\" + HostManagerService.REMOTE_INTERFACE_LOAD_SERVER"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Interface URL.

"
      end

      operation 438402 "getLastSample"
	public return_type class_ref 176130 // LoadSample
	nparams 1
	  param in name "hostName" explicit_type "String"
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 135170 // ValueNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get most recent sample received from the host. Note that this will not open data files on
the disk and therefore host must be registered on the Load Server in this session.

@param hostName Fully qualified network name of the host.

@return Most recent sample received from the host. <tt>null</tt> is returned if the host 
        is not registered on the Load Server or if no samples have been received yet. 

@throws RemoteException If RMI error occurred.
@throws ValueNotFoundException If host is not in database.
"
      end

      operation 438530 "getLastHardwareDescription"
	public return_type class_ref 176002 // HardwareDescription
	nparams 1
	  param in name "hostName" explicit_type "String"
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 135170 // ValueNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Retrieve most recent data about hardware configuration as reported by the Load Monitor.
Description is read from the cache and therefore host has to be registered on the Load Server
in this session.

@param hostName Fully qualified network name of the host to retrieve data about.

@return Most recent hardware configuration as reported by the Load Server. <tt>null</tt> is
        returned if no hardware configuration is in cache or if host is not registered
        on the Load Server.

@throws RemoteException If RMI error occurred.
@throws ValueNotFoundException If host is not in database.
"
      end

      operation 438658 "clearHostLoadData"
	public explicit_return_type "void"
	nparams 1
	  param in name "hostName" explicit_type "String"
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 160002 // HostDatabaseException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Remove all load data for given host.

@param hostName Name of the host.

@throws RemoteException If RMI error occurred.
@throws HostDatabaseException If an error occurred while updating database.
"
      end

      operation 438786 "isHostOnline"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "hostName" explicit_type "String"
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 135170 // ValueNotFoundException
	  explicit_exception "UnknownHostException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Test is given host is online and that Host Runtime is still running on it. This method will
try to connect to the Load Monitor on the host and call ping method. RMI binding for the
Load Monitor is not retrieved from the cache.

@param hostName Name of the host to test.

@return <tt>true</tt> if host is online and Load Monitor is running on it, <tt>false</tt>
        otherwise.

@throws RemoteException If RMI error occurred.
@throws ValueNotFoundException If host is not in database.
@throws UnknownHostException If host cannot be found on the network.
"
      end

      operation 438914 "getHostStatus"
	public return_type class_ref 175362 // HostStatus
	nparams 1
	  param in name "hostName" explicit_type "String"
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 135170 // ValueNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Retrieve status of the host. Note that this method does not attempt to connect to the host and
therefore status may not be accurate. To see if host is responding, use {@link #isHostOnline(String)}
method.

@param hostName Fully qualified network name of the host.

@return Status of the host.

@throws RemoteException If RMI exception occurred.
@throws ValueNotFoundException If host is not in database.
"
      end

      operation 439042 "getHostStatusMap"
	public return_type class_ref 175362 // HostStatus
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Map< String, ${type} > ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get map which maps host name to its last known status.

@return Map containing status of each host in the host database.

@throws RemoteException If RMI error occurred.
"
      end

      operation 439170 "reportEvent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 175874 // LoadMonitorEvent
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Report new event that occurred on the host.

@param event Event to report.

@throws RemoteException If RMI error occurred.
"
      end

      operation 439298 "reportEvents"
	public explicit_return_type "void"
	nparams 1
	  param inout name "events" type class_ref 175874 // LoadMonitorEvent
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Report events that occurred on the host.

@param events Events to report.

@throws RemoteException If RMI error occurred.
"
      end

      operation 439426 "reportEvents"
	public explicit_return_type "void"
	nparams 1
	  param inout name "events" explicit_type "Collection< LoadMonitorEvent >"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Report multiple events that occurred on the host.

@param events Event to report.

@throws RemoteException If RMI error occurred.
"
      end

      operation 439554 "registerEventListener"
	public return_type class_ref 139010 // OID
	nparams 1
	  param inout name "listener" type class_ref 176258 // LoadMonitorEventListener
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 161922 // InvalidArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Registers new event listener. Event listener will then receive any events its filter will accept.

@param listener Listener to register.

@return ID of the listener. This ID can later be used to unregister listener. Note that this
        ID is only way of accessing listener after it has been registered, so don't throw it 
        away :).

@throws RemoteException If RMI error occurred.
@throws InvalidArgumentException If listener is <tt>null</tt>
"
      end

      operation 439682 "unregisterEventListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listenerID" type class_ref 139010 // OID
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 135170 // ValueNotFoundException
	  exception class_ref 161922 // InvalidArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Unregister previously registered event listener. After unregistering, listener immediately 
stops receiving events.

@param listenerID ID of the listener returned when listener has been registered via 
       registerEventListener.
       
@throws RemoteException If RMI error occurred.
@throws ValueNotFoundException If listener with given ID has not been found.
@throws InvalidArgumentException If ID is <tt>null</tt>.
"
      end

      operation 439810 "getEventListener"
	public return_type class_ref 176258 // LoadMonitorEventListener
	nparams 1
	  param inout name "listenerID" type class_ref 139010 // OID
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 135170 // ValueNotFoundException
	  exception class_ref 161922 // InvalidArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get previously registered listener.

@param listenerID ID of the listener to retrieve.

@return Requested listener.

@throws RemoteException If RMI error occurred.
@throws ValueNotFoundException If no listener exists with given ID.
@throws InvalidArgumentException If ID is <tt>null</tt>.
"
      end

      operation 439938 "getConfiguration"
	public return_type class_ref 160386 // HostManagerOptionsInterface
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Retrieve object which contains configuration of the Host Manager and Load Server.
This object can be used to query or change configuration of the HM and LS.

@return Configuration manager for the Host Manager and Load Monitor.

@throws RemoteException If RMI error occurred.
"
      end

      operation 440066 "getStatsProvider"
	public return_type class_ref 177538 // HostDataStatisticianInterface
	nparams 1
	  param in name "hostName" explicit_type "String"
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 175234 // LoadMonitorException
	  exception class_ref 135170 // ValueNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Retrieve object which allows various queries on data collected by the Load Monitor on specified
host.

@param hostName Name of the host to retrieve data about.

@return Object which provides methods to access data collected by the Load Monitor.

@throws RemoteException If RMI error occurred.
@throws LoadMonitorException If an error occurred while reading input files.
@throws ValueNotFoundException If host is not in database.
"
      end
    end

    class 174850 "ActivityMonitor"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Monitors activity on the network and watches for newly connected or disconnected hosts.

@author Branislav Repcek
"
      classrelation 197634 // activityListener (<unidirectional association>)
	relation 197634 --->
	  a role_name "activityListener" private
	    comment "
Listener which stores incoming samples in the cache.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 197634 // activityListener (<unidirectional association>)
	  b parent class_ref 174978 // ActivityMonitorListener
      end

      classrelation 197762 // activityListenerID (<unidirectional association>)
	relation 197762 --->
	  a role_name "activityListenerID" private
	    comment "
Id of the activity listener.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 197762 // activityListenerID (<unidirectional association>)
	  b parent class_ref 139010 // OID
      end

      classrelation 197890 // loadServer (<unidirectional association>)
	relation 197890 --->
	  a role_name "loadServer" private
	    comment "
Load Server.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 197890 // loadServer (<unidirectional association>)
	  b parent class_ref 160770 // LoadServerImplementation
      end

      classrelation 198018 // appData (<unidirectional association>)
	relation 198018 --->
	  a role_name "appData" private
	    comment "
Settings and logs.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 198018 // appData (<unidirectional association>)
	  b parent class_ref 160130 // HostManagerApplicationData
      end

      attribute 215170 "timer"
	private explicit_type "Timer"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Timer for monitoring thread.

"
      end

      attribute 215298 "amRefreshTime"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Timer refresh speed (milliseconds).

"
      end

      attribute 215426 "deadHostDelta"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Time after which host is marked as dead (milliseconds).

"
      end

      classrelation 198146 // cache (<unidirectional association>)
	relation 198146 --->
	  a role_name "cache" private
	    comment "
Cache manager.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 198146 // cache (<unidirectional association>)
	  b parent class_ref 175106 // ActivityMonitorCache
      end

      operation 395522 "ActivityMonitor"
	public explicit_return_type ""
	nparams 3
	  param inout name "loadServer" type class_ref 160770 // LoadServerImplementation
	  param inout name "appData" type class_ref 160130 // HostManagerApplicationData
	  param inout name "cache" type class_ref 175106 // ActivityMonitorCache
	nexceptions 1
	  exception class_ref 175234 // LoadMonitorException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create new ActivityMonitor and start its thread.

@param loadServer Reference to the LoadServer.
@param appData Application's settings.
@param cache Cache manager.

@throws LoadMonitorException If an error occurred while registering {@link ActivityMonitorListener}.

@see cz.cuni.mff.been.hostmanager.load.ActivityMonitorListener
"
      end

      operation 395650 "restartActivityMonitorThread"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Restart thread with activity monitor.
"
      end

      operation 395778 "registerListener"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 175234 // LoadMonitorException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Register listener.

@throws LoadMonitorException If something failed (d'oh).
"
      end

      operation 395906 "reloadOptions"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 175234 // LoadMonitorException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Reload options.

@throws LoadMonitorException If reload failed.
"
      end

      operation 396034 "stop"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Stop Activity Monitor.
"
      end

      operation 396162 "getHostStatus"
	public return_type class_ref 175362 // HostStatus
	nparams 1
	  param in name "hostName" explicit_type "String"
	nexceptions 1
	  exception class_ref 161922 // InvalidArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get status of the host.

@param hostName Name of the host to check status of.

@return Status of the requested host. Note that this is only informative and may not be
        completely accurate since host may have crashed right after reporting its status
        correctly.
        
@throws InvalidArgumentException If host name is empty string or <tt>null</tt>. 
"
      end

      operation 396290 "newHostConnected"
	public explicit_return_type "void"
	nparams 1
	  param in name "hostName" explicit_type "String"
	nexceptions 2
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 135170 // ValueNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
This method is called automatically when new host connects to the network.

@param hostName Name of the host that has connected to the network.

@throws InvalidArgumentException If host name is empty string or <tt>null</tt>.
@throws ValueNotFoundException If host is not in cache yet.
"
      end

      class 175490 "ActivityMonitorThread"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 198274 // <generalisation>
	  relation 198274 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 198274 // <generalisation>
	    b parent class_ref 163714 // TimerTask
	end

	operation 396418 "run"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "
@see java.lang.Runnable#run()
"
	end
      end
    end

    class 174978 "ActivityMonitorListener"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
This listener accepts all events from all hosts and stores samples in the sample cache.
Also it monitors events that inform about new host connecting and host shutting down.

@author Branislav Repcek
"
      classrelation 199426 // <generalisation>
	relation 199426 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 199426 // <generalisation>
	  b parent class_ref 176258 // LoadMonitorEventListener
      end

      classrelation 199554 // logger (<unidirectional association>)
	relation 199554 --->
	  a role_name "logger" private
	    comment "
Logger.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 199554 // logger (<unidirectional association>)
	  b parent class_ref 160258 // HostManagerLogger
      end

      classrelation 199682 // cache (<unidirectional association>)
	relation 199682 --->
	  a role_name "cache" private
	    comment "
Cache.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 199682 // cache (<unidirectional association>)
	  b parent class_ref 175106 // ActivityMonitorCache
      end

      operation 400130 "ActivityMonitorListener"
	public explicit_return_type ""
	nparams 2
	  param inout name "cache" type class_ref 175106 // ActivityMonitorCache
	  param inout name "appData" type class_ref 160130 // HostManagerApplicationData
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create new activity listener.

@param cache Cache manager.
@param appData Connection to the rest of the service.
"
      end

      operation 400258 "onAccept"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 175874 // LoadMonitorEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadMonitorEventListener#onAccept(cz.cuni.mff.been.hostmanager.load.LoadMonitorEvent)
"
      end

      operation 400386 "onReject"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 175874 // LoadMonitorEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadMonitorEventListener#onReject(cz.cuni.mff.been.hostmanager.load.LoadMonitorEvent)
"
      end
    end

    class 175106 "ActivityMonitorCache"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Cache which stores data about activity of all hosts. 

@author Branislav Repcek
"
      class 175618 "CacheElement"
	visibility public 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 215554 "lastChangeTime"
	  private explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "
Timestamp of the last modification of the class' data (milliseconds since Unix epoch).

"
	end

	classrelation 198530 // lastEvent (<unidirectional association>)
	  relation 198530 --->
	    a role_name "lastEvent" private
	      comment "
Last event received from the host.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 198530 // lastEvent (<unidirectional association>)
	    b parent class_ref 175874 // LoadMonitorEvent
	end

	classrelation 198658 // lastDescription (<unidirectional association>)
	  relation 198658 --->
	    a role_name "lastDescription" private
	      comment "
Last known hardware configuration.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 198658 // lastDescription (<unidirectional association>)
	    b parent class_ref 176002 // HardwareDescription
	end

	classrelation 198786 // lastSample (<unidirectional association>)
	  relation 198786 --->
	    a role_name "lastSample" private
	      comment "
Last sample received from the host.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 198786 // lastSample (<unidirectional association>)
	    b parent class_ref 176130 // LoadSample
	end

	attribute 215682 "onlineSince"
	  private explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "
Timestamp which specifies time when host was added to the cache.

"
	end

	classrelation 198914 // loadMonitor (<unidirectional association>)
	  relation 198914 --->
	    a role_name "loadMonitor" private
	      comment "
Reference to the Load Monitor running on the host.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 198914 // loadMonitor (<unidirectional association>)
	    b parent class_ref 175746 // LoadMonitorInterface
	end

	classrelation 199042 // status (<unidirectional association>)
	  relation 199042 --->
	    a role_name "status" private
	      comment "
Status of the host.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 199042 // status (<unidirectional association>)
	    b parent class_ref 175362 // HostStatus
	end

	attribute 215810 "hostName"
	  private explicit_type "String"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "
Fully qualified name of the host.

"
	end

	operation 397954 "CacheElement"
	  public explicit_return_type ""
	  nparams 2
	    param in name "hostName" explicit_type "String"
	    param inout name "loadMonitor" type class_ref 175746 // LoadMonitorInterface
	  nexceptions 1
	    exception class_ref 161922 // InvalidArgumentException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
Create new cache element.

@param hostName Name of the host (fully qualified).
@param loadMonitor Reference to the Load Monitor running on the host.

@throws InvalidArgumentException If reference to the Load Monitor is <tt>null</tt> or if
        host name is <tt>null</tt> or empty string.
"
	end

	operation 398082 "reportEvent"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "event" type class_ref 175874 // LoadMonitorEvent
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
Report new event that has been received from the host. Last hardware description,
sample, event and modification time will be set automatically.

@param event Event to report.
"
	end

	operation 398210 "getStatus"
	  public return_type class_ref 175362 // HostStatus
	  nparams 0
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
@return Status of the host.
"
	end

	operation 398338 "setStatus"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "status" type class_ref 175362 // HostStatus
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
@param status New status of the host.
"
	end

	operation 398466 "getLastDescription"
	  public return_type class_ref 176002 // HardwareDescription
	  nparams 0
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
@return Last known hardware description of the host. This may be <tt>null</tt>.
"
	end

	operation 398594 "getLastEvent"
	  public return_type class_ref 175874 // LoadMonitorEvent
	  nparams 0
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
@return Last event received from the host. May be <tt>null</tt>.
"
	end

	operation 398722 "getLastChangeTime"
	  public explicit_return_type "long"
	  nparams 0
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
@return Time of the last modification of this cache element in milliseconds since the 
        Unix epoch.
"
	end

	operation 398850 "getLastSample"
	  public return_type class_ref 176130 // LoadSample
	  nparams 0
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
@return Most recent sample received from the host. This may be <tt>null</tt> if no samples
        have been received.
"
	end

	operation 398978 "getLoadMonitor"
	  public return_type class_ref 175746 // LoadMonitorInterface
	  nparams 0
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
@return Reference to the Load Monitor that is running on the host.
"
	end

	operation 399106 "getOnlineSince"
	  public explicit_return_type "long"
	  nparams 0
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
@return Time at which host has been added to the cache. Measured in milliseconds since
        the Unix epoch.
"
	end

	operation 399234 "getHostName"
	  public explicit_return_type "String"
	  nparams 0
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
@return Fully qualified name of the host.
"
	end
      end

      classrelation 198402 // data (<unidirectional association>)
	relation 198402 --->
	  stereotype "ConcurrentHashMap"
	  a role_name "data" private
	    comment "
Cache data.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}< String, ${type} > ${name}${value};
"
	    classrelation_ref 198402 // data (<unidirectional association>)
	  b parent class_ref 175618 // CacheElement
      end

      operation 396546 "ActivityMonitorCache"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create new empty cache.
"
      end

      operation 396674 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Remove all data stored in the cache.
"
      end

      operation 396802 "isCached"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "hostName" explicit_type "String"
	nexceptions 1
	  exception class_ref 161922 // InvalidArgumentException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Test if given host is already in the cache.

@param hostName Fully qualified name of the host to test.

@return <tt>true</tt> if host is already in the cache, <tt>false</tt> otherwise.

@throws InvalidArgumentException If host name is <tt>null</tt> or empty string.
"
      end

      operation 396930 "addCacheElement"
	public explicit_return_type "void"
	nparams 2
	  param in name "hostName" explicit_type "String"
	  param inout name "loadMonitor" type class_ref 175746 // LoadMonitorInterface
	nexceptions 1
	  exception class_ref 161922 // InvalidArgumentException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Add new element to the cache. If such host already is already in the cache, old entry will
be replaced by the new (empty) one.

@param hostName Name of the host (fully qualified).
@param loadMonitor Reference to the Load Monitor that is running on the host.

@throws InvalidArgumentException If reference to the Load Monitor is <tt>null</tt> or if
        host name is <tt>null</tt> or empty string.
"
      end

      operation 397058 "getCacheElement"
	public return_type class_ref 175618 // CacheElement
	nparams 1
	  param in name "hostName" explicit_type "String"
	nexceptions 1
	  exception class_ref 161922 // InvalidArgumentException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get cached data for specified host.

@param hostName Fully qualified name of the host.

@return Entry for requested host or <tt>null</tt> if host is not in cache.

@throws InvalidArgumentException If host name is empty string or <tt>null</tt>.
"
      end

      operation 397186 "getLoadMonitor"
	public return_type class_ref 175746 // LoadMonitorInterface
	nparams 1
	  param in name "hostName" explicit_type "String"
	nexceptions 2
	  exception class_ref 135170 // ValueNotFoundException
	  exception class_ref 161922 // InvalidArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Retrieve reference to the Load Monitor running on the specified host.

@param hostName Fully qualified name of the host.

@return Reference to the Load Monitor.

@throws ValueNotFoundException If host is not in cache.
@throws InvalidArgumentException If host name is empty string or <tt>null</tt>.
"
      end

      operation 397314 "getHostStatus"
	public return_type class_ref 175362 // HostStatus
	nparams 1
	  param in name "hostName" explicit_type "String"
	nexceptions 2
	  exception class_ref 135170 // ValueNotFoundException
	  exception class_ref 161922 // InvalidArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Retrieve status of the host.

@param hostName Fully qualified name of the host.

@return Status of the host.

@throws ValueNotFoundException If host is not in cache.
@throws InvalidArgumentException If host name is empty string or <tt>null</tt>.
"
      end

      operation 397442 "removeCacheElement"
	public return_type class_ref 175618 // CacheElement
	nparams 1
	  param in name "hostName" explicit_type "String"
	nexceptions 2
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 135170 // ValueNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Remove host from the cache.

@param hostName Name of the host to remove.

@return Data about host from the cache.

@throws ValueNotFoundException If host is not in cache.
@throws InvalidArgumentException If host name is empty string or <tt>null</tt>.
"
      end

      operation 397570 "getLastChangeTime"
	public explicit_return_type "long"
	nparams 1
	  param in name "hostName" explicit_type "String"
	nexceptions 2
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 135170 // ValueNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get timestamp of the last modification of the cache entry.

@param hostName Name of the host.

@return Time of the last modification of the cache entry (milliseconds since the Unix epoch).

@throws ValueNotFoundException If host is not in cache.
@throws InvalidArgumentException If host name is empty string or <tt>null</tt>.
"
      end

      operation 397698 "getHostNameIterator"
	public explicit_return_type "Iterator< String >"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get iterator over the set of the names of all hosts that are in the cache.

@return Iterator over the set of the host names.
"
      end

      operation 397826 "store"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "event" type class_ref 175874 // LoadMonitorEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Store event in the cache if the host from which event originated is already cached.

@param event Event to store.

@return <tt>true</tt> if event has been successfully stored in the cache, <tt>false</tt> if
        host from which event originated is not in cache and event couldn't be stored.
"
      end
    end

    class 175234 "LoadMonitorException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Basic exception class for all exceptions specific to the Load Monitor.
 
@author Branislav Repcek

"
      classrelation 204034 // <generalisation>
	relation 204034 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 204034 // <generalisation>
	  b parent class_ref 135042 // HostManagerException
      end

      operation 425090 "LoadMonitorException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create new LoadMonitorException object.

"
      end

      operation 425218 "LoadMonitorException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" explicit_type "Throwable"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create new LoadMonitorException object with given cause.

@param cause Cause of exception.
"
      end

      operation 425346 "LoadMonitorException"
	public explicit_return_type ""
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create new LoadMonitorException object with given message.

@param message Exception message.
"
      end

      operation 425474 "LoadMonitorException"
	public explicit_return_type ""
	nparams 2
	  param in name "message" explicit_type "String"
	  param inout name "cause" explicit_type "Throwable"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create new LoadMonitorException with given message and cause.

@param message Exception message.
@param cause Exception cause.
"
      end
    end

    class 175362 "HostStatus"
      visibility public stereotype "enum"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Status of the host in the environment.

@author Branislav Repcek
"
      attribute 217730 "ONLINE"
	public type class_ref 175362 // HostStatus
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Host was online during the last check. 

"
      end

      attribute 217858 "OFFLINE"
	public type class_ref 175362 // HostStatus
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Host was shut down (correct shutdown).

"
      end

      attribute 217986 "CRASHED"
	public type class_ref 175362 // HostStatus
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Host probably crashed since it is not sending data to the LS.

"
      end

      attribute 218114 "UNKNOWN"
	public type class_ref 175362 // HostStatus
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Unknown status.
"
      end

      attribute 218242 "STRINGS"
	class_attribute const_attribute private explicit_type "String"
	multiplicity "[]"
	init_value "=  {
		\"online\",
		\"offline\",
		\"crashed\",
		\"unknown\"
	}"
	stereotype "attribute"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " String representation of the statuses. 
"
      end

      operation 413954 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "
Returns a string representation of the object.

@return a string representation of the object
@see java.lang.Object#toString()
"
      end
    end

    class 175746 "LoadMonitorInterface"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
<p>Basic interface for the Load Monitor. Load Monitor is running on every host and collects data
from native library and sends results to the Load Server. Load Monitor can function in two modes -
detailed mode and brief mode. These modes are mutually exclusive.</p>
<p>In brief mode load samples are collected in sparse intervals and are immediately sent to the 
Load Server. Sampling interval in brief mode should be in tens of seconds (default value is 10 
seconds). This interval is dense enough to detect computer crash and still does not generate 
gigabytes of data for each computer.</p>
<p>In detailed mode samples can be taken more often. This is possible since detailed mode data
is saved to the disk.To provide user with some data about host even in detailed mode, some samples
are sent to the Load Server. Which samples are sent is determined from the sampling intervals in
brief and detailed modes. Every n-th sample is sent, where n is integer such that
<br>
n * detailedInterval &lt; briefInterval &lt; (n + 1) * detailedInterval
<br>
Data from detailed mode can later be queried using getDetailedModeData(). Detailed mode data will
not be stored in Load Server, but in Results Repository instead.

@author Branislav Repcek
"
      classrelation 204290 // <generalisation>
	relation 204290 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 204290 // <generalisation>
	  b parent class_ref 130818 // Remote
      end

      attribute 222978 "RMI_NAME"
	public explicit_type "String"
	init_value "=  \"been/loadmonitor\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Name under which Load Monitor registers itself on each host.

"
      end

      attribute 223106 "DEFAULT_BRIEF_INTERVAL"
	public explicit_type "int"
	init_value "=  10000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Default sampling interval for brief mode in milliseconds.

"
      end

      attribute 223234 "DEFAULT_DETAILED_INTERVAL"
	public explicit_type "int"
	init_value "=  1000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Default sampling interval for detailed mode in milliseconds.

"
      end

      class 178946 "LoadMonitorMode"
	visibility public stereotype "enum"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 223362 "MODE_NONE"
	  public type class_ref 178946 // LoadMonitorMode
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "
No samples are taken (== Load Monitoring is disabled).

"
	end

	attribute 223490 "MODE_BRIEF"
	  public type class_ref 178946 // LoadMonitorMode
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "
Load Monitor is in brief mode.

"
	end

	attribute 223618 "MODE_DETAILED"
	  public type class_ref 178946 // LoadMonitorMode
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "
Load monitor is in detailed mode.
"
	end
      end

      operation 425602 "initialize"
	public explicit_return_type "void"
	nparams 4
	  param in name "lsHostName" explicit_type "String"
	  param inout name "loadServer" type class_ref 162690 // LoadServerInterface
	  param in name "defaultDetailedModeInterval" explicit_type "long"
	  param in name "briefModeInterval" explicit_type "long"
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 175234 // LoadMonitorException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Set name of the host on which Load Server is running.

@param lsHostName Name of the host on which Load Server is running.
@param loadServer Reference to the target Load Server.
@param defaultDetailedModeInterval Default interval for detailed mode in milliseconds. Value
       has to be at least 1. 
@param briefModeInterval Interval between samples in brief mode. Measured in milliseconds,
       minimum is 1 ms. 

@throws RemoteException If RMI error occurred.
@throws LoadMonitorException If host cannot be resolved or lookup failed.
@throws InvalidArgumentException If hostname is invalid or if some interval is too small.
"
      end

      operation 425730 "terminate"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Terminate Load Monitor. Monitor will stop taking samples.

@throws RemoteException If RMI error occurred.
"
      end

      operation 425858 "startBriefMode"
	public explicit_return_type "void"
	nparams 0
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 175234 // LoadMonitorException
	  exception class_ref 164738 // IllegalOperationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Begin measuring in brief mode. Brief mode is automatically enabled when Load Monitor starts up.
Brief mode cannot be started if monitor is already in brief or detailed mode.

@throws RemoteException If RMI error occurred.
@throws IllegalOperationException If monitor is already in brief or detailed mode.
@throws LoadMonitorException If monitor was unable to schedule new thread.
"
      end

      operation 425986 "stopBriefMode"
	public explicit_return_type "void"
	nparams 0
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 164738 // IllegalOperationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Stop measuring samples in brief mode.

@throws RemoteException If RMI error occurred.
@throws IllegalOperationException If monitor is not in brief mode.
"
      end

      operation 426114 "startDetailedMode"
	public explicit_return_type "void"
	nparams 2
	  param in name "contextId" explicit_type "String"
	  param in name "taskId" explicit_type "String"
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 164738 // IllegalOperationException
	  exception class_ref 175234 // LoadMonitorException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Start measuring in detailed mode. All samples taken in detailed mode are stored on the current 
host and only some of them are sent to the Load Server instead of the brief mode samples.
Note that combination of the context id and task id is unique identifier. Default interval
is used when taking samples.

@param contextId Id of the context in which task that requests detailed mode is running.
@param taskId Id of the task that requests detailed mode.

@throws RemoteException If RMI error occurred.
@throws IllegalOperationException If monitor is already in detailed mode or if id is already in use.
@throws LoadMonitorException If monitor was unable to schedule new thread or if there was an
        error updating database files after monitor has been started.
"
      end

      operation 426242 "startDetailedMode"
	public explicit_return_type "void"
	nparams 3
	  param in name "contextId" explicit_type "String"
	  param in name "taskId" explicit_type "String"
	  param in name "interval" explicit_type "long"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 164738 // IllegalOperationException
	  exception class_ref 175234 // LoadMonitorException
	  exception class_ref 161922 // InvalidArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Start measuring in detailed mode. All samples taken in detailed mode are stored on the current 
host and only some of them are sent to the Load Server instead of the brief mode samples.
Note that combination of the context id and task id is unique identifier.

@param contextId Id of the context in which task that requests detailed mode is running.
@param taskId Id of the task that requests detailed mode.
@param interval Interval in which samples will be measured.

@throws RemoteException If RMI error occurred.
@throws IllegalOperationException If monitor is already in detailed mode or if id is already in use.
@throws LoadMonitorException If monitor was unable to schedule new thread or if there was an
        error updating database files after monitor has been started.
@throws InvalidArgumentException If interval is too small (less than 1 ms).
"
      end

      operation 426370 "stopDetailedMode"
	public explicit_return_type "void"
	nparams 0
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 164738 // IllegalOperationException
	  exception class_ref 175234 // LoadMonitorException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Stop measuring in detailed mode. If brief mode was running when detailed mode has been enabled,
brief mode is enabled again. Otherwise, no load measurements are taken.
To request data collected in detailed mode, call <tt>getDetailedModeData()</tt>.

@throws RemoteException If RMI error occurred.
@throws IllegalOperationException If monitor is not in detailed mode.
@throws LoadMonitorException If brief mode cannot be switched back on.
"
      end

      operation 426498 "getBriefInterval"
	public explicit_return_type "long"
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get interval in which load samples are taken in brief mode.

@return Sampling interval in milliseconds.

@throws RemoteException If RMI error occurred.
"
      end

      operation 426626 "setBriefInterval"
	public explicit_return_type "void"
	nparams 1
	  param in name "interval" explicit_type "long"
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 175234 // LoadMonitorException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Set interval in which load samples are taken in brief mode. If this interval is set too low
(samples are taken too often), it can severely affect performance. If you need to take samples
often consider switching to the brief mode. New interval will take effect immediately.

@param interval Interval between two samples in brief mode in milliseconds. Note that this 
       interval is not exact and samples may drift (they are usually taken a little later when
       system is under heavy load). Interval cannot be smaller than or equal to zero.

@throws RemoteException If RMI error occurred.
@throws InvalidArgumentException If interval is zero or negative.
@throws LoadMonitorException If there was an error while saving configuration.
"
      end

      operation 426754 "getDefaultDetailedInterval"
	public explicit_return_type "long"
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get sampling interval in detailed mode.

@return Detailed mode sampling interval in milliseconds.

@throws RemoteException If RMI error occurred.
"
      end

      operation 426882 "setDefaultDetailedInterval"
	public explicit_return_type "void"
	nparams 1
	  param in name "interval" explicit_type "long"
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 175234 // LoadMonitorException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Set sampling interval for detailed mode. New interval will be used next time Load Monitor is
switched to the detailed mode.

@param interval Sampling interval in milliseconds. Interval has to be greater than zero.

@throws RemoteException If RMI error occurred.
@throws InvalidArgumentException If interval is negative or zero.
@throws LoadMonitorException If there was an error while saving configuration.
"
      end

      operation 427010 "getMode"
	public return_type class_ref 178946 // LoadMonitorMode
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return Mode in which Load Monitor is currently working.

@throws RemoteException If RMI error occurred.
"
      end

      operation 427138 "clearDetailedModeData"
	public explicit_return_type "void"
	nparams 2
	  param in name "contextId" explicit_type "String"
	  param in name "taskId" explicit_type "String"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 164738 // IllegalOperationException
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 135170 // ValueNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Remove data cached when in detailed mode.

@param contextId Id of the context in which task that requested detailed mode is running.
@param taskId Id of the task that requested detailed mode.

@throws RemoteException If RMI error occurred.
@throws IllegalOperationException If monitor is already in detailed mode.
@throws InvalidArgumentException If some parameter is empty string or <tt>null</tt>.
@throws ValueNotFoundException If no data file exists for given IDs.
"
      end

      operation 427266 "clearDetailedModeData"
	public explicit_return_type "void"
	nparams 0
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 164738 // IllegalOperationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Remove all data from detailed mode data cache.

@throws RemoteException If RMI error occurred.
@throws IllegalOperationException If monitor is currently in detailed mode.
"
      end

      operation 427394 "clearDetailedModeData"
	public explicit_return_type "void"
	nparams 1
	  param in name "contextId" explicit_type "String"
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 164738 // IllegalOperationException
	  exception class_ref 135170 // ValueNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Remove all detailed mode data belonging to the given context. That is, all data generated
by the tasks from given context will be removed.

@param contextId Id of the context.

@throws RemoteException If RMI error occurred.
@throws IllegalOperationException If monitor is currently in detailed mode.
@throws ValueNotFoundException If no data for given context exist.
"
      end

      operation 427522 "getDetailedModeLoadData"
	public return_type class_ref 178434 // LoadFile
	nparams 2
	  param in name "contextId" explicit_type "String"
	  param in name "taskId" explicit_type "String"
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 135170 // ValueNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get handle of the load data file with given IDs.

@param contextId Id of the context in which task that requested detailed mode is running.
@param taskId Id of the task that requested detailed mode.

@return Handle to the load file, File can be opened only from the local computer. If no file
        has been found for given context and task, <tt>null</tt> is returned.

@throws RemoteException If RMI error occurred.
@throws InvalidArgumentException If some id is invalid (empty string or <tt>null</tt>).
@throws ValueNotFoundException If no data has been found for given combination of the 
        context ID and task ID.
"
      end

      operation 427650 "hasDetailedModeData"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "contextId" explicit_type "String"
	  param in name "taskId" explicit_type "String"
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 161922 // InvalidArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Test if detailed load data are present for given combination of the task ID and context ID.

@param contextId Id of the context in which the task has been run.
@param taskId Id of the task.

@return <tt>true</tt> if detailed load data are present for given combination of the context
        id and task id, <tt>false</tt> otherwise. 

@throws RemoteException If RMI error occurred.
@throws InvalidArgumentException If some id is <tt>null</tt> or empty string.
"
      end

      operation 427778 "hasNativeSupport"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Use this method to determine if current operating system has native Load Monitor library.
If no native library is found (or loading failed) for the current OS, Load Monitor will 
function in very limited mode (samples will contain only timestamps). In such case, there's 
no point in switching monitor to the detailed mode (however, it is still supported) since
no useful data will be collected.

@return <tt>true</tt> if monitor has native library for current OS, <tt>false</tt> otherwise.

@throws RemoteException
"
      end

      operation 427906 "getHardwareDescription"
	public return_type class_ref 176002 // HardwareDescription
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Retrieve description of current hardware.
 
@return Description of the hardware.

@throws RemoteException If RMI error occurred.
"
      end

      operation 428034 "ping"
	public explicit_return_type "long"
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Empty method to test if host is online.

@return Current time.

@throws RemoteException If RMI error occurred.
"
      end
    end

    class 175874 "LoadMonitorEvent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Event generated by the Load Monitor on host. There are several types of events (see EventType enum).
Each event can have LoadSample attached to it. For event of type MONITOR_SAMPLE load sample is
mandatory (that is, MONITOR_SAMPLE event with <tt>null</tt> sample is invalid).
Each event has its own time stamp and contains name of the originating host. Note that time stamp
stored within event may not be exactly same as the time stamp stored in the accompanying load 
sample.

@author Branislav Repcek
"
      class 177794 "EventType"
	visibility public stereotype "enum"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 221442 "MONITOR_START"
	  public type class_ref 177794 // EventType
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "
This event is generated when load monitor starts taking samples.

"
	end

	attribute 221570 "MONITOR_STOP"
	  public type class_ref 177794 // EventType
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "
This event is generated when load monitor stops taking samples.

"
	end

	attribute 221698 "MONITOR_START_DETAILED"
	  public type class_ref 177794 // EventType
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "
Event generated when Load Monitor starts measuring detailed load.

"
	end

	attribute 221826 "MONITOR_STOP_DETAILED"
	  public type class_ref 177794 // EventType
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "
Event generated when Load Monitor stops measuring detailed load.

"
	end

	attribute 221954 "MONITOR_START_UP"
	  public type class_ref 177794 // EventType
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "
Event generated on Load Monitor star-up. This is normally followed by MONITOR_START event.

"
	end

	attribute 222082 "MONITOR_SHUT_DOWN"
	  public type class_ref 177794 // EventType
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "
Event generated when Load Monitor stops (Host Runtime is terminating). This element
should be preceded by the MONITOR_STOP event.

"
	end

	attribute 222210 "MONITOR_SAMPLE"
	  public type class_ref 177794 // EventType
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "
This event contains sample data.

"
	end

	attribute 222338 "MONITOR_HW_DESCRIPTION"
	  public type class_ref 177794 // EventType
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "
Event contains hardware description data.

"
	end

	attribute 222466 "MONITOR_UNKNOWN"
	  public type class_ref 177794 // EventType
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "
Unknown event type.
"
	end

	operation 420610 "valueOf"
	  class_operation public return_type class_ref 177794 // EventType
	  nparams 1
	    param in name "value" explicit_type "int"
	  nexceptions 1
	    explicit_exception "IllegalArgumentException"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
Create new enum from integer.

@param value Value to convert to enum. Valid values are 0 to 6 (included).

@return Enum constant for given value.

@throws IllegalArgumentException If value is invalid (less than 0 or greater than 6).
"
	end
      end

      classrelation 203138 // <realization>
	relation 203138 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 203138 // <realization>
	  b parent class_ref 148226 // Serializable
      end

      classrelation 203266 // <realization>
	relation 203266 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 203266 // <realization>
	  b parent class_ref 176514 // ByteBufferSerializableInterface
      end

      attribute 221186 "FILE_NODE_ID"
	class_attribute const_attribute private explicit_type "byte"
	init_value "=  0x2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Id of the chunk in file.

"
      end

      attribute 221314 "REQUIRED_DATA_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  19"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Size of the required fields in the event.

"
      end

      classrelation 203394 // type (<unidirectional association>)
	relation 203394 --->
	  a role_name "type" private
	    comment "
Type of the event.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 203394 // type (<unidirectional association>)
	  b parent class_ref 177794 // EventType
      end

      classrelation 203522 // sample (<unidirectional association>)
	relation 203522 --->
	  a role_name "sample" private
	    comment "
Data associated with the sample.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 203522 // sample (<unidirectional association>)
	  b parent class_ref 176130 // LoadSample
      end

      classrelation 203650 // hardware (<unidirectional association>)
	relation 203650 --->
	  a role_name "hardware" private
	    comment "
Hardware description data.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 203650 // hardware (<unidirectional association>)
	  b parent class_ref 176002 // HardwareDescription
      end

      attribute 222594 "hostName"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Name of the host on which event has been generated.

"
      end

      attribute 222722 "time"
	private explicit_type "Date"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Date and time when event was generated.

"
      end

      operation 420738 "LoadMonitorEvent"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create empty event with unknown type.
"
      end

      operation 420866 "LoadMonitorEvent"
	public explicit_return_type ""
	nparams 2
	  param inout name "type" type class_ref 177794 // EventType
	  param in name "hostName" explicit_type "String"
	nexceptions 1
	  exception class_ref 161922 // InvalidArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create new event of given type. Time of event creation is set automatically.

@param type Event type.
@param hostName Name of the host on which event was generated.

@throws InvalidArgumentException If type is MONITOR_SAMPLE or hostName is <tt>null</tt>.
"
      end

      operation 420994 "LoadMonitorEvent"
	public explicit_return_type ""
	nparams 2
	  param inout name "sample" type class_ref 176130 // LoadSample
	  param in name "hostName" explicit_type "String"
	nexceptions 1
	  exception class_ref 161922 // InvalidArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Generate event with given sample data. Time is set automatically. Event type is automatically
set to MONITOR_SAMPLE.

@param sample Sample data that will be attached to the event.
@param hostName Name of the host on which event was generated.

@throws InvalidArgumentException if hostName is <tt>null</tt> or sampe is <tt>null</tt>.
"
      end

      operation 421122 "LoadMonitorEvent"
	public explicit_return_type ""
	nparams 2
	  param inout name "hardware" type class_ref 176002 // HardwareDescription
	  param in name "hostName" explicit_type "String"
	nexceptions 1
	  exception class_ref 161922 // InvalidArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create event with given hardware description data. Time is set automatically. Event type is 
set to the MONITOR_HW_DESCRIPTION.

@param hardware Hardware description data. This parameter cannot be <tt>null</tt>.
@param hostName Name of the host on which event was generated.

@throws InvalidArgumentException If hostname is <tt>null</tt> or if hardware description
        is <tt>null</tt>.
"
      end

      operation 421250 "LoadMonitorEvent"
	public explicit_return_type ""
	nparams 3
	  param inout name "type" type class_ref 177794 // EventType
	  param inout name "sample" type class_ref 176130 // LoadSample
	  param in name "hostName" explicit_type "String"
	nexceptions 1
	  exception class_ref 161922 // InvalidArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Generate event with of given type containing sample data. Time is set automatically.
 
@param type Type of event.
@param sample Sample data. If event type is MONITOR_SAMPLE, this cannot be <tt>null</tt>.
@param hostName Name of the host on which event was generated.

@throws InvalidArgumentException If event type is MONITOR_SAMPLE and sample is <tt>null</tt> or
        if hostName is <tt>null</tt>.
"
      end

      operation 421378 "getType"
	public return_type class_ref 177794 // EventType
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return Event type.
"
      end

      operation 421506 "getSample"
	public return_type class_ref 176130 // LoadSample
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return Sample data associated with the event. Can be <tt>null</tt>.
"
      end

      operation 421634 "getHardwareDescription"
	public return_type class_ref 176002 // HardwareDescription
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return Hardware description data stored in the event. Can be <tt>null</tt>.
"
      end

      operation 421762 "getHostName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return Name of the host event was raised on.
"
      end

      operation 421890 "getTime"
	public explicit_return_type "Date"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return Event time.
"
      end

      operation 422018 "getTimestamp"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return Timestamp (Windows time).
"
      end

      operation 422146 "setSample"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sample" type class_ref 176130 // LoadSample
	nexceptions 1
	  exception class_ref 161922 // InvalidArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@param sample New sample data. If event type is MONITOR_SAMPLE this cannot be <tt>null</tt>.

@throws InvalidArgumentException If event type is MONITOR_SAMPLE and sample is <tt>null</tt>.
"
      end

      operation 422274 "setHardwareDescription"
	public explicit_return_type "void"
	nparams 1
	  param inout name "hardware" type class_ref 176002 // HardwareDescription
	nexceptions 1
	  exception class_ref 161922 // InvalidArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@param hardware New hardware description data. If event type is MONITOR_HW_DESCRIPTION this
       cannot be set to <tt>null</tt>.
       
@throws InvalidArgumentException If event type is MONITOR_HW_DESCRIPTION and hardware
        description is <tt>null</tt>.
"
      end

      operation 422402 "getDataSize"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.ByteBufferSerializableInterface#getTotalSize()
"
      end

      operation 422530 "load"
	public explicit_return_type "ByteBuffer"
	nparams 1
	  param inout name "buffer" explicit_type "ByteBuffer"
	nexceptions 1
	  exception class_ref 164226 // InputParseException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.ByteBufferSerializableInterface#load(java.nio.ByteBuffer)
"
      end

      operation 422658 "save"
	public explicit_return_type "ByteBuffer"
	nparams 1
	  param inout name "buffer" explicit_type "ByteBuffer"
	nexceptions 1
	  exception class_ref 164354 // OutputWriteException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.ByteBufferSerializableInterface#save(java.nio.ByteBuffer)
"
      end

      operation 422786 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "
@see java.lang.Object#equals(java.lang.Object)
"
      end

      operation 422914 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "event" type class_ref 175874 // LoadMonitorEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Test if two events are equal.

@param event Event to compare to.

@return <tt>true</tt> if both events contain same data, <tt>false</tt> otherwise.
"
      end

      operation 423042 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "
@see java.lang.Object#hashCode()
"
      end

      operation 423170 "setHostName"
	public explicit_return_type "void"
	nparams 1
	  param in name "hostName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@param hostName New hostname.
"
      end

      operation 423298 "setTime"
	public explicit_return_type "void"
	nparams 1
	  param inout name "time" explicit_type "Date"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@param time New time.
"
      end

      operation 423426 "setType"
	public explicit_return_type "void"
	nparams 1
	  param inout name "type" type class_ref 177794 // EventType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@param type New type of the event.
"
      end

      operation 423554 "getChunkID"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.ByteBufferSerializableInterface#getChunkID()
"
      end

      operation 423682 "hasSample"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return <tt>true</tt> if event contains sample data, <tt>false</tt> otherwise.
"
      end

      operation 423810 "hasHardwareDescription"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return <tt>true</tt> if event contains hardware description data, <tt>false</tt> otherwise.
"
      end
    end

    class 176002 "HardwareDescription"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
This class stores data about names of various hardware components whose performance is monitored
by the Load Monitor.
Note that data from the Load Monitor may be different than the data stored in the 
{@link cz.cuni.mff.been.hostmanager.database.HostInfoInterface} and they cannot be used 
interchargeably.

@author Branislav Repcek
"
      classrelation 201858 // <realization>
	relation 201858 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 201858 // <realization>
	  b parent class_ref 176514 // ByteBufferSerializableInterface
      end

      attribute 216322 "FILE_CHUNK_ID"
	class_attribute const_attribute private explicit_type "byte"
	init_value "=  0x3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Id of the chunk in the file.

"
      end

      attribute 216450 "MINIMUM_DATA_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  22"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Minimum size of the node.

 Gaaaahaaahah.... 4 hours of debugging!!!!!!"
      end

      attribute 216578 "cpuCount"
	private explicit_type "short"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Number of processors installed on the system.

"
      end

      attribute 216706 "memorySize"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Size of physical memory in bytes.

"
      end

      attribute 216834 "drives"
	private explicit_type "String"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Drives' names.

"
      end

      attribute 216962 "adapters"
	private explicit_type "String"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Adapters' names.

"
      end

      attribute 217090 "timeStamp"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Timestamp (Windows time).

"
      end

      operation 404226 "HardwareDescription"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create empty hardware description with timestamp set to current time.
"
      end

      operation 404354 "getCpuCount"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return Number of processors installed on the system.
"
      end

      operation 404482 "setCpuCount"
	public explicit_return_type "void"
	nparams 1
	  param in name "cpuCount" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@param cpuCount Number of processors installed on the system.
"
      end

      operation 404610 "getMemorySize"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return Size of the physical memory in bytes.
"
      end

      operation 404738 "setMemorySize"
	public explicit_return_type "void"
	nparams 1
	  param in name "memorySize" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@param memorySize Size of the physical memory in bytes.
"
      end

      operation 404866 "getDriveCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return Number of drives.
"
      end

      operation 404994 "getAdapterCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return Number of adapters.
"
      end

      operation 405122 "getAdapters"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return Array containing names of the adapters.
"
      end

      operation 405250 "setAdapters"
	public explicit_return_type "void"
	nparams 1
	  param in name "adapters" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@param adapters Array containing names of the network adapters.
"
      end

      operation 405378 "getDrives"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return Array containing names of the physical drives.
"
      end

      operation 405506 "setDrives"
	public explicit_return_type "void"
	nparams 1
	  param in name "drives" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@param drives Array containing names of the physical drives.
"
      end

      operation 405634 "getTimeStamp"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return the timeStamp
"
      end

      operation 405762 "setTimeStamp"
	public explicit_return_type "void"
	nparams 1
	  param in name "timeStamp" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@param timeStamp Timestamp (Windows time).
"
      end

      operation 405890 "getDataSize"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.ByteBufferSerializableInterface#getDataSize()
"
      end

      operation 406018 "getChunkID"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.ByteBufferSerializableInterface#getChunkID()
"
      end

      operation 406146 "load"
	public explicit_return_type "ByteBuffer"
	nparams 1
	  param inout name "buffer" explicit_type "ByteBuffer"
	nexceptions 1
	  exception class_ref 164226 // InputParseException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.ByteBufferSerializableInterface#load(java.nio.ByteBuffer)
"
      end

      operation 406274 "save"
	public explicit_return_type "ByteBuffer"
	nparams 1
	  param inout name "buffer" explicit_type "ByteBuffer"
	nexceptions 1
	  exception class_ref 164354 // OutputWriteException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.ByteBufferSerializableInterface#save(java.nio.ByteBuffer)
"
      end

      operation 406402 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "
@see java.lang.Object#equals(java.lang.Object)
"
      end

      operation 406530 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "hardware" type class_ref 176002 // HardwareDescription
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Compare two hardware descriptions for equality.

@param hardware Object to compare to.

@return <tt>true</tt> if both objects contain same data, <tt>false</tt> otherwise.
"
      end

      operation 406658 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "
@see java.lang.Object#hashCode()
"
      end

      operation 406786 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "
@see java.lang.Object#toString()
"
      end

      operation 406914 "saveString"
	private explicit_return_type "void"
	nparams 2
	  param inout name "buffer" explicit_type "ByteBuffer"
	  param in name "s" explicit_type "String"
	nexceptions 1
	  explicit_exception "BufferOverflowException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Serialise string to the {@link ByteBuffer}. Total size of the data written to the buffer will
be <tt>4 + 2 * s.length()</tt>.

@param buffer Buffer to which data should be saved.
@param s String to store in the buffer. At first, length of the string is stored as int, then
       all characters of the string are stored.
       
@throws BufferOverflowException If buffer overflow occurred.
"
      end

      operation 407042 "readString"
	private explicit_return_type "String"
	nparams 1
	  param inout name "buffer" explicit_type "ByteBuffer"
	nexceptions 2
	  explicit_exception "BufferUnderflowException"
	  exception class_ref 164226 // InputParseException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Read string from the buffer. String has to be saved using saveString method.

@param buffer Buffer to read string from.

@return String as read from current position in the buffer.

@throws BufferUnderflowException Buffer underflow.
@throws InputParseException If string length is negative. 
"
      end
    end

    class 176130 "LoadSample"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
One load sample taken on the host. Contains all data collected by the load monitor during
one measurement.

@author Branislav Repcek
"
      classrelation 205698 // <realization>
	relation 205698 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 205698 // <realization>
	  b parent class_ref 176514 // ByteBufferSerializableInterface
      end

      attribute 226818 "FILE_NODE_ID"
	class_attribute const_attribute private explicit_type "byte"
	init_value "=  0x1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Identification of the file node.

"
      end

      attribute 226946 "REQUIRED_DATA_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  38"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Size of the required data from the sample.

"
      end

      attribute 227074 "tsc"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
TSC counter of the processor = number of ticks since computer has started up.
On multi-cpu machines this may get unsynchronised (TSC drift) if thread jumps from one CPU 
to another - this happens with AMD dual-core CPUs on Windows XP without AMD hotfix 
(may happen on older Windows too).

"
      end

      attribute 227202 "timeStamp"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Time when sample has been taken. This is measured in 100 ns intervals since 1.1.1601 0:00.

"
      end

      attribute 227330 "processorUsage"
	private explicit_type "short"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Usage of each of the processors in the system in per cent.

"
      end

      attribute 227458 "diskWriteBytes"
	private explicit_type "long"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Number of bytes written per second for each physical drive installed.

"
      end

      attribute 227586 "diskReadBytes"
	private explicit_type "long"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Number of bytes read per second for each physical drive installed.

"
      end

      attribute 227714 "networkBytesReceived"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Number of bytes received per second for each network interface.

"
      end

      attribute 227842 "networkBytesSent"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Number of bytes sent per second for each network interface.

"
      end

      attribute 227970 "memoryFree"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Free physical memory in bytes.

"
      end

      attribute 228098 "processCount"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Number of processes running on the system.

"
      end

      attribute 228226 "processQueueLength"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Number of processes waiting in the thread queue. This can be used to detect if the processor
is under heavy load (if this remains higher for longer time periods).

"
      end

      operation 434690 "LoadSample"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create new sample with time stamp only.
"
      end

      operation 434818 "getDiskReadBytesPerSecond"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Gets rate at which bytes are read from each of the drives on the host.
  
@return Array containing read speed of each drive in bytes per second.
"
      end

      operation 434946 "getDiskWriteBytesPerSecond"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Gets rate at which bytes are written to each of the drives on the host.
  
@return Array containing write speed of each drive in bytes per second.
"
      end

      operation 435074 "getDriveCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get number of physical drives installed on the host. Note that this may change over time (even
when host is running, since hot-swapable drives maybe added or removed).

@return Number of physical drives.
"
      end

      operation 435202 "getMemoryFree"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get amount of free physical memory.

@return Free memory in bytes.
"
      end

      operation 435330 "getNetworkBytesReceivedPerSecond"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get rate at which bytes are received through each network interface.

@return Number of bytes per second each interface is receiving.
"
      end

      operation 435458 "getNetworkBytesSentPerSecond"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get rate at which bytes are sent through each network interface.

@return Number of bytes per second each interface is sending.
"
      end

      operation 435586 "getNetworkInterfaceCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get number of network interfaces. This may change even between samples due to the hot-swapable
devices.

@return Number of network interfaces.
"
      end

      operation 435714 "getProcessCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get number of processes running on the host.

@return Number of processes running on the host.
"
      end

      operation 435842 "getProcessorCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get number of processors installed on the host. Note that \"virtual\" processors (such as
processors in HT machines) are also counted.

@return Number of processors.
"
      end

      operation 435970 "getProcessQueueLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get number of threads waiting in the processor queue. The higher this number the higher is load.
If this remains higher than 2 or 3 for longer time it means that processor is under heavy load.

@return Number of threads waiting in thread queue.
"
      end

      operation 436098 "getProcessorUsage"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return Get processor usage in per cent for each processor on the host.
"
      end

      operation 436226 "getTimeStamp"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Time stamp value of this sample. Time stamp is measured in 100 ns intervals since 1. 1. 1601 
0:00 (Windows epoch).

@return Time stamp of current sample. 
"
      end

      operation 436354 "getTSC"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Time stamp counter of the processor on the host in the time sample has been taken. TSC is
number of ticks since computer has been started. Note that this value may jump sometimes as 
thread may be shifted to different processor and TSC of various processors are generally not
synchronised.

@return TSC of the host's processor.
"
      end

      operation 436482 "load"
	public explicit_return_type "ByteBuffer"
	nparams 1
	  param inout name "buffer" explicit_type "ByteBuffer"
	nexceptions 1
	  exception class_ref 164226 // InputParseException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.ByteBufferSerializableInterface#load(java.nio.ByteBuffer)
"
      end

      operation 436610 "save"
	public explicit_return_type "ByteBuffer"
	nparams 1
	  param inout name "buffer" explicit_type "ByteBuffer"
	nexceptions 1
	  exception class_ref 164354 // OutputWriteException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.ByteBufferSerializableInterface#save(java.nio.ByteBuffer)
"
      end

      operation 436738 "getDataSize"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.ByteBufferSerializableInterface#getTotalSize()
"
      end

      operation 436866 "setDiskReadAndWriteBytes"
	public explicit_return_type "void"
	nparams 2
	  param in name "diskReadBytes" explicit_type "long"
	  param in name "diskWriteBytes" explicit_type "long"
	nexceptions 1
	  exception class_ref 161922 // InvalidArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Set read and write speeds for each drive.

@param diskReadBytes Read speed for each drive. Values have to be non-negative. 
@param diskWriteBytes Write speed for each drive. Values have to be non-negative.
 
@throws InvalidArgumentException If one of the parameters is <tt>null</tt> or if input arrays
        have different lengths or if some value is negative.
"
      end

      operation 436994 "setMemoryFree"
	public explicit_return_type "void"
	nparams 1
	  param in name "memoryFree" explicit_type "long"
	nexceptions 1
	  exception class_ref 161922 // InvalidArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@param memoryFree Free memory.

@throws InvalidArgumentException If free memory size specified is negative.
"
      end

      operation 437122 "setNetworkReadWriteSpeed"
	public explicit_return_type "void"
	nparams 2
	  param in name "networkBytesReceived" explicit_type "int"
	  param in name "networkBytesSent" explicit_type "int"
	nexceptions 1
	  exception class_ref 161922 // InvalidArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Set read and write speeds for all network interfaces.

@param networkBytesReceived Read speed for given network interface. Values have to be non-negative.
@param networkBytesSent Write speed for given network interface. Values have to be non-negative.

@throws InvalidArgumentException If one of the parameters is <tt>null</tt> or if input arrays
        have different lengths or if some value is negative.
"
      end

      operation 437250 "setProcessCount"
	public explicit_return_type "void"
	nparams 1
	  param in name "processCount" explicit_type "int"
	nexceptions 1
	  exception class_ref 161922 // InvalidArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@param processCount Number of processes. Value has to be non-negative.

@throws InvalidArgumentException If process count is negative. 
"
      end

      operation 437378 "setProcessorUsage"
	public explicit_return_type "void"
	nparams 1
	  param in name "processorUsage" explicit_type "short"
	nexceptions 1
	  exception class_ref 161922 // InvalidArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Set usage of each processor.

@param processorUsage Usage of each processor. Each value has to be in range [0, 100].

@throws InvalidArgumentException If processor usage is <tt>null</tt> or some value is out of range.
"
      end

      operation 437506 "setProcessQueueLength"
	public explicit_return_type "void"
	nparams 1
	  param in name "processQueueLength" explicit_type "int"
	nexceptions 1
	  exception class_ref 161922 // InvalidArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@param processQueueLength Length of the process queue. Value has to be non-negative.

@throws InvalidArgumentException If given value is negative.
"
      end

      operation 437634 "setTimeStamp"
	public explicit_return_type "void"
	nparams 1
	  param in name "timeStamp" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@param timeStamp New time stamp value.
"
      end

      operation 437762 "setTSC"
	public explicit_return_type "void"
	nparams 1
	  param in name "tsc" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@param tsc Time stamp counter value.
"
      end

      operation 437890 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "
@see java.lang.Object#equals(java.lang.Object)
"
      end

      operation 438018 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "sample" type class_ref 176130 // LoadSample
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Test if two samples contain same values.

@param sample Sample to compare to.

@return <tt>true</tt> if sample contain same values, <tt>false</tt> otherwise.
"
      end

      operation 438146 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "
@see java.lang.Object#hashCode()
"
      end

      operation 438274 "getChunkID"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.ByteBufferSerializableInterface#getChunkID()
"
      end
    end

    class 176258 "LoadMonitorEventListener"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Base class for event listener. Event listener is an object that will receive all Load Monitor 
events. Listener than can ignore given event or process it. To filter out uninteresting events
instance of LoadMonitorEventFilter is used.
<br>
<br>
Each listener has two abstract methods you have to implement. First one (<tt>onAccept</tt>) is
called only when event is accepted (that is, it matches given filter). Second method 
(<tt>onReject</tt>) is called only when event is rejected by the filter.

@author Branislav Repcek
"
      classrelation 199170 // <realization>
	relation 199170 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 199170 // <realization>
	  b parent class_ref 148226 // Serializable
      end

      classrelation 199298 // filter (<unidirectional association>)
	relation 199298 --->
	  a role_name "filter" private
	    comment "
Filter for events.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 199298 // filter (<unidirectional association>)
	  b parent class_ref 176386 // LoadMonitorEventFilter
      end

      attribute 215938 "accepted"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Was last event accepted?

"
      end

      operation 399362 "LoadMonitorEventListener"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create listener that will accept all events.
"
      end

      operation 399490 "LoadMonitorEventListener"
	public explicit_return_type ""
	nparams 1
	  param inout name "filter" type class_ref 176386 // LoadMonitorEventFilter
	nexceptions 1
	  exception class_ref 161922 // InvalidArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create listener that will accept only event that are accepted by the given filter.

@param filter Filter that will be used to filter out events.

@throws InvalidArgumentException If filter is <tt>null</tt>
"
      end

      operation 399618 "handleEvent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 175874 // LoadMonitorEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
This method is called by the Load Server every time and event is received. Based on the
event this will call either <tt>onAccept</tt> (if event has been accepted by the filter) or
<tt>onReject</tt> (if the event has been rejected by the filter). <tt>isAccepted</tt> flag
will be updated accordingly.

@param event Event to process.
"
      end

      operation 399746 "isAccepted"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return <tt>true</tt> if last event has been accepted, <tt>false</tt> if it has been rejected.
"
      end

      operation 399874 "onAccept"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 175874 // LoadMonitorEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
This method is called every time event is received and is accepted by the filter.

@param event Event that has been received.
"
      end

      operation 400002 "onReject"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 175874 // LoadMonitorEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
This method is called every time event is received and is rejected by the event filter.

@param event Event that has been received.
"
      end
    end

    class 176386 "LoadMonitorEventFilter"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Simple filter for events. This filter is able to filter events based on the host they were raised
on and their type.

@author Branislav Repcek
"
      classrelation 203778 // <realization>
	relation 203778 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 203778 // <realization>
	  b parent class_ref 148226 // Serializable
      end

      classrelation 203906 // eventTypes (<unidirectional association>)
	relation 203906 --->
	  stereotype "TreeSet"
	  a role_name "eventTypes" private
	    comment "
Types of events this filter will match. If <tt>null</tt> all event are matched.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}< ${type} > ${name}${value};
"
	    classrelation_ref 203906 // eventTypes (<unidirectional association>)
	  b parent class_ref 177794 // EventType
      end

      attribute 222850 "hostNames"
	private explicit_type " String "
	stereotype "HashSet"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Names of hosts this filter will match. If <tt>null</tt> all host are matched.

"
      end

      operation 423938 "LoadMonitorEventFilter"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create default filter that will accept event of any type from any host.
"
      end

      operation 424066 "LoadMonitorEventFilter"
	public explicit_return_type ""
	nparams 1
	  param in name "hostName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create filter for given hostname. Filter will accept event of all types.

@param hostName Name of the host event must originate from to be accepted. If <tt>null</tt>
       event from any host will be accepted.
"
      end

      operation 424194 "LoadMonitorEventFilter"
	public explicit_return_type ""
	nparams 1
	  param inout name "eventType" type class_ref 177794 // EventType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create filter for given type of the event. Filter will accept event from all hosts.

@param eventType Type which event has to match to be accepted. If <tt>null</tt>, all event
       types are accepted.
"
      end

      operation 424322 "LoadMonitorEventFilter"
	public explicit_return_type ""
	nparams 2
	  param in name "hostName" explicit_type "String"
	  param inout name "eventType" type class_ref 177794 // EventType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create filter for given type of event and hostname.

@param hostName Name of the host event has to originate on to be accepted. If <tt>null</tt>
       events from all hosts will be accepted.
@param eventType Type of the event that event has to match. If <tt>null</tt> event of all 
       types will be accepted.
"
      end

      operation 424450 "LoadMonitorEventFilter"
	public explicit_return_type ""
	nparams 2
	  param in name "hostName" explicit_type "String"
	  param inout name "eventType" type class_ref 177794 // EventType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create filter for event of given type and hosts.

@param hostName List of hostnames. If event has been raised on any of the hosts it will be accepted.
       If list is empty, <tt>null</tt> or contains only <tt>null</tt> elements, events from
       all hosts will be accepted.
@param eventType List of event types. If event is of any type from the list, it will be
       accepted. If list is empty, <tt>null</tt> or contains only <tt>null</tt> elements, events
       of all types will be accepted.
"
      end

      operation 424578 "LoadMonitorEventFilter"
	public explicit_return_type ""
	nparams 2
	  param inout name "hostName" explicit_type "Collection< String >"
	  param inout name "eventType" explicit_type "Collection< LoadMonitorEvent.EventType >"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create filter for event of given type and hosts.

@param hostName Collection with list of hostnames. If event has been raised on any of the 
       hosts it will be accepted. If collection is empty, <tt>null</tt> or contains only 
       <tt>null</tt> elements, events from all hosts will be accepted.
@param eventType Collection of event types. If event is of any type from the collection, 
       it will be accepted. If collection is empty, <tt>null</tt> or contains only 
       <tt>null</tt> elements, events of all types will be accepted.
"
      end

      operation 424706 "getHostNames"
	public explicit_return_type "Set< String >"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return Set containing names of host events have to originate on.
"
      end

      operation 424834 "getEventTypes"
	public return_type class_ref 177794 // EventType
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Set< ${type} > ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return Set containing types of events.
"
      end

      operation 424962 "match"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "event" type class_ref 175874 // LoadMonitorEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Test if given event matches criteria specified in this filter.

@param event Event to test.

@return <tt>true</tt> if event matches criteria in the filter, <tt>false</tt> otherwise.
"
      end
    end

    class 176514 "ByteBufferSerializableInterface"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Interface which contains methods to work with objects that can be serialised to the byte stream. 

@author Branislav Repcek
"
      classrelation 199810 // <generalisation>
	relation 199810 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 199810 // <generalisation>
	  b parent class_ref 148226 // Serializable
      end

      operation 400514 "load"
	public explicit_return_type "ByteBuffer"
	nparams 1
	  param inout name "buffer" explicit_type "ByteBuffer"
	nexceptions 1
	  exception class_ref 164226 // InputParseException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Load contents of the object from the ByteBuffer.

@param buffer Buffer from which data is to be read. 

@return Buffer after data has been read. Buffer position has to be set to the byte just
        after the data for current object.
        
@throws InputParseException If an error occurred while parsing buffer's data.
"
      end

      operation 400642 "save"
	public explicit_return_type "ByteBuffer"
	nparams 1
	  param inout name "buffer" explicit_type "ByteBuffer"
	nexceptions 1
	  exception class_ref 164354 // OutputWriteException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Save object's data to the buffer.

@param buffer Buffer to which data should be saved. Buffer has to be opened for writing (that 
       is, it cannot be read-only).

@return Buffer after modifications. Buffer position has to be set just after the data of
        current object. 
        
@throws OutputWriteException If an error occurred when data is being written to the buffer.
"
      end

      operation 400770 "getDataSize"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get total size in bytes this object will occupy when serialised.

@return Number of bytes object will occupy when serialised.
"
      end

      operation 400898 "getChunkID"
	public explicit_return_type "byte"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get ID of the container chunk.

@return ID of the container chunk. ID cannot be 0.
"
      end
    end

    class 176642 "EventDispatcher"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Process incoming events and dispatch them to the Load Server (if valid reference exists).

@author Branislav Repcek
"
      class 176770 "EventProcessorThread"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 200066 // <generalisation>
	  relation 200066 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 200066 // <generalisation>
	    b parent class_ref 151042 // Thread
	end

	attribute 216066 "stop"
	  private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "
Stop?

"
	end

	classrelation 200194 // loadServer (<unidirectional association>)
	  relation 200194 --->
	    a role_name "loadServer" const_relation private
	      comment "
Target server.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 200194 // loadServer (<unidirectional association>)
	    b parent class_ref 162690 // LoadServerInterface
	end

	classrelation 200322 // queue (<unidirectional association>)
	  relation 200322 --->
	    a role_name "queue" const_relation private
	      comment "
Event queue.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 200322 // queue (<unidirectional association>)
	    b parent class_ref 176898 // EventQueue
	end

	classrelation 200450 // events (<unidirectional association>)
	  relation 200450 --->
	    stereotype "LinkedList"
	    a role_name "events" private
	      comment "
Currently processed events.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}< ${type} > ${name}${value};
"
	      classrelation_ref 200450 // events (<unidirectional association>)
	    b parent class_ref 175874 // LoadMonitorEvent
	end

	operation 401666 "EventProcessorThread"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "queue" type class_ref 176898 // EventQueue
	    param inout name "loadServer" type class_ref 162690 // LoadServerInterface
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
Create new EventProcessor.

@param queue Event queue.
@param loadServer Target server. If <code>null</code> events will just be removed from
       the queue.
"
	end

	operation 401794 "stopMe"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
Stop dispatching events. Note that this method does not stop thread immediately, but
thread will process all remaining events in the queue and then stop.
To stop thread immediately, call interrupt.
"
	end

	operation 401922 "run"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "
@see java.lang.Thread#run()
"
	end
      end

      classrelation 199938 // thread (<unidirectional association>)
	relation 199938 --->
	  a role_name "thread" private
	    comment "
Event processor thread.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 199938 // thread (<unidirectional association>)
	  b parent class_ref 176770 // EventProcessorThread
      end

      operation 401026 "EventDispatcher"
	public explicit_return_type ""
	nparams 1
	  param inout name "queue" type class_ref 176898 // EventQueue
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create new dispatcher without connection to the server.

@param queue Event queue.
"
      end

      operation 401154 "EventDispatcher"
	public explicit_return_type ""
	nparams 2
	  param inout name "queue" type class_ref 176898 // EventQueue
	  param inout name "loadServer" type class_ref 162690 // LoadServerInterface
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create new EventDispatcher.

@param queue Event queue.
@param loadServer Load Server to which data will be sent. If this is <tt>null</tt> samples
       will not be sent but only thrown away.
"
      end

      operation 401282 "kill"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Stop dispatching events.
"
      end

      operation 401410 "stop"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Stop dispatching events as soon as the queue is empty. Call this method only when you are
sure that no data will be added to the work queue.
"
      end

      operation 401538 "isRunning"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Test if dispatcher thread is running.

@return <tt>true</tt> if dispatcher thread is running, <tt>false</tt> otherwise.
"
      end
    end

    class 176898 "EventQueue"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Thread safe queue for load events.

@author Branislav Repcek
"
      classrelation 200578 // queue (<unidirectional association>)
	relation 200578 --->
	  stereotype "LinkedList"
	  a role_name "queue" private
	    comment "
Event storage.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}< ${type} > ${name}${value};
"
	    classrelation_ref 200578 // queue (<unidirectional association>)
	  b parent class_ref 175874 // LoadMonitorEvent
      end

      operation 402050 "EventQueue"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create new empty event queue.
"
      end

      operation 402178 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Test is queue is empty.

@return <tt>true</tt> is queue is empty, <tt>false</tt> otherwise.
"
      end

      operation 402306 "size"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return Number of events in the queue.
"
      end

      operation 402434 "add"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 175874 // LoadMonitorEvent
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Add new event to the queue.

@param event Event to add to the queue.
"
      end

      operation 402562 "getFirst"
	public return_type class_ref 175874 // LoadMonitorEvent
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Blocking method that will wait until there is some data in the queue.

@return first event in the queue.
"
      end

      operation 402690 "getAll"
	public explicit_return_type "void"
	nparams 1
	  param inout name "target" explicit_type "Collection< LoadMonitorEvent >"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get all events from the queue and store them in another Collection. This method is blocking
and waits until there is data available.

@param target Collection into which events will be copied. Original contents of the target
       collection will not be altered.
"
      end

      operation 402818 "addAll"
	public explicit_return_type "void"
	nparams 1
	  param inout name "events" explicit_type "Collection< LoadMonitorEvent >"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Add all events to the queue.

@param events Events to add to the queue.
"
      end

      operation 402946 "addAll"
	public explicit_return_type "void"
	nparams 1
	  param inout name "events" type class_ref 175874 // LoadMonitorEvent
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Add all events to the queue.

@param events Events to add to the queue.
"
      end
    end

    class 177026 "EventReceiver"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
This class automatically creates new thread which will process all incoming events.

@author Branislav Repcek
"
      class 177154 "EventProcessorThread"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 200962 // <generalisation>
	  relation 200962 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 200962 // <generalisation>
	    b parent class_ref 151042 // Thread
	end

	attribute 216194 "stop"
	  private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "
Stop?

"
	end

	classrelation 201090 // queue (<unidirectional association>)
	  relation 201090 --->
	    a role_name "queue" const_relation private
	      comment "
Event queue.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 201090 // queue (<unidirectional association>)
	    b parent class_ref 176898 // EventQueue
	end

	classrelation 201218 // listeners (<unidirectional association>)
	  relation 201218 --->
	    stereotype "ConcurrentMap"
	    a role_name "listeners" private
	      comment "
Event listeners.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}< ${type}, LoadMonitorEventListener > ${name}${value};
"
	      classrelation_ref 201218 // listeners (<unidirectional association>)
	    b parent class_ref 139010 // OID
	end

	classrelation 201346 // events (<unidirectional association>)
	  relation 201346 --->
	    stereotype "LinkedList"
	    a role_name "events" private
	      comment "
Currently processed events.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}< ${type} > ${name}${value};
"
	      classrelation_ref 201346 // events (<unidirectional association>)
	    b parent class_ref 175874 // LoadMonitorEvent
	end

	operation 403458 "EventProcessorThread"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "queue" type class_ref 176898 // EventQueue
	    param inout name "listeners" explicit_type "ConcurrentMap< OID, LoadMonitorEventListener >"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
Create new EventProcessorThread.

@param queue Event queue.
@param listeners Listener list.
"
	end

	operation 403586 "stopMe"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
Stop processing events. Note that this will not stop immediately, but wait until the
remaining data in queue is processed.
"
	end

	operation 403714 "run"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "
@see java.lang.Thread#run()
"
	end
      end

      classrelation 200706 // thread (<unidirectional association>)
	relation 200706 --->
	  a role_name "thread" private
	    comment "
Event processor thread.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 200706 // thread (<unidirectional association>)
	  b parent class_ref 177154 // EventProcessorThread
      end

      classrelation 200834 // logger (<unidirectional association>)
	relation 200834 --->
	  a role_name "logger" private
	    comment "
Logger.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 200834 // logger (<unidirectional association>)
	  b parent class_ref 160258 // HostManagerLogger
      end

      operation 403074 "EventReceiver"
	public explicit_return_type ""
	nparams 3
	  param inout name "queue" type class_ref 176898 // EventQueue
	  param inout name "listeners" explicit_type "ConcurrentMap< OID, LoadMonitorEventListener >"
	  param inout name "logger" type class_ref 160258 // HostManagerLogger
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create new EventReceiver.

@param queue Event queue.
@param listeners Event listeners.
@param logger Logger which will receive all logs.
"
      end

      operation 403202 "kill"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Stop receiving events.
"
      end

      operation 403330 "stop"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Stop receiving events and process rest of the work queue.
"
      end
    end

    class 177282 "EventStorageListener"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Listener which will store all incoming events in the appropriate file (each host has its own file).

@author Branislav Repcek
"
      classrelation 201474 // <generalisation>
	relation 201474 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 201474 // <generalisation>
	  b parent class_ref 176258 // LoadMonitorEventListener
      end

      classrelation 201602 // logger (<unidirectional association>)
	relation 201602 --->
	  a role_name "logger" private
	    comment "
Logger.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 201602 // logger (<unidirectional association>)
	  b parent class_ref 160258 // HostManagerLogger
      end

      classrelation 201730 // appData (<unidirectional association>)
	relation 201730 --->
	  a role_name "appData" private
	    comment "
App data.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 201730 // appData (<unidirectional association>)
	  b parent class_ref 160130 // HostManagerApplicationData
      end

      operation 403842 "EventStorageListener"
	public explicit_return_type ""
	nparams 1
	  param inout name "appData" type class_ref 160130 // HostManagerApplicationData
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create new listener.

@param appData Application data.
"
      end

      operation 403970 "onAccept"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 175874 // LoadMonitorEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadMonitorEventListener#onAccept(cz.cuni.mff.been.hostmanager.load.LoadMonitorEvent)
"
      end

      operation 404098 "onReject"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 175874 // LoadMonitorEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadMonitorEventListener#onReject(cz.cuni.mff.been.hostmanager.load.LoadMonitorEvent)
"
      end
    end

    class 177410 "HostDataStatistician"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
This class provides access to the data collected by Load Monitors on hosts in the network.
It contains various methods that can be used to calculate various simple statistics about
the data stored in database.

@author Branislav Repcek
"
      classrelation 201986 // <generalisation>
	relation 201986 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 201986 // <generalisation>
	  b parent class_ref 130178 // UnicastRemoteObject
      end

      classrelation 202242 // <realization>
	relation 202242 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 202242 // <realization>
	  b parent class_ref 177538 // HostDataStatisticianInterface
      end

      classrelation 202370 // eventParser (<unidirectional association>)
	relation 202370 --->
	  a role_name "eventParser" private
	    comment "
Parser for the event file.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}< LoadMonitorEvent > ${name}${value};
"
	    classrelation_ref 202370 // eventParser (<unidirectional association>)
	  b parent class_ref 177922 // LoadFileParser
      end

      classrelation 202498 // loadMapEntries (<unidirectional association>)
	relation 202498 --->
	  stereotype "List"
	  a role_name "loadMapEntries" private
	    comment "
Entries from the load map file.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}< ${type} > ${name}${value};
"
	    classrelation_ref 202498 // loadMapEntries (<unidirectional association>)
	  b parent class_ref 178178 // FileEntry
      end

      attribute 217218 "mapFile"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Name of the load map file.

"
      end

      attribute 217346 "eventFile"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Event file name.

"
      end

      attribute 217474 "parsed"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Is load map file parsed?

"
      end

      attribute 217602 "closed"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Are input files closed?

"
      end

      operation 410114 "HostDataStatistician"
	package explicit_return_type ""
	nparams 2
	  param in name "mapFile" explicit_type "String"
	  param in name "eventFile" explicit_type "String"
	nexceptions 3
	  explicit_exception "IOException"
	  explicit_exception "RemoteException"
	  exception class_ref 161922 // InvalidArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create new data provider.

@param mapFile Map file.
@param eventFile File with events.

@throws IOException If an error occurred while opening input files. 
@throws RemoteException If RMI exception occurred.
@throws InvalidArgumentException If some filename is empty string or <tt>null</tt>. 
"
      end

      operation 410242 "getHardwareDescription"
	public return_type class_ref 176002 // HardwareDescription
	nparams 1
	  param in name "timestamp" explicit_type "long"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 164226 // InputParseException
	  exception class_ref 135170 // ValueNotFoundException
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
@see cz.cuni.mff.been.hostmanager.load.HostDataProviderInterface#getHardwareDescription(long)
"
      end

      operation 410370 "getHardwareDescription"
	public return_type class_ref 176002 // HardwareDescription
	nparams 1
	  param inout name "date" explicit_type "Date"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 164226 // InputParseException
	  exception class_ref 135170 // ValueNotFoundException
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
@see cz.cuni.mff.been.hostmanager.load.HostDataProviderInterface#getHardwareDescription(java.util.Date)
"
      end

      operation 410498 "getPreviousHardwareDescription"
	public return_type class_ref 176002 // HardwareDescription
	nparams 1
	  param in name "timestamp" explicit_type "long"
	nexceptions 4
	  exception class_ref 164226 // InputParseException
	  explicit_exception "RemoteException"
	  exception class_ref 135170 // ValueNotFoundException
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.HostDataProviderInterface#getPreviousHardwareDescription(long)
"
      end

      operation 410626 "getPreviousHardwareDescription"
	public return_type class_ref 176002 // HardwareDescription
	nparams 1
	  param inout name "date" explicit_type "Date"
	nexceptions 4
	  exception class_ref 164226 // InputParseException
	  explicit_exception "RemoteException"
	  exception class_ref 135170 // ValueNotFoundException
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.HostDataProviderInterface#getPreviousHardwareDescription(java.util.Date)
"
      end

      operation 410754 "getSamples"
	public return_type class_ref 176130 // LoadSample
	nparams 2
	  param inout name "start" explicit_type "Long"
	  param inout name "end" explicit_type "Long"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 164226 // InputParseException
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List< ${type} > ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
@see cz.cuni.mff.been.hostmanager.load.HostDataProviderInterface#getSamples(java.lang.Long, java.lang.Long)
"
      end

      operation 410882 "getSamples"
	public return_type class_ref 176130 // LoadSample
	nparams 2
	  param inout name "start" explicit_type "Date"
	  param inout name "end" explicit_type "Date"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 164226 // InputParseException
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List< ${type} > ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
@see cz.cuni.mff.been.hostmanager.load.HostDataProviderInterface#getSamples(java.util.Date, java.util.Date)
"
      end

      operation 411010 "getEvents"
	public return_type class_ref 175874 // LoadMonitorEvent
	nparams 2
	  param inout name "start" explicit_type "Long"
	  param inout name "end" explicit_type "Long"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 164226 // InputParseException
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List< ${type} > ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
@see cz.cuni.mff.been.hostmanager.load.HostDataProviderInterface#getEvents(java.lang.Long, java.lang.Long)
"
      end

      operation 411138 "getEvents"
	public return_type class_ref 175874 // LoadMonitorEvent
	nparams 2
	  param inout name "start" explicit_type "Date"
	  param inout name "end" explicit_type "Date"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 164226 // InputParseException
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List< ${type} > ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
@see cz.cuni.mff.been.hostmanager.load.HostDataProviderInterface#getEvents(java.util.Date, java.util.Date)
"
      end

      operation 411266 "getProcessCountStats"
	public return_type class_ref 177666 // ValueStatistics
	nparams 2
	  param inout name "start" explicit_type "Long"
	  param inout name "end" explicit_type "Long"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 164226 // InputParseException
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
@see cz.cuni.mff.been.hostmanager.load.HostDataProviderInterface#getProcessCountStats(java.lang.Long, java.lang.Long)
"
      end

      operation 411394 "getProcessQueueLengthStats"
	public return_type class_ref 177666 // ValueStatistics
	nparams 2
	  param inout name "start" explicit_type "Long"
	  param inout name "end" explicit_type "Long"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 164226 // InputParseException
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
@see cz.cuni.mff.been.hostmanager.load.HostDataProviderInterface#getProcessQueueLengthStats(java.lang.Long, java.lang.Long)
"
      end

      operation 411522 "getFreeMemoryStats"
	public return_type class_ref 177666 // ValueStatistics
	nparams 2
	  param inout name "start" explicit_type "Long"
	  param inout name "end" explicit_type "Long"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 164226 // InputParseException
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
@see cz.cuni.mff.been.hostmanager.load.HostDataProviderInterface#getFreeMemoryStats(java.lang.Long, java.lang.Long)
"
      end

      operation 411650 "getNetworkStats"
	public return_type class_ref 140034 // Pair
	nparams 2
	  param inout name "start" explicit_type "Long"
	  param inout name "end" explicit_type "Long"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 164226 // InputParseException
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List< ${type}< ValueStatistics, ValueStatistics > > ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
@see cz.cuni.mff.been.hostmanager.load.HostDataProviderInterface#getNetworkStats(java.lang.Long, java.lang.Long)
"
      end

      operation 411778 "getDriveStats"
	public return_type class_ref 140034 // Pair
	nparams 2
	  param inout name "start" explicit_type "Long"
	  param inout name "end" explicit_type "Long"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 164226 // InputParseException
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List< ${type}< ValueStatistics, ValueStatistics > > ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
@see cz.cuni.mff.been.hostmanager.load.HostDataProviderInterface#getDriveStats(java.lang.Long, java.lang.Long)
"
      end

      operation 411906 "getProcessorStats"
	public return_type class_ref 177666 // ValueStatistics
	nparams 2
	  param inout name "start" explicit_type "Long"
	  param inout name "end" explicit_type "Long"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 164226 // InputParseException
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List< ${type} > ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
@see cz.cuni.mff.been.hostmanager.load.HostDataProviderInterface#getProcessorStats(java.lang.Long, java.lang.Long)
"
      end

      operation 412034 "getTimestamps"
	public explicit_return_type "List< Long >"
	nparams 3
	  param inout name "start" explicit_type "Long"
	  param inout name "end" explicit_type "Long"
	  param inout name "type" type class_ref 177794 // EventType
	nexceptions 3
	  exception class_ref 164226 // InputParseException
	  explicit_exception "RemoteException"
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
@see cz.cuni.mff.been.hostmanager.load.HostDataProviderInterface#getTimestamps(java.lang.Long, java.lang.Long, cz.cuni.mff.been.hostmanager.load.LoadMonitorEvent.EventType)
"
      end

      operation 412162 "getTimestamps"
	public explicit_return_type "List< Long >"
	nparams 2
	  param inout name "start" explicit_type "Long"
	  param inout name "end" explicit_type "Long"
	nexceptions 3
	  exception class_ref 164226 // InputParseException
	  explicit_exception "RemoteException"
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
@see cz.cuni.mff.been.hostmanager.load.HostDataProviderInterface#getTimestamps(java.lang.Long, java.lang.Long)
"
      end

      operation 412290 "getEventInfo"
	public return_type class_ref 140034 // Pair
	nparams 2
	  param inout name "start" explicit_type "Long"
	  param inout name "end" explicit_type "Long"
	nexceptions 3
	  exception class_ref 164226 // InputParseException
	  explicit_exception "RemoteException"
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List< ${type}< Long, LoadMonitorEvent.EventType >> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.HostDataProviderInterface#getEventInfo(java.lang.Long, java.lang.Long)
"
      end

      operation 412418 "getEvent"
	public return_type class_ref 175874 // LoadMonitorEvent
	nparams 1
	  param inout name "time" explicit_type "Date"
	nexceptions 5
	  explicit_exception "RemoteException"
	  exception class_ref 164226 // InputParseException
	  exception class_ref 135170 // ValueNotFoundException
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
@see cz.cuni.mff.been.hostmanager.load.HostDataProviderInterface#getEvent(java.util.Date)
"
      end

      operation 412546 "getEvent"
	public return_type class_ref 175874 // LoadMonitorEvent
	nparams 1
	  param in name "timestamp" explicit_type "long"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 164226 // InputParseException
	  exception class_ref 135170 // ValueNotFoundException
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
@see cz.cuni.mff.been.hostmanager.load.HostDataProviderInterface#getEvent(long)
"
      end

      operation 412674 "getLastTimestamp"
	public explicit_return_type "Long"
	nparams 0
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 164226 // InputParseException
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
@see cz.cuni.mff.been.hostmanager.load.HostDataProviderInterface#getLastTimestamp()
"
      end

      operation 412802 "getLastTimestamp"
	public explicit_return_type "Long"
	nparams 1
	  param inout name "eventType" type class_ref 177794 // EventType
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 164738 // IllegalOperationException
	  exception class_ref 164226 // InputParseException
	  exception class_ref 161922 // InvalidArgumentException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
@see cz.cuni.mff.been.hostmanager.load.HostDataStatisticianInterface#getLastTimestamp(cz.cuni.mff.been.hostmanager.load.LoadMonitorEvent.EventType)
"
      end

      operation 412930 "refresh"
	public explicit_return_type "void"
	nparams 0
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 164226 // InputParseException
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
@see cz.cuni.mff.been.hostmanager.load.HostDataProviderInterface#refresh()
"
      end

      operation 413058 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 2
	  explicit_exception "RemoteException"
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
@see cz.cuni.mff.been.hostmanager.load.HostDataProviderInterface#close()
"
      end

      operation 413186 "findPreviousEventByTimeAndType"
	private explicit_return_type "int"
	nparams 2
	  param in name "timestamp" explicit_type "long"
	  param inout name "type" type class_ref 177794 // EventType
	nexceptions 3
	  exception class_ref 164226 // InputParseException
	  explicit_exception "RemoteException"
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Find event of given type with time stamp smaller or equal to the one specified.

@param timestamp Time stamp limit.
@param type Type of the event to find.

@return Index of the event of given type with time stamp <= specified time stamp. 
        If no such event exists, -1 is returned.
        
@throws RemoteException If RMI error occurred.
@throws InputParseException If an error occurred while parsing input file.
"
      end

      operation 413314 "findPreviousEventByTime"
	private explicit_return_type "int"
	nparams 1
	  param in name "timestamp" explicit_type "long"
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 164226 // InputParseException
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Find index of the entry which has the largest time stamp smaller than or equal to the specified 
one.

@param timestamp Time stamp limit.

@return Index of the event with time stamp <= specified time stamp. If no such event exists,
        -1 is returned.
        
@throws RemoteException If RMI error occurred.
@throws InputParseException If an error occurred while parsing input file.
"
      end

      operation 413442 "findNextEventByTime"
	private explicit_return_type "int"
	nparams 1
	  param in name "timestamp" explicit_type "long"
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 164226 // InputParseException
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Find next event with time stamp at least as big as the specified one.

@param timestamp Time stamp to search for.

@return Event with time stamp >= specified time stamp.

@throws RemoteException If RMI error occurred.
@throws InputParseException If an error occurred while reading input files.
"
      end

      operation 413570 "findNextEventByTimeAndType"
	private explicit_return_type "int"
	nparams 2
	  param in name "timestamp" explicit_type "long"
	  param inout name "type" type class_ref 177794 // EventType
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 164226 // InputParseException
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Find first event that has correct type and its time stamp is at least as big as
the one specified.

@param timestamp Time stamp limit.
@param type Type of event to look for.

@return Index of the event of requested type with time stamp >= given time stamp or -1 if no
        such event has been found.
        
@throws RemoteException If RMI error occurred.
@throws InputParseException If an error occurred while parsing input file.
"
      end

      class 178306 "ET1Comparator"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 202626 // <realization>
	  relation 202626 -_-|>
	    a public
	      java "${type}< LoadMapFile.FileEntry >"
	      classrelation_ref 202626 // <realization>
	    b parent class_ref 149634 // Comparator
	end

	operation 413698 "compare"
	  public explicit_return_type "int"
	  nparams 2
	    param inout name "o1" type class_ref 178178 // FileEntry
	    param inout name "o2" type class_ref 178178 // FileEntry
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " 
@see java.util.Comparator#compare(java.lang.Object, java.lang.Object)
"
	end
      end

      operation 413826 "parseData"
	private explicit_return_type "void"
	nparams 0
	nexceptions 3
	  exception class_ref 164226 // InputParseException
	  explicit_exception "RemoteException"
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Read load map file.

@throws InputParseException If and error occurred while reading input file.
@throws RemoteException If RMI error occurred.
"
      end
    end

    class 177538 "HostDataStatisticianInterface"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
This interface contains methods that provide access to the data collected by Load Monitors running
on hosts. Several methods that can calculate simple statistics of data sampled by the Monitors are
provided.

@author Branislav Repcek
"
      classrelation 202114 // <generalisation>
	relation 202114 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 202114 // <generalisation>
	  b parent class_ref 130818 // Remote
      end

      operation 407170 "getSamples"
	public return_type class_ref 176130 // LoadSample
	nparams 2
	  param inout name "start" explicit_type "Long"
	  param inout name "end" explicit_type "Long"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 164226 // InputParseException
	  exception class_ref 164738 // IllegalOperationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List< ${type} > ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get list of samples from given interval in time.

@param start Start of the time interval specified as a number of 100 ns intervals since the 
       start of the Windows epoch. Use <tt>null</tt> for negative infinity.
@param end End of the time interval specified as a number of 100 ns intervals since the
       start of the Windows epoch. Use <tt>null</tt> for positive infinity.
       
@return List of all samples from given interval. List may be empty.

@throws RemoteException If RMI error occurred.
@throws InvalidArgumentException If time interval is invalid (if start is later than end).
@throws InputParseException If an error occurred while parsing input files.
@throws IllegalOperationException If input files have been closed with the {@link #close()}
        method.
"
      end

      operation 407298 "getSamples"
	public return_type class_ref 176130 // LoadSample
	nparams 2
	  param inout name "start" explicit_type "Date"
	  param inout name "end" explicit_type "Date"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 164226 // InputParseException
	  exception class_ref 164738 // IllegalOperationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List< ${type} > ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get list of samples from given interval in time.

@param start Time of the starting point of the interval. Use <tt>null</tt> for negative
       infinity.
       
@param end Time of the ending point of the interval. Use <tt>null</tt> for positive
       infinity.
       
@return List of all samples from given interval. List may be empty.

@throws RemoteException If RMI error occurred.
@throws InvalidArgumentException If time interval is invalid (if start is later than end).
@throws InputParseException If an error occurred while parsing input files.
@throws IllegalOperationException If input files have been closed with the {@link #close()}
        method.
"
      end

      operation 407426 "getEvents"
	public return_type class_ref 175874 // LoadMonitorEvent
	nparams 2
	  param inout name "start" explicit_type "Long"
	  param inout name "end" explicit_type "Long"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 164226 // InputParseException
	  exception class_ref 164738 // IllegalOperationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List< ${type} > ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Retrieve all events from given time interval.

@param start Start of the time interval specified as a number of 100 ns intervals since the 
       start of the Windows epoch. Use <tt>null</tt> for negative infinity.
@param end End of the time interval specified as a number of 100 ns intervals since the
       start of the Windows epoch. Use <tt>null</tt> for positive infinity.

@return List containing al events from given interval.

@throws RemoteException If RMI error occurred.
@throws InvalidArgumentException If start is after end.
@throws InputParseException If an error occurred while reading input files.
@throws IllegalOperationException If input files have been closed with the {@link #close()}
        method.
"
      end

      operation 407554 "getEvents"
	public return_type class_ref 175874 // LoadMonitorEvent
	nparams 2
	  param inout name "start" explicit_type "Date"
	  param inout name "end" explicit_type "Date"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 164226 // InputParseException
	  exception class_ref 164738 // IllegalOperationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List< ${type} > ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Retrieve all events from given time interval.

@param start Time of the beginning of the interval. Use <tt>null</tt> fo negative infinity.
@param end Time of the end of the interval. Use <tt>null</tt> for positive infinity.

@return List containing al events from given interval.

@throws RemoteException If RMI error occurred.
@throws InvalidArgumentException If start is after end.
@throws InputParseException If an error occurred while reading input files.
@throws IllegalOperationException If input files have been closed with the {@link #close()}
        method.
"
      end

      operation 407682 "getProcessCountStats"
	public return_type class_ref 177666 // ValueStatistics
	nparams 2
	  param inout name "start" explicit_type "Long"
	  param inout name "end" explicit_type "Long"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 164226 // InputParseException
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 164738 // IllegalOperationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Retrieve statistics about number of processes from given time interval.

@param start Start of the time interval specified as a number of 100 ns intervals since the 
       start of the Windows epoch. Use <tt>null</tt> for negative infinity.
@param end End of the time interval specified as a number of 100 ns intervals since the
       start of the Windows epoch. Use <tt>null</tt> for positive infinity.
       
@return Statistics about number of processes run on the host in given time interval.

@throws RemoteException If RMI error occurred.
@throws InputParseException If an error occurred while reading input file.
@throws InvalidArgumentException If specified time interval is invalid (start is after end).
@throws IllegalOperationException If input files have been closed with the {@link #close()}
        method.
"
      end

      operation 407810 "getProcessQueueLengthStats"
	public return_type class_ref 177666 // ValueStatistics
	nparams 2
	  param inout name "start" explicit_type "Long"
	  param inout name "end" explicit_type "Long"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 164226 // InputParseException
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 164738 // IllegalOperationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get statistics about process queue length from given interval in time.

@param start Start of the time interval specified as a number of 100 ns intervals since the 
       start of the Windows epoch. Use <tt>null</tt> for negative infinity.
@param end End of the time interval specified as a number of 100 ns intervals since the
       start of the Windows epoch. Use <tt>null</tt> for positive infinity.

@return Statistics about processor queue length during given interval.

@throws RemoteException If RMI error occurred.
@throws InputParseException If an error occurred while reading input file.
@throws InvalidArgumentException If specified time interval is invalid (start is after end).
@throws IllegalOperationException If input files have been closed with the {@link #close()}
        method.
"
      end

      operation 407938 "getFreeMemoryStats"
	public return_type class_ref 177666 // ValueStatistics
	nparams 2
	  param inout name "start" explicit_type "Long"
	  param inout name "end" explicit_type "Long"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 164226 // InputParseException
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 164738 // IllegalOperationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get statistics about free memory during specified time interval.

@param start Start of the time interval specified as a number of 100 ns intervals since the 
       start of the Windows epoch. Use <tt>null</tt> for negative infinity.
@param end End of the time interval specified as a number of 100 ns intervals since the
       start of the Windows epoch. Use <tt>null</tt> for positive infinity.

@return Statistics about free memory during given interval.

@throws RemoteException If RMI error occurred.
@throws InputParseException If an error occurred while reading input file.
@throws InvalidArgumentException If specified time interval is invalid (start is after end).
@throws IllegalOperationException If input files have been closed with the {@link #close()}
        method.
"
      end

      operation 408066 "getNetworkStats"
	public return_type class_ref 140034 // Pair
	nparams 2
	  param inout name "start" explicit_type "Long"
	  param inout name "end" explicit_type "Long"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 164226 // InputParseException
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 164738 // IllegalOperationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List< ${type}< ValueStatistics, ValueStatistics > > ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Generate statistics about incoming and outgoing network traffic during given time period.

@param start Start of the time interval specified as a number of 100 ns intervals since the 
       start of the Windows epoch. Use <tt>null</tt> for negative infinity.
@param end End of the time interval specified as a number of 100 ns intervals since the
       start of the Windows epoch. Use <tt>null</tt> for positive infinity.
       
@return List which contains instance {@link cz.cuni.mff.been.common.Pair} class with data
        about specific network interface. Interfaces are listed in the order they appear in
        the sample data. First item of each pair contains statistics about the incoming
        traffic, second item contains data about outgoing traffic.

@throws RemoteException If RMI error occurred.
@throws InputParseException If an error occurred while reading input file.
@throws InvalidArgumentException If time interval is invalid (start is after end).
@throws IllegalOperationException If hardware configuration was changed during specified
        interval or if input files have been closed via {@link #close()} method..
"
      end

      operation 408194 "getDriveStats"
	public return_type class_ref 140034 // Pair
	nparams 2
	  param inout name "start" explicit_type "Long"
	  param inout name "end" explicit_type "Long"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 164226 // InputParseException
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 164738 // IllegalOperationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List< ${type}< ValueStatistics, ValueStatistics > > ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Generate statistics about disk drive reads and writes during given time period.

@param start Start of the time interval specified as a number of 100 ns intervals since the 
       start of the Windows epoch. Use <tt>null</tt> for negative infinity.
@param end End of the time interval specified as a number of 100 ns intervals since the
       start of the Windows epoch. Use <tt>null</tt> for positive infinity.
       
@return List which contains instance {@link cz.cuni.mff.been.common.Pair} class with data
        about specific disk drive. Drives are listed in the order they appear in
        the sample data. First item of each pair contains statistics about the disk reads,
        second item contains data about drive writes.

@throws RemoteException If RMI error occurred.
@throws InputParseException If an error occurred while reading input file.
@throws InvalidArgumentException If time interval is invalid (start is after end).
@throws IllegalOperationException If hardware configuration was changed during specified
        interval or if input files have been closed with the {@link #close()} method.
"
      end

      operation 408322 "getProcessorStats"
	public return_type class_ref 177666 // ValueStatistics
	nparams 2
	  param inout name "start" explicit_type "Long"
	  param inout name "end" explicit_type "Long"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 164226 // InputParseException
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 164738 // IllegalOperationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List< ${type} > ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get statistics about processor usage during specified time interval.

@param start Start of the time interval specified as a number of 100 ns intervals since the 
       start of the Windows epoch. Use <tt>null</tt> for negative infinity.
@param end End of the time interval specified as a number of 100 ns intervals since the
       start of the Windows epoch. Use <tt>null</tt> for positive infinity.
       
@return List which contains statistics about each processor. Processors are listed in
        order they apper in the sample data.
        
@throws RemoteException If RMI error occurred.
@throws InputParseException If an error occurred while reading input file.
@throws InvalidArgumentException If time interval is invalid (start is after end).
@throws IllegalOperationException If hardware configuration was changed during specified
        interval or if input files have been closed with the {@link #close()} method..
"
      end

      operation 408450 "getHardwareDescription"
	public return_type class_ref 176002 // HardwareDescription
	nparams 1
	  param in name "timestamp" explicit_type "long"
	nexceptions 4
	  exception class_ref 164226 // InputParseException
	  explicit_exception "RemoteException"
	  exception class_ref 135170 // ValueNotFoundException
	  exception class_ref 164738 // IllegalOperationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Find hardware description with timestamp that is closest to the specified time.

@param timestamp Starting point of the search. Time is specified as a number of 100 ns 
       intervals since the start of the Windows epoch.
       
@return Hardware description or <tt>null</tt> if no such event has been found.
        
@throws RemoteException If RMI error occurred.
@throws InputParseException If an error occurred while parsing input file.
@throws ValueNotFoundException If no hardware description exists for given timestamp.
@throws IllegalOperationException If input files have been closed with the {@link #close()}
        method.
"
      end

      operation 408578 "getHardwareDescription"
	public return_type class_ref 176002 // HardwareDescription
	nparams 1
	  param inout name "date" explicit_type "Date"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 164226 // InputParseException
	  exception class_ref 135170 // ValueNotFoundException
	  exception class_ref 164738 // IllegalOperationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get hardware description retrieved by the Load Monitor prior to the specified time.
 
@param date Date..

@return Hardware description with the biggest timestamp smaller than the date specified
        in argument.

@throws RemoteException If RMI error occurred.
@throws InputParseException If an error occurred while parsing input files.
@throws ValueNotFoundException If no hardware description exists for given date and time.
@throws IllegalOperationException If input files have been closed with the {@link #close()}
        method.
"
      end

      operation 408706 "getPreviousHardwareDescription"
	public return_type class_ref 176002 // HardwareDescription
	nparams 1
	  param in name "timestamp" explicit_type "long"
	nexceptions 4
	  exception class_ref 164226 // InputParseException
	  explicit_exception "RemoteException"
	  exception class_ref 135170 // ValueNotFoundException
	  exception class_ref 164738 // IllegalOperationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Find hardware description that is just before specified timestamp.
 
@param timestamp Starting point of the search. Time is specified as a number of 100 ns 
       intervals since the start of the Windows epoch.
       
@return Hardware description just before the specified point in time. <tt>null</tt> is
        returned if no description with timestamp smaller than the one specified has been found.
        
@throws RemoteException If RMI error occurred.
@throws InputParseException If an error occurred while parsing input file.
@throws ValueNotFoundException If no hw description has been found prior to the specified time.
@throws IllegalOperationException If input files have been closed with the {@link #close()}
        method.
"
      end

      operation 408834 "getPreviousHardwareDescription"
	public return_type class_ref 176002 // HardwareDescription
	nparams 1
	  param inout name "date" explicit_type "Date"
	nexceptions 4
	  exception class_ref 164226 // InputParseException
	  explicit_exception "RemoteException"
	  exception class_ref 135170 // ValueNotFoundException
	  exception class_ref 164738 // IllegalOperationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Find hardware description that is just before specified time.

@param date Date and time which specified starting point of the search.
       
@return Hardware description just before the specified point in time. <tt>null</tt> is
        returned if no description with timestamp smaller than the one specified has been found.
        
@throws RemoteException If RMI error occurred.
@throws InputParseException If an error occurred while parsing input file.
@throws ValueNotFoundException If no hw description has been found prior to the specified time.
@throws IllegalOperationException If input files have been closed with the {@link #close()}
        method.
"
      end

      operation 408962 "getTimestamps"
	public explicit_return_type "List< Long >"
	nparams 2
	  param inout name "start" explicit_type "Long"
	  param inout name "end" explicit_type "Long"
	nexceptions 3
	  exception class_ref 164226 // InputParseException
	  explicit_exception "RemoteException"
	  exception class_ref 164738 // IllegalOperationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get list of event timestamps from given time interval.

@param start Start of the time interval specified as a number of 100 ns intervals since the 
       start of the Windows epoch. Use <tt>null</tt> for negative infinity.
@param end End of the time interval specified as a number of 100 ns intervals since the
       start of the Windows epoch. Use <tt>null</tt> for positive infinity.
       
@return List of longs. Each value is timestamp of the event in the load file. Timestamps
        are in the ascending order.
        
@throws InputParseException If an error occurred while reading input file.
@throws RemoteException If RMI error occurred.
@throws IllegalOperationException If input files have been closed with the {@link #close()}
        method.
"
      end

      operation 409090 "getTimestamps"
	public explicit_return_type "List< Long >"
	nparams 3
	  param inout name "start" explicit_type "Long"
	  param inout name "end" explicit_type "Long"
	  param inout name "type" type class_ref 177794 // EventType
	nexceptions 3
	  exception class_ref 164226 // InputParseException
	  explicit_exception "RemoteException"
	  exception class_ref 164738 // IllegalOperationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get list of event timestamps from given time interval. Only timestamps of events of specific
type are returned.

@param start Start of the time interval specified as a number of 100 ns intervals since the 
       start of the Windows epoch. Use <tt>null</tt> for negative infinity.
@param end End of the time interval specified as a number of 100 ns intervals since the
       start of the Windows epoch. Use <tt>null</tt> for positive infinity.
@param type Type of events to search for. If this is <tt>null</tt> all events will be returned.
       
@return List of longs. Each value is timestamp of the event in the load file. Timestamps
        are in the ascending order.
        
@throws InputParseException If an error occurred while reading input file.
@throws RemoteException If RMI error occurred.
@throws IllegalOperationException If input files have been closed with the {@link #close()}
        method.
"
      end

      operation 409218 "getEventInfo"
	public return_type class_ref 140034 // Pair
	nparams 2
	  param inout name "start" explicit_type "Long"
	  param inout name "end" explicit_type "Long"
	nexceptions 3
	  exception class_ref 164226 // InputParseException
	  explicit_exception "RemoteException"
	  exception class_ref 164738 // IllegalOperationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List< ${type}< Long, LoadMonitorEvent.EventType > > ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get information about events from specified interval.

@param start Start of the time interval specified as a number of 100 ns intervals since the 
       start of the Windows epoch. Use <tt>null</tt> for negative infinity.
@param end End of the time interval specified as a number of 100 ns intervals since the
       start of the Windows epoch. Use <tt>null</tt> for positive infinity.
       
@return List of pairs with details about each event from specified time interval. First
        element of the pair is event's timestamp, second element is type of the event.

@throws InputParseException If an error occurred while parsing input files.
@throws RemoteException If RMI error occurred.
@throws IllegalOperationException If input files have been closed with the {@link #close()}
        method.
"
      end

      operation 409346 "getEvent"
	public return_type class_ref 175874 // LoadMonitorEvent
	nparams 1
	  param in name "timestamp" explicit_type "long"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 164226 // InputParseException
	  exception class_ref 135170 // ValueNotFoundException
	  exception class_ref 164738 // IllegalOperationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get event from given time.

@param timestamp Timestamp of the event to retrieve.

@return Event with given timestamp.

@throws RemoteException If RMI error occurred.
@throws InputParseException If an error occurred while reading input files.
@throws ValueNotFoundException If no event with given timestamp has been found.
@throws IllegalOperationException If input files have been closed with the {@link #close()}
        method.
"
      end

      operation 409474 "getEvent"
	public return_type class_ref 175874 // LoadMonitorEvent
	nparams 1
	  param inout name "time" explicit_type "Date"
	nexceptions 5
	  explicit_exception "RemoteException"
	  exception class_ref 164226 // InputParseException
	  exception class_ref 135170 // ValueNotFoundException
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 164738 // IllegalOperationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get event from given time.

@param time Time of the event to retrieve.

@return Event with given time.

@throws RemoteException If RMI error occurred.
@throws InputParseException If an error occurred while reading input files.
@throws ValueNotFoundException If no event with given timestamp has been found.
@throws InvalidArgumentException If given date is <tt>null</tt>.
@throws IllegalOperationException If input files have been closed with the {@link #close()}
        method.
"
      end

      operation 409602 "getLastTimestamp"
	public explicit_return_type "Long"
	nparams 0
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 164226 // InputParseException
	  exception class_ref 164738 // IllegalOperationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get timestamp of the last event that is cached in the instance of the implementing class.
This basically denotes how old the data are. If you want more recent data, you have to call
{@link #refresh()} method.

@return Timestamp of the last event that is in cache. If cache is empty <tt>null</tt> is returned.
        Time is measured as a number of 100 ns intervals since start of the Windows epoch
        (1. 1. 1601). 

@throws RemoteException If RMI error occurred.
@throws InputParseException If an error occurred while parsing input files.
@throws IllegalOperationException If input files have been closed with the {@link #close()}
        method.
"
      end

      operation 409730 "getLastTimestamp"
	public explicit_return_type "Long"
	nparams 1
	  param inout name "eventType" type class_ref 177794 // EventType
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 164738 // IllegalOperationException
	  exception class_ref 164226 // InputParseException
	  exception class_ref 161922 // InvalidArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get timestamp of the last event of given type.
 
@param eventType Type of event to search for.

@return Timestamp of requested event or <tt>null</tt> if no such event has been found.

@throws RemoteException If RMI error occurred.
@throws InputParseException If an error occurred while parsing input files.
@throws IllegalOperationException If input files have been closed with the {@link #close()}
        method.
@throws InvalidArgumentException If event type is <tt>null</tt>.
"
      end

      operation 409858 "refresh"
	public explicit_return_type "void"
	nparams 0
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 164226 // InputParseException
	  exception class_ref 164738 // IllegalOperationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Re-parse all files that are stored in the cache.

@throws RemoteException If RMI error occurred.
@throws InputParseException If an error occurred while parsing input files.
@throws IllegalOperationException If input files have been closed with the {@link #close()}
        method.
"
      end

      operation 409986 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 2
	  explicit_exception "RemoteException"
	  explicit_exception "IOException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Close all input files. After call to close you should not attempt to call any methods on the
object. Multiple calls do not have any effect.
 
@throws RemoteException If RMI error occurred.
@throws IOException If an error occurred when closing input file.
"
      end
    end

    class 177666 "ValueStatistics"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Statistical data about values read from the event file.

@author Branislav Repcek
"
      classrelation 207618 // <realization>
	relation 207618 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 207618 // <realization>
	  b parent class_ref 148226 // Serializable
      end

      attribute 228738 "min"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Minimum value from the dataset.

"
      end

      attribute 228866 "max"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Maximum value from the dataset.

"
      end

      attribute 228994 "average"
	private explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Average value.

"
      end

      attribute 229122 "sum"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Sum of all values.

"
      end

      attribute 229250 "name"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Name (description) of the data.

"
      end

      attribute 229378 "limitMin"
	private explicit_type "Long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Global minimum for this value.

"
      end

      attribute 229506 "limitMax"
	private explicit_type "Long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Global maximum for this value.

"
      end

      attribute 229634 "count"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Number of values.

"
      end

      operation 442626 "ValueStatistics"
	package explicit_return_type ""
	nparams 3
	  param in name "name" explicit_type "String"
	  param inout name "limitMin" explicit_type "Long"
	  param inout name "limitMax" explicit_type "Long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create new data storage for value with given name.

@param name Name of the value.
@param limitMin Minimum value. Use <tt>null</tt> for negative infinity.
@param limitMax Maximum value. use <tt>null</tt> for positive infinity.
"
      end

      operation 442754 "addSamplePoint"
	public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Add new sample value.

@param value Value to add.
"
      end

      operation 442882 "getAverage"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return Average value of all samples. If no data is stored in this instance 0.0 is returned.
"
      end

      operation 443010 "getCount"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return Number of values.
"
      end

      operation 443138 "getMax"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return Maximum value. If no data is stored in this instance 0 is returned.
"
      end

      operation 443266 "getMin"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return Minimum value. If no data is stored in this instance 0 is returned.
"
      end

      operation 443394 "getName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return Name of the value.
"
      end

      operation 443522 "getLimitMax"
	public explicit_return_type "Long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return Global maximum this value can reach. If value does not have upper bound 
        <tt>null</tt> is returned.
"
      end

      operation 443650 "getLimitMin"
	public explicit_return_type "Long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return Global minimum this value can reach. If value does not have lower bound
        <tt>null</tt> is returned.
"
      end
    end

    class 177922 "LoadFileParser"
      visibility public 
      nformals 2
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 178562 // LoadFileParserInterface
        rank 0 explicit_value "T"
      actual class class_ref 178562 // LoadFileParserInterface
        rank 1 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
This class implements parser of the load files. Data in load files is stored in chunks of
varying size. Load file can contain only one type of chunk (e.g. all chunks are either LoadSample
or LoadMonitorEvent). This class provides simple, iterator-like interface to work with these files.
Parser can be used to either write new files by appending new chunks at the end of the file
(modifications in the middle of the file are not allowed) or it can be used to read chunks from
file sequentially. 

@param <T> Type of the data stored in the file. Only homogenous files are supported.

@author Branislav Repcek
"
      classrelation 202882 // <realization>
	relation 202882 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 202882 // <realization>
	  b parent class_ref 178562 // LoadFileParserInterface
      end

      attribute 218882 "HEADER_BUFFER_SIZE"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Size of the header buffer in bytes. This buffer has constant size and is never reallocated.

"
      end

      attribute 219010 "FOOTER_BUFFER_SIZE"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Size of the footer buffer in bytes. It has constant size and is never reallocated.

"
      end

      attribute 219138 "channel"
	private explicit_type "FileChannel"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
File channel that is used when reading/writing to the file.

"
      end

      attribute 219266 "dataBuffer"
	private explicit_type "ByteBuffer"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Buffer for data. Initial size of the buffer is MINIMUM_BUFFER_SIZE.

"
      end

      attribute 219394 "headerBuffer"
	private explicit_type "ByteBuffer"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Buffer for the header. Size is always HEADER_BUFFER_SIZE.

"
      end

      attribute 219522 "footerBuffer"
	private explicit_type "ByteBuffer"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Buffer for the footer. Size is always FOOTER_BUFFER_SIZE.

"
      end

      attribute 219650 "fjg"
	private explicit_type " T "
	stereotype "Class"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Class of the class we are reading from the file.

"
      end

      attribute 219778 "next"
	private explicit_type "T"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Value of the next element. If <tt>null</tt>, next element has not been cached yet (or it does not exist).

"
      end

      attribute 219906 "nodeId"
	private explicit_type "byte"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
ID of the node this stream can save/read.

"
      end

      attribute 220034 "dataFile"
	private explicit_type "RandomAccessFile"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 415746 "LoadFileParser"
	public explicit_return_type ""
	nparams 3
	  param in name "fileName" explicit_type "String"
	  param inout name "append" explicit_type "boolean"
	  param inout name "fjg" explicit_type "Class< T >"
	nexceptions 3
	  explicit_exception "FileNotFoundException"
	  exception class_ref 161922 // InvalidArgumentException
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create new parser.

@param fileName Name of the file input/output file. If parser is in append mode and file does
       not exist, it will be automatically created.
@param append If set to <tt>true</tt>, parser that can append but not read data will be created.
       If set to <tt>false</tt>, parser that only reads data will be created.
@param fjg Class of the output data type.

@throws FileNotFoundException If in read mode and requested file does not exist.
@throws InvalidArgumentException If class is invalid or if given path does not point to the
        regular file.
@throws IOException If in append mode and there was an error creating new output file. 
"
      end

      operation 415874 "LoadFileParser"
	public explicit_return_type ""
	nparams 3
	  param inout name "file" explicit_type "File"
	  param inout name "append" explicit_type "boolean"
	  param inout name "fjg" explicit_type "Class< T >"
	nexceptions 3
	  explicit_exception "FileNotFoundException"
	  exception class_ref 161922 // InvalidArgumentException
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create new parser.

@param file File that will be read or written to. If parser is in append mode and file does
       not exist, it will be automatically created.
@param append If set to <tt>true</tt>, parser that can append but not read data will be created.
       If set to <tt>false</tt>, parser that only reads data will be created.
@param fjg Class of the output data type.

@throws FileNotFoundException If in read mode and requested file does not exist.
@throws InvalidArgumentException If class is invalid or if given path does not point to the
        regular file.
@throws IOException If in append mode and there was an error creating new output file. 
"
      end

      operation 416002 "getNext"
	public explicit_return_type "T"
	nparams 0
	nexceptions 3
	  exception class_ref 164226 // InputParseException
	  explicit_exception "IOException"
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadFileParserInterface#getNext()
"
      end

      operation 416130 "getNext"
	public explicit_return_type "List< T >"
	nparams 1
	  param in name "n" explicit_type "int"
	nexceptions 3
	  exception class_ref 164226 // InputParseException
	  explicit_exception "IOException"
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadFileParserInterface#getNext(int)
"
      end

      operation 416258 "hasNext"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 4
	  exception class_ref 164226 // InputParseException
	  explicit_exception "IOException"
	  explicit_exception "RuntimeException"
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadFileParserInterface#hasNext()
"
      end

      operation 416386 "skip"
	public explicit_return_type "void"
	nparams 1
	  param in name "amount" explicit_type "int"
	nexceptions 4
	  exception class_ref 164226 // InputParseException
	  explicit_exception "IOException"
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadFileParserInterface#skip(int)
"
      end

      operation 416514 "append"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "T"
	nexceptions 3
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 164738 // IllegalOperationException
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Append node to the file.

@param value data to append to the file.

@throws InvalidArgumentException If value is <tt>null</tt>.
@throws IllegalOperationException If parser is in read mode or if the file has been closed.
@throws IOException If IO error occurred.
"
      end

      operation 416642 "append"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "T"
	nexceptions 3
	  explicit_exception "IOException"
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Append multiple nodes from array to the file.

@param value Array of nodes to append.

@throws IOException If an IO error occurred.
@throws InvalidArgumentException If input array is <tt>null</tt> or if some element 
        is <tt>null</tt>.
@throws IllegalOperationException If parser is in read mode or if the file has been closed.
"
      end

      operation 416770 "append"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "List< T >"
	nexceptions 3
	  explicit_exception "IOException"
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Append data from the list to the output file.

@param value List of data nodes to append.

@throws IOException If an IO error occurred.
@throws InvalidArgumentException If input list is <tt>null</tt> or if some element 
        is <tt>null</tt>.
@throws IllegalOperationException If parser is in read mode or if the file has been closed.
"
      end

      operation 416898 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Close file.
"
      end

      operation 417026 "finalize"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "
@see java.lang.Object#finalize()
"
      end

      operation 417154 "getPosition"
	public explicit_return_type "long"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
@see cz.cuni.mff.been.hostmanager.load.LoadFileParserInterface#getPosition()
"
      end

      operation 417282 "seek"
	public explicit_return_type "void"
	nparams 1
	  param in name "position" explicit_type "long"
	nexceptions 2
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
@see cz.cuni.mff.been.hostmanager.load.LoadFileParserInterface#seek(long)
"
      end

      operation 417410 "getNextNode"
	private explicit_return_type "boolean"
	nparams 0
	nexceptions 4
	  exception class_ref 164226 // InputParseException
	  explicit_exception "IOException"
	  explicit_exception "RuntimeException"
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get next node from file and store it in local cache.

@return <tt>true</tt> if operation completed successfully, <tt>false</tt> if end of file has
        been reached.

@throws InputParseException If invalid data have been found in file.
@throws IOException If some read error has occurred or if data in file is incomplete.
@throws RuntimeException If an error occurred while instantiating data class.
@throws IllegalOperationException If parser is in append mode.
"
      end
    end

    class 178050 "LoadMapFile"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
This class handles all manipulation with load maps. Load map file is file which stores positions
and of significant events from the load file. Load files have structure that does not permit 
random access (since nodes may have different sizes) and can be read only sequentially.
Therefore load map file stores file position of each monitor start, monitor stop and hardware
description event and timestamp of the event. This provides for much faster seeking in the file
because only a portion of the file has to be parsed sequentially (from the nearest older
significant event).

@author Branislav Repcek
"
      class 178178 "FileEntry"
	visibility public 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 220674 "ENTRY_SIZE"
	  class_attribute const_attribute public explicit_type "int"
	  init_value "=  17"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "
Size of the entry in bytes.

"
	end

	attribute 220802 "timeStamp"
	  private explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "
Timestamp (windows time).

"
	end

	attribute 220930 "position"
	  private explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "
Position in the file.

"
	end

	attribute 221058 "type"
	  private explicit_type "byte"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "
Type of the event.

"
	end

	operation 419330 "FileEntry"
	  public explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
Create new FileEntry.
"
	end

	operation 419458 "FileEntry"
	  public explicit_return_type ""
	  nparams 3
	    param in name "timeStamp" explicit_type "long"
	    param in name "position" explicit_type "long"
	    param inout name "type" type class_ref 177794 // EventType
	  nexceptions 1
	    exception class_ref 161922 // InvalidArgumentException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
Create new FileEntry.

@param timeStamp Entry timestamp.
@param position Position in the file.
@param type Event type.

@throws InvalidArgumentException If index or position is negative. 
"
	end

	operation 419586 "getPosition"
	  public explicit_return_type "long"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
@return Position of the entry in the load file (bytes from the beginning of the file).
"
	end

	operation 419714 "getTimeStamp"
	  public explicit_return_type "long"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
@return Timestamp of the entry (windows time).
"
	end

	operation 419842 "getType"
	  public return_type class_ref 177794 // EventType
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
@return Event type.
"
	end

	operation 419970 "store"
	  public explicit_return_type "ByteBuffer"
	  nparams 1
	    param inout name "buffer" explicit_type "ByteBuffer"
	  nexceptions 1
	    exception class_ref 164354 // OutputWriteException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
Store data from this entry in the buffer.

@param buffer Buffer to store data in.

@return Buffer after the data has been stored.

@throws OutputWriteException If an error occurred while writing data to the buffer.
"
	end

	operation 420098 "load"
	  public explicit_return_type "ByteBuffer"
	  nparams 1
	    param inout name "buffer" explicit_type "ByteBuffer"
	  nexceptions 1
	    exception class_ref 164226 // InputParseException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
Read data from the buffer.

@param buffer Buffer to read the data from.

@return Buffer after the data has been read.

@throws InputParseException If an error occurred while reading data or if the buffer
        contains invalid data.
"
	end

	operation 420226 "toString"
	  public explicit_return_type "String"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "
@see java.lang.Object#toString()
"
	end

	operation 420354 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " 
@see java.lang.Object#hashCode() 
"
	end

	operation 420482 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "obj" explicit_type "Object"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " 
@see java.lang.Object#equals(java.lang.Object)
"
	end
      end

      attribute 220162 "file"
	private explicit_type "RandomAccessFile"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
File.

"
      end

      attribute 220290 "channel"
	private explicit_type "FileChannel"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Channel.

"
      end

      attribute 220418 "buffer"
	private explicit_type "ByteBuffer"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Buffer.

"
      end

      attribute 220546 "BUFFER_ENTRY_COUNT"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Number of entries that will fit to the preallocated buffer.

"
      end

      operation 418178 "LoadMapFile"
	public explicit_return_type ""
	nparams 2
	  param in name "fileName" explicit_type "String"
	  param inout name "append" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Open load map file.

@param fileName Name of the file to open.
@param append If set to <tt>true</tt> file will be open in append mode, otherwise it will be
       opened in read-only mode.

@throws IOException If an error occurred.
"
      end

      operation 418306 "readFrom"
	public return_type class_ref 178178 // FileEntry
	nparams 1
	  param in name "index" explicit_type "int"
	nexceptions 2
	  exception class_ref 164226 // InputParseException
	  explicit_exception "IndexOutOfBoundsException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Read entry from given position in the load map file.

@param index Index of the entry to read. First entry has index 0, last entry has index
       <tt>getCount() - 1</tt>.
       
@return Requested entry.

@throws InputParseException If an error occurred while reading entry from file.
@throws IndexOutOfBoundsException If index is negative or too big.
"
      end

      operation 418434 "readFrom"
	public return_type class_ref 178178 // FileEntry
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "n" explicit_type "int"
	nexceptions 3
	  exception class_ref 164226 // InputParseException
	  explicit_exception "IndexOutOfBoundsException"
	  exception class_ref 161922 // InvalidArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List< ${type} > ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Read multiple entries from the given position in the map file.

@param index Index of the first entry to read. First entry in the file has index 0, last
       entry has index <tt>getCount() - 1</tt>.
@param n Number of entries to read. If there are not enough entries left in the file all
       remaining entries will be read.
  
@return List with all entries that have been read from the file.

@throws InputParseException If an error occurred while reading file data.
@throws IndexOutOfBoundsException If index is negative or too big.
@throws InvalidArgumentException If number of entries to read is negative or zero.
"
      end

      operation 418562 "append"
	public explicit_return_type "int"
	nparams 1
	  param inout name "entry" type class_ref 178178 // FileEntry
	nexceptions 2
	  exception class_ref 164354 // OutputWriteException
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Append one entry at the end of the file.

@param entry Entry to append.

@return Number of entries in the file.

@throws OutputWriteException If an error occurred while writing data.
@throws IOException If an error occurred while parsing file.
"
      end

      operation 418690 "append"
	public explicit_return_type "int"
	nparams 1
	  param inout name "entry" type class_ref 178178 // FileEntry
	nexceptions 2
	  exception class_ref 164354 // OutputWriteException
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Append multiple entries to the end of the load map file.

@param entry Array of entries to append.

@return Number of entries in the file.

@throws OutputWriteException If an error occurred while writing data.
@throws IOException If an error occurred while parsing file.
"
      end

      operation 418818 "append"
	public explicit_return_type "int"
	nparams 1
	  param inout name "entry" explicit_type "Collection< FileEntry >"
	nexceptions 2
	  exception class_ref 164354 // OutputWriteException
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Append multiple entries at the end of the file.

@param entry Collection with entries.

@return Number of entries in file after append.

@throws OutputWriteException If an error occurred while writing data.
@throws IOException If an error occurred while parsing file.
"
      end

      operation 418946 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Close output (or input) file.

@throws IOException If an error occurred while closing the file.
"
      end

      operation 419074 "finalize"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "
@see java.lang.Object#finalize()
"
      end

      operation 419202 "getCount"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get number of entries in the file.

@return Total number of entries in the file.

@throws IOException If an error occurred while reading file.
"
      end
    end

    class 178434 "LoadFile"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
This class represents unique handle to the Load File with detailed mode data on some computer. 
Load file is uniquely identified by the name of the host on which data has been sampled, 
id of the task that requested detailed mode and id of the context in which that task has been
running. 

@author Branislav Repcek
"
      classrelation 202754 // <realization>
	relation 202754 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 202754 // <realization>
	  b parent class_ref 148226 // Serializable
      end

      attribute 218370 "hostName"
	protected explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Name of the host on which load data have been saved.

"
      end

      attribute 218498 "contextId"
	protected explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Id of the context.

"
      end

      attribute 218626 "taskId"
	protected explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Id of the task.

"
      end

      attribute 218754 "fullPath"
	protected explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Full path to the load file.

"
      end

      operation 414082 "LoadFile"
	protected explicit_return_type ""
	nparams 3
	  param in name "contextId" explicit_type "String"
	  param in name "taskId" explicit_type "String"
	  param in name "fullPath" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create new LoadFile handle with hostName set to the canonical name of the localhost.

@param contextId Id of the context.
@param taskId Id of the task.
@param fullPath Full path to the load file.
"
      end

      operation 414210 "createSampleParser"
	class_operation public return_type class_ref 178562 // LoadFileParserInterface
	nparams 1
	  param inout name "loadFile" type class_ref 178434 // LoadFile
	nexceptions 2
	  explicit_exception "FileNotFoundException"
	  exception class_ref 161922 // InvalidArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}< LoadSample > ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Creates new parser for the load file which stores load samples. Note that this parser has to
be created on the same computer as detailed mode file.

@param loadFile Handle to the load file to open. This handle has to originate from the same
       computer on which this method is called.

@return Parser for the requested load file. See {@link LoadFileParserInterface} for more
        details about how to parse load files.

@throws FileNotFoundException If load file has not been found.
@throws InvalidArgumentException If load file has been saved on different host than localhost.
"
      end

      operation 414338 "createEventParser"
	class_operation public return_type class_ref 178562 // LoadFileParserInterface
	nparams 1
	  param inout name "loadFile" type class_ref 178434 // LoadFile
	nexceptions 2
	  explicit_exception "FileNotFoundException"
	  exception class_ref 161922 // InvalidArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}< LoadMonitorEvent > ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Creates new parser for the load file which contains load monitor events. Note that this 
parser has to be created on the same computer as detailed mode file.

@param loadFile Handle to the load file to open. This handle has to originate from the same
       computer on which this method is called.

@return Parser for the requested load file. See {@link LoadFileParserInterface} for more
        details about how to parse load files.

@throws FileNotFoundException If load file has not been found.
@throws InvalidArgumentException If load file has been saved on different host than localhost.
"
      end

      operation 414466 "getContextId"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return Id of the context in which task that requested detailed mode has been running.
"
      end

      operation 414594 "getHostName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return Canonical name of the host on which task that requested detailed mode has been running.
"
      end

      operation 414722 "getTaskId"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return Id of the task that requested detailed mode.
"
      end
    end

    class 178562 "LoadFileParserInterface"
      visibility public stereotype "interface"
      nformals 2
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Interface for the load file parser. This interface provides only read-only access to the load files.

@param <T> Type of the nodes in the file.

@author Branislav Repcek
"
      operation 414850 "getNext"
	public explicit_return_type "T"
	nparams 0
	nexceptions 3
	  exception class_ref 164226 // InputParseException
	  explicit_exception "IOException"
	  exception class_ref 164738 // IllegalOperationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get next node from the file.

@return Node read from the file.
 
@throws InputParseException If an error occurred while parsing node's data.
@throws IOException If an error occurred while reading data from disk.
@throws IllegalOperationException If the file has been closed.
"
      end

      operation 414978 "getNext"
	public explicit_return_type "List< T >"
	nparams 1
	  param in name "n" explicit_type "int"
	nexceptions 4
	  exception class_ref 164226 // InputParseException
	  explicit_exception "IOException"
	  exception class_ref 164738 // IllegalOperationException
	  exception class_ref 161922 // InvalidArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get multiple nodes from file.

@param n Number of nodes to read from file.
@return List of the nodes read from the file.

@throws InputParseException If an error occurred while parsing nodes' data.
@throws IOException If an error occurred while reading data from disk (e. g. end of file).
@throws IllegalOperationException If the file has been closed.
@throws InvalidArgumentException If n is negative.
"
      end

      operation 415106 "hasNext"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 3
	  exception class_ref 164226 // InputParseException
	  explicit_exception "IOException"
	  exception class_ref 164738 // IllegalOperationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Test if next node is present in the file.

@return <tt>true</tt> if current node is not the last one, <tt>false</tt> otherwise.

@throws InputParseException If an error occurred while parsing node's data.
@throws IOException If an error occurred while reading data from disk.
@throws IllegalOperationException If the file has been closed.
"
      end

      operation 415234 "skip"
	public explicit_return_type "void"
	nparams 1
	  param in name "amount" explicit_type "int"
	nexceptions 4
	  exception class_ref 164226 // InputParseException
	  explicit_exception "IOException"
	  exception class_ref 164738 // IllegalOperationException
	  exception class_ref 161922 // InvalidArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Skip some nodes.

@param amount Number of nodes to skip. If there are not enough nodes in the file, an exception
       is thrown.

@throws InputParseException If an error occurred while parsing node's data.
@throws IOException If an error occurred while reading data from disk.
@throws IllegalOperationException If the file has been closed.
@throws InvalidArgumentException If amount is negative.
"
      end

      operation 415362 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Close the file. Any attempts to read from file will result in IllegalOperationException.

@throws IOException If an IO error occurred while closing the file.
"
      end

      operation 415490 "seek"
	public explicit_return_type "void"
	nparams 1
	  param in name "position" explicit_type "long"
	nexceptions 2
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "IOException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Seek to the given position in the file. Since nodes in file may be of different sizes, great
care has to be taken when seeking to ensure that correct data will be read.

@param position Position in the file to seek to. Measured in bytes since the beginning of 
       the file.
       
@throws IllegalArgumentException If position is negative.
@throws IOException If an IO error occurred.
"
      end

      operation 415618 "getPosition"
	public explicit_return_type "long"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get current position in the file. Position is measured in bytes from the beginning of the
file and denotes place within the file on which next read or write will occur.

@return Position in the file in bytes from the beginning of the file.

@throws IOException If an IO error occurred.
"
      end
    end

    class 178690 "LoadFileWritable"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Handle to the load file. This handle allows writing as well as reading of the file.

@author Branislav Repcek
"
      classrelation 203010 // <generalisation>
	relation 203010 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 203010 // <generalisation>
	  b parent class_ref 178434 // LoadFile
      end

      operation 417538 "LoadFileWritable"
	public explicit_return_type ""
	nparams 3
	  param in name "contextId" explicit_type "String"
	  param in name "taskId" explicit_type "String"
	  param in name "fullPath" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create new instance.

@param contextId Id of the context.
@param taskId Id of the task.
@param fullPath Full path to the load file.
"
      end

      operation 417666 "createSampleWriter"
	class_operation public return_type class_ref 177922 // LoadFileParser
	nparams 1
	  param in name "fileName" explicit_type "String"
	nexceptions 2
	  exception class_ref 161922 // InvalidArgumentException
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}< LoadSample > ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create new writer for the load file which stores samples.

@param fileName Name of the file.

@return Writer for given file. If file does not exist, empty file will be created.

@throws InvalidArgumentException If fileName is invalid or if an error occurred while
        instantiating correct generic.
@throws IOException If an error occurred while creating new file (if fileName does
        no exist).
"
      end

      operation 417794 "createSampleWriter"
	class_operation public return_type class_ref 177922 // LoadFileParser
	nparams 1
	  param inout name "loadFile" type class_ref 178434 // LoadFile
	nexceptions 2
	  exception class_ref 161922 // InvalidArgumentException
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}< LoadSample > ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Creates new writer for the load file which stores load samples.

@param loadFile Handle to the load file to open. If file specified by the handle does not
       exist, new empty file will be created.

@return Writer for the requested load file.

@throws InvalidArgumentException If load file has been saved on different host than localhost.
@throws IOException If an error occurred while creating new file (if fileName does
        no exist).
"
      end

      operation 417922 "createEventWriter"
	class_operation public return_type class_ref 177922 // LoadFileParser
	nparams 1
	  param inout name "loadFile" type class_ref 178434 // LoadFile
	nexceptions 2
	  exception class_ref 161922 // InvalidArgumentException
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}< LoadMonitorEvent > ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Creates new writer for the load file which stores load monitor events.

@param loadFile Handle to the load file to open. If file specified by the handle does not
       exist, new empty file will be created.

@return Writer for the requested load file.

@throws InvalidArgumentException If load file has been saved on different host than localhost.
@throws IOException If an error occurred while creating new file (if fileName does
        no exist).
"
      end

      operation 418050 "createEventWriter"
	class_operation public return_type class_ref 177922 // LoadFileParser
	nparams 1
	  param in name "fileName" explicit_type "String"
	nexceptions 2
	  exception class_ref 161922 // InvalidArgumentException
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}< LoadMonitorEvent > ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create new writer for the load file which stores load monitor events.

@param fileName Name of the file.

@return Writer for given file. If file does not exist, empty file will be created.

@throws InvalidArgumentException If fileName is invalid or if an error occurred while
        instantiating correct generic.
@throws IOException If an error occurred while creating new file (if fileName does
        no exist).
"
      end
    end

    class 178818 "LoadMonitorImplementation"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Implementation of the Load Monitor interface.

@author Branislav Repcek
"
      classrelation 204162 // <generalisation>
	relation 204162 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 204162 // <generalisation>
	  b parent class_ref 130178 // UnicastRemoteObject
      end

      classrelation 204418 // <realization>
	relation 204418 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 204418 // <realization>
	  b parent class_ref 175746 // LoadMonitorInterface
      end

      attribute 223746 "SAMPLE_FILE_EXTENSION"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \".bsample\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Extension of the files with the sample data.

"
      end

      attribute 223874 "LOAD_DATABASE_INDEX_FILE"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"load-database.index\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Name of the load database file.

"
      end

      attribute 224002 "INDEX_FILE_NODE_NAME"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"loadIndex\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Name of the root node of the index file.

"
      end

      attribute 224130 "workingDirectory"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Working directory.

"
      end

      attribute 224258 "libraryDirectory"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Path to the library directory.

"
      end

      attribute 224386 "defaultDetailedInterval"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Sampling interval for detailed mode.

"
      end

      attribute 224514 "currentDetailedInterval"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Current sampling interval in detailed mode.

"
      end

      attribute 224642 "briefInterval"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Sampling interval for brief mode.

"
      end

      classrelation 204546 // mode (<unidirectional association>)
	relation 204546 --->
	  a role_name "mode" private
	    comment "
Current mode.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 204546 // mode (<unidirectional association>)
	  b parent class_ref 178946 // LoadMonitorMode
      end

      attribute 224770 "loadServerHostname"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Name of the host on which Load Server is running.

"
      end

      classrelation 204674 // loadServer (<unidirectional association>)
	relation 204674 --->
	  a role_name "loadServer" private
	    comment "
Load server which will receive all events generated on this host.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 204674 // loadServer (<unidirectional association>)
	  b parent class_ref 162690 // LoadServerInterface
      end

      classrelation 204802 // monitor (<unidirectional association>)
	relation 204802 --->
	  a role_name "monitor" private
	    comment "
Adapter for the native library.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 204802 // monitor (<unidirectional association>)
	  b parent class_ref 179074 // LoadMonitorNative
      end

      attribute 224898 "hostName"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Name of this computer.

"
      end

      attribute 225026 "timer"
	private explicit_type "Timer"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Timer which runs daemon thread.

"
      end

      attribute 225154 "nativeLibrary"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Flag which shows if native library has been successfully loaded.

"
      end

      classrelation 204930 // detailedModeWriter (<unidirectional association>)
	relation 204930 --->
	  a role_name "detailedModeWriter" private
	    comment "
Writer used to serialise detailed mode data to the disk.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}< LoadSample > ${name}${value};
"
	    classrelation_ref 204930 // detailedModeWriter (<unidirectional association>)
	  b parent class_ref 177922 // LoadFileParser
      end

      classrelation 205058 // loadEntries (<unidirectional association>)
	relation 205058 --->
	  stereotype "ConcurrentHashMap"
	  a role_name "loadEntries" private
	    comment "
Map which stores all load files in data directory.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}< ${type}< String, String >, LoadDatabaseEntry > ${name}${value};
"
	    classrelation_ref 205058 // loadEntries (<unidirectional association>)
	  b parent class_ref 140034 // Pair
      end

      classrelation 205186 // eventQueue (<unidirectional association>)
	relation 205186 --->
	  a role_name "eventQueue" private
	    comment "
Event queue.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 205186 // eventQueue (<unidirectional association>)
	  b parent class_ref 176898 // EventQueue
      end

      attribute 225282 "eventCount"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Number of events with samples processed in the detailed mode since last event 
report to the Load Server.

"
      end

      attribute 225410 "briefModeMark"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Number of events with samples that have to be processed in detailed mode before one event is 
sent to the Load Server.

"
      end

      attribute 225538 "reenableBriefMode"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Flag which determines if brief mode will be started again when detailed mode is stopped.

"
      end

      classrelation 205314 // eventDispatcher (<unidirectional association>)
	relation 205314 --->
	  a role_name "eventDispatcher" private
	    comment "
Event dispatcher.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 205314 // eventDispatcher (<unidirectional association>)
	  b parent class_ref 176642 // EventDispatcher
      end

      attribute 225666 "init"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Init OK?

"
      end

      operation 428162 "LoadMonitorImplementation"
	public explicit_return_type ""
	nparams 2
	  param in name "libraryDir" explicit_type "String"
	  param in name "workingDir" explicit_type "String"
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 175234 // LoadMonitorException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create new instance of Load Monitor. Only one instance should run on each host.

@param libraryDir Directory in which libraries are located.
@param workingDir Working directory for Load Monitor. All data will be saved there.

@throws RemoteException If RMI error occurred.
@throws LoadMonitorException If other error occurred during initialisation.
"
      end

      operation 428290 "getBriefInterval"
	public explicit_return_type "long"
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadMonitorInterface#getBriefInterval()
"
      end

      operation 428418 "getDefaultDetailedInterval"
	public explicit_return_type "long"
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadMonitorInterface#getDefaultDetailedInterval()
"
      end

      operation 428546 "getMode"
	public return_type class_ref 178946 // LoadMonitorMode
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadMonitorInterface#getMode()
"
      end

      operation 428674 "setBriefInterval"
	public explicit_return_type "void"
	nparams 1
	  param in name "interval" explicit_type "long"
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 175234 // LoadMonitorException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadMonitorInterface#setBriefInterval(int)
"
      end

      operation 428802 "setDefaultDetailedInterval"
	public explicit_return_type "void"
	nparams 1
	  param in name "interval" explicit_type "long"
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 175234 // LoadMonitorException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadMonitorInterface#setDetailedInterval(int)
"
      end

      operation 428930 "startBriefMode"
	public explicit_return_type "void"
	nparams 0
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 175234 // LoadMonitorException
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadMonitorInterface#startBriefMode()
"
      end

      operation 429058 "stopBriefMode"
	public explicit_return_type "void"
	nparams 0
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadMonitorInterface#stopBriefMode()
"
      end

      operation 429186 "initialize"
	public explicit_return_type "void"
	nparams 4
	  param in name "lsHostName" explicit_type "String"
	  param inout name "loadServer" type class_ref 162690 // LoadServerInterface
	  param in name "defaultDetailedModeInterval" explicit_type "long"
	  param in name "briefModeInterval" explicit_type "long"
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 175234 // LoadMonitorException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadMonitorInterface#setLoadServerHostname(java.lang.String)
"
      end

      operation 429314 "terminate"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadMonitorInterface#terminate()
"
      end

      operation 429442 "clearDetailedModeData"
	public explicit_return_type "void"
	nparams 0
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 164738 // IllegalOperationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadMonitorInterface#clearDetailedModeData()
"
      end

      operation 429570 "clearDetailedModeData"
	public explicit_return_type "void"
	nparams 2
	  param in name "contextId" explicit_type "String"
	  param in name "taskId" explicit_type "String"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 164738 // IllegalOperationException
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 135170 // ValueNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadMonitorInterface#clearDetailedModeData(java.lang.String)
"
      end

      operation 429698 "clearDetailedModeData"
	public explicit_return_type "void"
	nparams 1
	  param in name "contextId" explicit_type "String"
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 164738 // IllegalOperationException
	  exception class_ref 135170 // ValueNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadMonitorInterface#clearDetailedModeData(java.lang.String)
"
      end

      operation 429826 "startDetailedMode"
	public explicit_return_type "void"
	nparams 2
	  param in name "contextId" explicit_type "String"
	  param in name "taskId" explicit_type "String"
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 164738 // IllegalOperationException
	  exception class_ref 175234 // LoadMonitorException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadMonitorInterface#startDetailedMode
"
      end

      operation 429954 "startDetailedMode"
	public explicit_return_type "void"
	nparams 3
	  param in name "contextId" explicit_type "String"
	  param in name "taskId" explicit_type "String"
	  param in name "interval" explicit_type "long"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 164738 // IllegalOperationException
	  exception class_ref 175234 // LoadMonitorException
	  exception class_ref 161922 // InvalidArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadMonitorInterface#startDetailedMode(java.lang.String, java.lang.String, long)
"
      end

      operation 430082 "stopDetailedMode"
	public explicit_return_type "void"
	nparams 0
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 164738 // IllegalOperationException
	  exception class_ref 175234 // LoadMonitorException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadMonitorInterface#stopDetailedMode()
"
      end

      operation 430210 "getDetailedModeLoadData"
	public return_type class_ref 178434 // LoadFile
	nparams 2
	  param in name "contextId" explicit_type "String"
	  param in name "taskId" explicit_type "String"
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 161922 // InvalidArgumentException
	  exception class_ref 135170 // ValueNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadMonitorInterface#getDetailedModeLoadData(java.lang.String, java.lang.String)
"
      end

      operation 430338 "hasDetailedModeData"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "contextId" explicit_type "String"
	  param in name "taskId" explicit_type "String"
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 161922 // InvalidArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
 @see cz.cuni.mff.been.hostmanager.load.LoadMonitorInterface#hasDetailedModeData(java.lang.String, java.lang.String)
"
      end

      operation 430466 "hasNativeSupport"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadMonitorInterface#hasNativeSupport()
"
      end

      operation 430594 "ping"
	public explicit_return_type "long"
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.hostmanager.load.LoadMonitorInterface#ping()
"
      end

      operation 430722 "getHardwareDescription"
	public return_type class_ref 176002 // HardwareDescription
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
@see cz.cuni.mff.been.hostmanager.load.LoadMonitorInterface#getHardwareDescription()
"
      end

      operation 430850 "logError"
	private explicit_return_type "void"
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Write error message to the stdout.

@param message Message to output.
"
      end

      operation 430978 "logInfo"
	private explicit_return_type "void"
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Write info message to the stdout.

@param message Message to output.
"
      end

      operation 431106 "processEvent"
	private explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 175874 // LoadMonitorEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Process event. This method is actually a workhorse of the whole system as it will automatically
decide whether event should be saved or sent to the Load Server based on current settings
and mode detector is operating in.
<br/>
<br/>
Events that contain samples are processed like this:
<ul>
 <li>Brief mode:<br/>
     If Load Monitor has has been successfully initialised by the Load Server, all events will
     be sent to the server. If no valid reference to the Load Server exists, events are thrown
     away.
 </li>
 <li>Detailed mode:<br/>
     All samples are automatically saved to the load file via <tt>detailedModeWriter</tt>.
     If Load Server reference is valid, some events will be sent to the Load Server to 
     simulate brief mode samples (so the Load Server does not think we are down). 
     Which samples are sent to the Load Server depends on the intervals for brief 
     and detailed mode. 
 </li>
</ul>
If event does not contain sample, it is always sent to the Load Server (if valid reference
exists).

@param event Event to process.
"
      end

      operation 431234 "loadDatabaseIndex"
	private explicit_return_type "void"
	nparams 0
	nexceptions 2
	  exception class_ref 175234 // LoadMonitorException
	  exception class_ref 164226 // InputParseException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Parse index file which contains entries for load files that had been previously written
by the Load Monitor. If file does not exist, no entries will be loaded. New file will then
be created when monitor is switched to detailed mode.

@throws LoadMonitorException If index file is directory.
@throws InputParseException If an error occurred when parsing file.
"
      end

      operation 431362 "saveDatabaseIndex"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 164354 // OutputWriteException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Save index of the load database to the file. Index is saved every time it is modified (that is,
every time monitor is switched to the detailed mode).

@throws OutputWriteException If an error occurred while writing data.
"
      end

      operation 431490 "getLoadFile"
	private return_type class_ref 178690 // LoadFileWritable
	nparams 1
	  param inout name "entry" type class_ref 179202 // LoadDatabaseEntry
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get load file corresponding to the given database entry.

@param entry Entry from the database.

@return Load file corresponding to the database entry.
"
      end

      class 179202 "LoadDatabaseEntry"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 205442 // <realization>
	  relation 205442 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 205442 // <realization>
	    b parent class_ref 165122 // XMLSerializableInterface
	end

	attribute 225794 "XML_NODE_NAME"
	  class_attribute const_attribute public explicit_type "String"
	  init_value "=  \"loadEntry\""
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "
Name of the node in the XML file.

"
	end

	attribute 225922 "ATTRIBUTE_CONTEXT_ID"
	  class_attribute const_attribute private explicit_type "String"
	  init_value "=  \"context\""
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "
Name of the attribute with the context id.

"
	end

	attribute 226050 "ATTRIBUTE_TASK_ID"
	  class_attribute const_attribute private explicit_type "String"
	  init_value "=  \"task\""
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "
Name of the attribute with the task id.

"
	end

	attribute 226178 "ATTRIBUTE_FILE_NAME"
	  class_attribute const_attribute private explicit_type "String"
	  init_value "=  \"file\""
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "
Name of the attribute with the file name.

"
	end

	attribute 226306 "contextId"
	  private explicit_type "String"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "
Context id.

"
	end

	attribute 226434 "taskId"
	  private explicit_type "String"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "
Task id.

"
	end

	attribute 226562 "fileName"
	  private explicit_type "String"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "
File name (not full path).

"
	end

	operation 432002 "LoadDatabaseEntry"
	  public explicit_return_type ""
	  nparams 3
	    param in name "contextId" explicit_type "String"
	    param in name "taskId" explicit_type "String"
	    param in name "fileName" explicit_type "String"
	  nexceptions 1
	    exception class_ref 161922 // InvalidArgumentException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
Create new database entry.

@param contextId Id of the context.
@param taskId Id of the task.
@param fileName Name of the file. This has to be relative to the database directory.

@throws InvalidArgumentException If some argument is <tt>null</tt> or empty string.
"
	end

	operation 432130 "LoadDatabaseEntry"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "node" explicit_type "Node"
	  nexceptions 1
	    exception class_ref 164226 // InputParseException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
Create new database entry from the XML file node.

@param node Node to parse.

@throws InputParseException If an error occurred while parsing data.
"
	end

	operation 432258 "getContextId"
	  public explicit_return_type "String"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
@return Context id.
"
	end

	operation 432386 "getFileName"
	  public explicit_return_type "String"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
@return name of the file (not full path!).
"
	end

	operation 432514 "getTaskId"
	  public explicit_return_type "String"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
@return Id of the task.
"
	end

	operation 432642 "exportAsElement"
	  public explicit_return_type "Element"
	  nparams 1
	    param inout name "document" explicit_type "Document"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
@see cz.cuni.mff.been.hostmanager.database.XMLSerializableInterface#exportAsElement(org.w3c.dom.Document)
"
	end

	operation 432770 "getXMLNodeName"
	  public explicit_return_type "String"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
@see cz.cuni.mff.been.hostmanager.database.XMLSerializableInterface#getXMLNodeName()
"
	end

	operation 432898 "parseXMLNode"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "node" explicit_type "Node"
	  nexceptions 1
	    exception class_ref 164226 // InputParseException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
@see cz.cuni.mff.been.hostmanager.database.XMLSerializableInterface#parseXMLNode(org.w3c.dom.Node)
"
	end
      end

      operation 431618 "generateFileName"
	private explicit_return_type "String"
	nparams 2
	  param in name "contextId" explicit_type "String"
	  param in name "taskId" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Generate file name from the name of the working directory and IDs of context and task.
If such file already exists, new filename is generated automatically (1000 different
names are tested).

@param contextId Id of the context.
@param taskId Id of the task.

@return Name of the file (not full path!).
"
      end

      operation 431746 "makeFSFriendly"
	private explicit_return_type "String"
	nparams 1
	  param in name "s" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Replace all non-alphanumeric characters with the underscore.

@param s Input string.

@return String with all non-alphanumeric characters replaced with the underscore.
"
      end

      operation 431874 "getFullFileName"
	private explicit_return_type "String"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get full path to the file.

@param name Name of the file.

@return Absolute path to the file in the working directory.
"
      end

      class 179330 "MonitorThread"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 205570 // <generalisation>
	  relation 205570 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 205570 // <generalisation>
	    b parent class_ref 163714 // TimerTask
	end

	operation 433026 "run"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "
@see java.util.TimerTask#run()
"
	end
      end
    end

    class 179074 "LoadMonitorNative"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Adapter for the native library for Load Monitor.

@author Branislav Repcek
"
      operation 433154 "nativeInitialize"
	private explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Initialise native library.

@return <tt>true</tt> on success, <tt>false</tt> otherwise.
"
      end

      operation 433282 "nativeTerminate"
	private explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Terminate native library.

@return <tt>true</tt> on success, <tt>false</tt> otherwise.
"
      end

      operation 433410 "nativeGetSample"
	private return_type class_ref 176130 // LoadSample
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get sample.

@return Sample containing load data.
"
      end

      operation 433538 "nativeGetHardwareDescription"
	private return_type class_ref 176002 // HardwareDescription
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return Description of the hardware.
"
      end

      attribute 226690 "usingNative"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Flag which determines if native library is used.

"
      end

      operation 433666 "LoadMonitorNative"
	public explicit_return_type ""
	nparams 1
	  param in name "libraryPath" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create Load Monitor Native Library Adapter.

@param libraryPath Full path to the directory which contains Load Monitor library.
"
      end

      operation 433794 "initialize"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Initialise native library.

@return <tt>true</tt> on success, <tt>false</tt> otherwise.
"
      end

      operation 433922 "terminate"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Terminate native library (this will not unload library from the memory).

@return <tt>true</tt> on success, <tt>false</tt> otherwise.
"
      end

      operation 434050 "getSample"
	public return_type class_ref 176130 // LoadSample
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get load sample.

@return Load Sample.
"
      end

      operation 434178 "getHardwareDescription"
	public return_type class_ref 176002 // HardwareDescription
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return Description of the hardware that is monitor by the native library.
"
      end

      operation 434306 "usingNative"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return <tt>true</tt> is native library initialisation was successful, <tt>false</tt> otherwise.
"
      end

      operation 434434 "logInfo"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "s" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Log info message to the standard output.

@param s Message to log.
"
      end

      operation 434562 "logError"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "s" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Log error message to the error output.

@param s Message to log.
"
      end
    end

    class 219650 "EventFileParser"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
View data stored in an event file. Samples can be output to the text file in nice table format.

@author Branislav Repcek
"
      operation 856706 "EventFileParser"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 364162 "FULL_TABLE_OUTPUT_FILE"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Name of the output file into which table containing all samples will be written,
If name is set to <tt>null</tt> no output file will be created.

private static final String FULL_TABLE_OUTPUT_FILE = \"F:\\\\table.txt\";
"
      end

      operation 856834 "main"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "String"
	nexceptions 1
	  explicit_exception "Exception"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@param args Command-line argument. First argument has to be name of the file to open.

@throws Exception If an error occured.
"
      end
    end

    class 219778 "LoadMapTest"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Test output and input of the load map files.

@author Branislav Repcek
"
      attribute 364290 "MAP1_FILE"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  System.getProperty(\"java.io.tmpdir\") + \"/map1\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
First test file.

"
      end

      attribute 364418 "MAP2_FILE"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  System.getProperty(\"java.io.tmpdir\") + \"/map2\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Second test file.

"
      end

      classrelation 294914 // entries (<unidirectional association>)
	relation 294914 --->
	  a role_name "entries" multiplicity "[]" private
	    comment "
Entries that are written to the file.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 294914 // entries (<unidirectional association>)
	  b parent class_ref 178178 // FileEntry
      end

      operation 856962 "setUp"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Before
"
	
	
	
      end

      operation 857090 "testDeleteFilesStart"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Remove test files if for some reason they are still in temp.

@throws Exception If an error occured.
"
      end

      operation 857218 "testWriteAllSingle"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Write allsamples one-by-one.
 
@throws Exception If an error occured.
"
      end

      operation 857346 "testReadAllSingle"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Read all sample one-by-one and compare them with original values.

@throws Exception If an error occured.
"
      end

      operation 857474 "testWriteAllMulti"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Write all entries at once.

@throws Exception If an error occured.
"
      end

      operation 857602 "testReadAllMulti"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Read all samples at once.

@throws Exception If an error occured.
"
      end

      operation 857730 "testReadAllSeek"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Read some entries and compare with original data.

@throws Exception If an error occured.
"
      end

      operation 857858 "testDeleteFilesEnd"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Not a test, just deletes files that have been created.

@throws Exception If an error occured.
"
      end
    end

    class 219906 "LoadMonitorNativeTest"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Simple test for the interface to the Load Monitor native library. This will write cool table
with the sample data.

@author Branislav Repcek
"
      operation 857986 "LoadMonitorNativeTest"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 364546 "SAMPLING_INTERVAL"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  1000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Sampling interval (delay between two samplings) in milliseconds. 

"
      end

      attribute 364674 "TOTAL_SAMPLES"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  100"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Number of samples to take.

"
      end

      operation 858114 "alignCenter"
	class_operation private explicit_return_type "String"
	nparams 2
	  param inout name "value" explicit_type "T"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}< T > ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Align value in the string.

@param <T> Type of the value.

@param value Value to convert to the string.
@param length target length of the result.

@return String which has given length (at least) and value is aligned in the center.
"
      end

      operation 858242 "main"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@param args Command-line arguments. Ignored.
"
      end
    end

    class 220034 "LoadSerializationTest"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Test serialization routines for LoadSample and LoadMonitorEvent types.

@author Branislav Repcek
"
      attribute 364802 "SAMPLES_TEST_FILE_NAME"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  System.getenv( \"BEEN_HOME\" ) + \"/data/samples.test\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Name of the test file for sample serialization.

"
      end

      attribute 364930 "EVENTS_TEST_FILE_NAME"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  System.getenv( \"BEEN_HOME\" ) + \"/data/events.test\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Name of the test file for event serialization.

"
      end

      classrelation 295042 // samples (<unidirectional association>)
	relation 295042 --->
	  a role_name "samples" multiplicity "[]" private
	    comment "
Samples used in tests.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 295042 // samples (<unidirectional association>)
	  b parent class_ref 176130 // LoadSample
      end

      classrelation 295170 // events (<unidirectional association>)
	relation 295170 --->
	  a role_name "events" multiplicity "[]" private
	    comment "
Events used in tests.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 295170 // events (<unidirectional association>)
	  b parent class_ref 175874 // LoadMonitorEvent
      end

      classrelation 295298 // descriptions (<unidirectional association>)
	relation 295298 --->
	  a role_name "descriptions" multiplicity "[]" private
	    comment "
Hardware descriptions.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 295298 // descriptions (<unidirectional association>)
	  b parent class_ref 176002 // HardwareDescription
      end

      attribute 365058 "sampleSkip"
	class_attribute private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 858370 "setUp"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Before
"
	
	
	
	comment "
Initialize all samples and events.
"
      end

      operation 858498 "writeAndRead"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "s" type class_ref 176130 // LoadSample
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Write sample and read it back. Then compare both samples.

@param s Sample to write and read back.

@return <tt>true</tt> on success(read and write succeeded and samples are same),
        <tt>false</tt> otherwise.
"
      end

      operation 858626 "writeAndReadEvent"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "event" type class_ref 175874 // LoadMonitorEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Write event and read it back. Then compare both events. 

@param event Event to write and read back.

@return <tt>true</tt> on success (read and write succeeded and events are same), 
        <tt>false</tt> otherwise.
"
      end

      operation 858754 "writeAndReadHW"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "hardware" type class_ref 176002 // HardwareDescription
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Write hardware description and read it back. Then compare both values.

@param hardware Description to write and read.

@return <tt>true</tt> on success (read and write succeeded and descriptions are same), 
        <tt>false</tt> otherwise.
"
      end

      operation 858882 "test0"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Test 1st sample (index 0).
"
      end

      operation 859010 "test1"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Test 2nd sample (index 1).
"
      end

      operation 859138 "test2"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Test 3rd sample (index 2).
"
      end

      operation 859266 "test3"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Test 4th sample (index 3).
"
      end

      operation 859394 "test4"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Test 5th sample (index 4).
"
      end

      operation 859522 "test5"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Test 6th sample (index 5).
"
      end

      operation 859650 "test6"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Test 7th sample (index 6).
"
      end

      operation 859778 "test7"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Test 8th sample (index 7).
"
      end

      operation 859906 "testE0"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Test 1st event (index 0).
"
      end

      operation 860034 "testE1"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Test 2nd event (index 1).
"
      end

      operation 860162 "testE2"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Test 3rd event (index 2).
"
      end

      operation 860290 "testE3"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Test 4th event (index 3).
"
      end

      operation 860418 "testE4"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Test 5th event (index 4).
"
      end

      operation 860546 "testE5"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Test 6th event (index 5).
"
      end

      operation 860674 "testH0"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Test 1st hardware description (index 0).
"
      end

      operation 860802 "testH1"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Test 2nd hardware description (index 1).
"
      end

      operation 860930 "testH2"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Test 3rd hardware description (index 2).
"
      end

      operation 861058 "testH3"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Test 4th hardware description (index 3).
"
      end

      operation 861186 "testSamplesMulti"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Write all samples and read them back and compare. This tests if resulting file does not have
any \"holes\".
"
      end

      operation 861314 "testEventsMulti"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Write all events and read them back and compare. This tests if resulting file does not have
any \"holes\".
"
      end

      operation 861442 "testParserSampleSequentialAppend"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Write sample to the file using LoadFileParser.

@throws Exception If an error occured.
"
      end

      operation 861570 "testParserSampleSequentialRead"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Test sequential reads of LoadSamples with the LoadFileParser.

@throws Exception If an error occured.
"
      end

      operation 861698 "testParserSampleSkipAndRead"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Test if skip method in LoadFileParser works correctly.

@throws Exception If an error occured.
"
      end

      operation 861826 "testParserSampleSeekAndRead"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Test file seeking.

@throws Exception If an error occured.
"
      end

      operation 861954 "testParserEventSequentialAppend"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Write events to the file using LoadFileParser.

@throws Exception If an error occured.
"
      end

      operation 862082 "testParserEventSequentialRead"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Test sequential reads of events from the file.

@throws Exception If an error occured.
"
      end

      operation 862210 "testParserEventSkipAndRead"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
	comment "
Test if skip works correctly for events.

@throws Exception If an error occured.
"
      end
    end

    class 220162 "StatsTest"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Output some statistics about the computer.

@author Branislav Repcek
"
      operation 862338 "StatsTest"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 365186 "eventCounter"
	class_attribute private explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Event counter.

"
      end

      operation 862466 "printEvent"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "event" type class_ref 175874 // LoadMonitorEvent
	  param inout name "shortFormat" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unused\")
"
	
	
	
	comment "
Write event to the stdout.

@param event Event to write.
@param shortFormat If set to <tt>false</tt> all properties of the event will be output 
       (including sample and hw description data if present). If set to <tt>false</tt> only
       short description of the event will be output. 
"
      end

      operation 862594 "printSample"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "sample" type class_ref 176130 // LoadSample
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Write sample to te stdout.

@param sample Sample to write out.
"
      end

      operation 862722 "printHwDesc"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "desc" type class_ref 176002 // HardwareDescription
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Write hw description to the output.

@param desc Hardware description to output.
"
      end

      operation 862850 "printStats"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "stats" type class_ref 177666 // ValueStatistics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Output statistical data to the stdout.
 
@param stats Data to write out.
"
      end

      operation 862978 "main"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "String"
	nexceptions 1
	  explicit_exception "Exception"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@param args Command-line arguments.Ignored.

@throws Exception If an error occured.
"
      end
    end

    class 220290 "Util"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Few utility methods for nicer tables.

@author Branislav Repcek
"
      operation 863106 "alignLeft"
	class_operation public explicit_return_type "String"
	nparams 2
	  param inout name "x" explicit_type "T"
	  param in name "w" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}< T > ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Align value left in column of specified width.

@param <T> Type of value to align.

@param x Value that will be converted to string and aligned.
@param w Width of the column.

@return String with left aligned value. Spaces are appended.
"
      end

      operation 863234 "alignRight"
	class_operation public explicit_return_type "String"
	nparams 2
	  param inout name "x" explicit_type "T"
	  param in name "w" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}< T > ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Align value right in column of specified width.

@param <T> Type of value to align.

@param x Value that will be converted to string and aligned.
@param w Width of the column.

@return String with right aligned value. Spaces are prepended.
"
      end

      operation 863362 "alignCenter"
	class_operation public explicit_return_type "String"
	nparams 2
	  param inout name "x" explicit_type "T"
	  param in name "w" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}< T > ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Center value in column of specified width.

@param <T> Type of value to align.

@param x Value that will be converted to string and aligned.
@param w Width of the column.

@return String with centered value. Spaces are added.
"
      end

      operation 863490 "fill"
	class_operation public explicit_return_type "String"
	nparams 1
	  param in name "w" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create string containing only spaces with given length.

@param w Number of spaces in string.

@return String with given length containing only spaces.
"
      end

      operation 863618 "fill"
	class_operation public explicit_return_type "String"
	nparams 2
	  param in name "w" explicit_type "int"
	  param in name "s" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Create string containing multiple copies of another string.

@param w Number of copies.
@param s String which is copied.

@return String containing multiple copies of <tt>s</tt>
"
      end

      operation 863746 "join"
	class_operation public explicit_return_type "String"
	nparams 3
	  param in name "arr" explicit_type "short"
	  param in name "sep" explicit_type "String"
	  param in name "cw" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Convert values in array to string with given column width and join results into a string with
different values separated by specified separator string,

@param arr Array with values.
@param sep Separator string.
@param cw Column width.

@return String with right aligned values separated with given separator.
"
      end

      operation 863874 "join"
	class_operation public explicit_return_type "String"
	nparams 3
	  param in name "arr" explicit_type "int"
	  param in name "sep" explicit_type "String"
	  param in name "cw" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Convert values in array to string with given column width and join results into a string with
different values separated by specified separator string,

@param arr Array with values.
@param sep Separator string.
@param cw Column width.

@return String with right aligned values separated with given separator.
"
      end

      operation 864002 "join"
	class_operation public explicit_return_type "String"
	nparams 3
	  param in name "arr" explicit_type "long"
	  param in name "sep" explicit_type "String"
	  param in name "cw" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Convert values in array to string with given column width and join results into a string with
different values separated by specified separator string,

@param arr Array with values.
@param sep Separator string.
@param cw Column width.

@return String with right aligned values separated with given separator.
"
      end

      operation 864130 "Util"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Empty ctor so checkstyle does not whine at us.
"
      end
    end
  end

  deploymentview 130306 "load"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 157954 "ActivityMonitor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.rmi.RemoteException;
import java.util.Iterator;
import java.util.Timer;
import java.util.TimerTask;
import cz.cuni.mff.been.common.id.OID;
import cz.cuni.mff.been.hostmanager.HostManagerApplicationData;
import cz.cuni.mff.been.hostmanager.InvalidArgumentException;
import cz.cuni.mff.been.hostmanager.ValueNotFoundException;
${definition}"
      associated_classes
	class_ref 174850 // ActivityMonitor
      end
    end

    artifact 158082 "ActivityMonitorCache"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Iterator;
import java.util.concurrent.ConcurrentHashMap;
import cz.cuni.mff.been.hostmanager.InvalidArgumentException;
import cz.cuni.mff.been.hostmanager.ValueNotFoundException;
import cz.cuni.mff.been.hostmanager.util.MiscUtils;
${definition}"
      associated_classes
	class_ref 175106 // ActivityMonitorCache
      end
    end

    artifact 158210 "LoadMonitorEventListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import cz.cuni.mff.been.hostmanager.InvalidArgumentException;
${definition}"
      associated_classes
	class_ref 176258 // LoadMonitorEventListener
      end
    end

    artifact 158338 "ActivityMonitorListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Date;
import cz.cuni.mff.been.hostmanager.HostManagerApplicationData;
import cz.cuni.mff.been.hostmanager.HostManagerLogger;
import cz.cuni.mff.been.hostmanager.util.MiscUtils;
${definition}"
      associated_classes
	class_ref 174978 // ActivityMonitorListener
      end
    end

    artifact 158466 "ByteBufferSerializableInterface"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.nio.ByteBuffer;
import cz.cuni.mff.been.hostmanager.InputParseException;
import cz.cuni.mff.been.hostmanager.OutputWriteException;
${definition}"
      associated_classes
	class_ref 176514 // ByteBufferSerializableInterface
      end
    end

    artifact 158594 "EventDispatcher"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.rmi.RemoteException;
import java.util.LinkedList;
${definition}"
      associated_classes
	class_ref 176642 // EventDispatcher
      end
    end

    artifact 158722 "EventQueue"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Collection;
import java.util.LinkedList;
${definition}"
      associated_classes
	class_ref 176898 // EventQueue
      end
    end

    artifact 158850 "EventReceiver"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.LinkedList;
import java.util.concurrent.ConcurrentMap;
import cz.cuni.mff.been.common.id.OID;
import cz.cuni.mff.been.hostmanager.HostManagerLogger;
${definition}"
      associated_classes
	class_ref 177026 // EventReceiver
      end
    end

    artifact 158978 "EventStorageListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import cz.cuni.mff.been.hostmanager.HostManagerApplicationData;
import cz.cuni.mff.been.hostmanager.HostManagerException;
import cz.cuni.mff.been.hostmanager.HostManagerLogger;
${definition}"
      associated_classes
	class_ref 177282 // EventStorageListener
      end
    end

    artifact 159106 "HardwareDescription"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.util.Date;
import cz.cuni.mff.been.hostmanager.InputParseException;
import cz.cuni.mff.been.hostmanager.OutputWriteException;
import cz.cuni.mff.been.hostmanager.util.TimeUtils;
${definition}"
      associated_classes
	class_ref 176002 // HardwareDescription
      end
    end

    artifact 159234 "HostDataStatisticianInterface"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.rmi.Remote;
import java.rmi.RemoteException;
import java.util.Date;
import java.util.List;
import cz.cuni.mff.been.common.Pair;
import cz.cuni.mff.been.hostmanager.IllegalOperationException;
import cz.cuni.mff.been.hostmanager.InputParseException;
import cz.cuni.mff.been.hostmanager.InvalidArgumentException;
import cz.cuni.mff.been.hostmanager.ValueNotFoundException;
${definition}"
      associated_classes
	class_ref 177538 // HostDataStatisticianInterface
      end
    end

    artifact 159362 "HostDataStatistician"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.List;
import cz.cuni.mff.been.common.Pair;
import cz.cuni.mff.been.hostmanager.IllegalOperationException;
import cz.cuni.mff.been.hostmanager.InputParseException;
import cz.cuni.mff.been.hostmanager.InvalidArgumentException;
import cz.cuni.mff.been.hostmanager.ValueNotFoundException;
import cz.cuni.mff.been.hostmanager.util.MiscUtils;
import cz.cuni.mff.been.hostmanager.util.TimeUtils;
${definition}"
      associated_classes
	class_ref 177410 // HostDataStatistician
      end
    end

    artifact 159490 "HostStatus"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 175362 // HostStatus
      end
    end

    artifact 159618 "LoadFile"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.Serializable;
import cz.cuni.mff.been.hostmanager.InvalidArgumentException;
import cz.cuni.mff.been.hostmanager.util.MiscUtils;
${definition}"
      associated_classes
	class_ref 178434 // LoadFile
      end
    end

    artifact 159746 "LoadFileParserInterface"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.util.List;
import cz.cuni.mff.been.hostmanager.IllegalOperationException;
import cz.cuni.mff.been.hostmanager.InputParseException;
import cz.cuni.mff.been.hostmanager.InvalidArgumentException;
${definition}"
      associated_classes
	class_ref 178562 // LoadFileParserInterface
      end
    end

    artifact 159874 "LoadFileParser"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.channels.FileChannel;
import java.util.ArrayList;
import java.util.List;
import cz.cuni.mff.been.hostmanager.IllegalOperationException;
import cz.cuni.mff.been.hostmanager.InputParseException;
import cz.cuni.mff.been.hostmanager.InvalidArgumentException;
import cz.cuni.mff.been.hostmanager.OutputWriteException;
import cz.cuni.mff.been.hostmanager.util.MiscUtils;
${definition}"
      associated_classes
	class_ref 177922 // LoadFileParser
      end
    end

    artifact 160002 "LoadFileWritable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import cz.cuni.mff.been.hostmanager.InvalidArgumentException;
import cz.cuni.mff.been.hostmanager.util.MiscUtils;
${definition}"
      associated_classes
	class_ref 178690 // LoadFileWritable
      end
    end

    artifact 160130 "LoadMapFile"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.channels.FileChannel;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;
import cz.cuni.mff.been.hostmanager.InputParseException;
import cz.cuni.mff.been.hostmanager.InvalidArgumentException;
import cz.cuni.mff.been.hostmanager.OutputWriteException;
import cz.cuni.mff.been.hostmanager.util.MiscUtils;
${definition}"
      associated_classes
	class_ref 178050 // LoadMapFile
      end
    end

    artifact 160258 "LoadMonitorEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.util.Date;
import cz.cuni.mff.been.hostmanager.InputParseException;
import cz.cuni.mff.been.hostmanager.InvalidArgumentException;
import cz.cuni.mff.been.hostmanager.OutputWriteException;
import cz.cuni.mff.been.hostmanager.util.TimeUtils;
${definition}"
      associated_classes
	class_ref 175874 // LoadMonitorEvent
      end
    end

    artifact 160386 "LoadMonitorEventFilter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.Collection;
import java.util.HashSet;
import java.util.Set;
import java.util.TreeSet;
${definition}"
      associated_classes
	class_ref 176386 // LoadMonitorEventFilter
      end
    end

    artifact 160514 "LoadMonitorException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import cz.cuni.mff.been.hostmanager.HostManagerException;
${definition}"
      associated_classes
	class_ref 175234 // LoadMonitorException
      end
    end

    artifact 160642 "LoadMonitorInterface"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.rmi.Remote;
import java.rmi.RemoteException;
import cz.cuni.mff.been.hostmanager.IllegalOperationException;
import cz.cuni.mff.been.hostmanager.InvalidArgumentException;
import cz.cuni.mff.been.hostmanager.ValueNotFoundException;
${definition}"
      associated_classes
	class_ref 175746 // LoadMonitorInterface
      end
    end

    artifact 160770 "LoadMonitorImplementation"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.IOException;
import java.net.UnknownHostException;
import java.rmi.Naming;
import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Timer;
import java.util.TimerTask;
import java.util.concurrent.ConcurrentHashMap;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import cz.cuni.mff.been.common.Pair;
import cz.cuni.mff.been.hostmanager.HostManagerException;
import cz.cuni.mff.been.hostmanager.HostManagerOptionsInterface;
import cz.cuni.mff.been.hostmanager.IllegalOperationException;
import cz.cuni.mff.been.hostmanager.InputParseException;
import cz.cuni.mff.been.hostmanager.InvalidArgumentException;
import cz.cuni.mff.been.hostmanager.OutputWriteException;
import cz.cuni.mff.been.hostmanager.ValueNotFoundException;
import cz.cuni.mff.been.hostmanager.database.XMLSerializableInterface;
import cz.cuni.mff.been.hostmanager.util.MiscUtils;
import cz.cuni.mff.been.hostmanager.util.TimeUtils;
import cz.cuni.mff.been.hostmanager.util.XMLHelper;
${definition}"
      associated_classes
	class_ref 178818 // LoadMonitorImplementation
      end
    end

    artifact 160898 "LoadMonitorNative"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import cz.cuni.mff.been.hostmanager.util.TimeUtils;
${definition}"
      associated_classes
	class_ref 179074 // LoadMonitorNative
      end
    end

    artifact 161026 "LoadSample"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.util.Arrays;
import java.util.Date;
import cz.cuni.mff.been.hostmanager.InputParseException;
import cz.cuni.mff.been.hostmanager.InvalidArgumentException;
import cz.cuni.mff.been.hostmanager.OutputWriteException;
import cz.cuni.mff.been.hostmanager.util.MiscUtils;
import cz.cuni.mff.been.hostmanager.util.TimeUtils;
${definition}"
      associated_classes
	class_ref 176130 // LoadSample
      end
    end

    artifact 161154 "LoadServerInterface"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.net.UnknownHostException;
import java.rmi.Remote;
import java.rmi.RemoteException;
import java.util.Collection;
import java.util.Map;
import cz.cuni.mff.been.common.id.OID;
import cz.cuni.mff.been.hostmanager.HostDatabaseException;
import cz.cuni.mff.been.hostmanager.HostManagerOptionsInterface;
import cz.cuni.mff.been.hostmanager.HostManagerService;
import cz.cuni.mff.been.hostmanager.InvalidArgumentException;
import cz.cuni.mff.been.hostmanager.ValueNotFoundException;
${definition}"
      associated_classes
	class_ref 162690 // LoadServerInterface
      end
    end

    artifact 161282 "LoadServerImplementation"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.net.UnknownHostException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;
import cz.cuni.mff.been.common.id.OID;
import cz.cuni.mff.been.hostmanager.HostDatabaseException;
import cz.cuni.mff.been.hostmanager.HostManagerApplicationData;
import cz.cuni.mff.been.hostmanager.HostManagerException;
import cz.cuni.mff.been.hostmanager.HostManagerLogger;
import cz.cuni.mff.been.hostmanager.HostManagerOptionsInterface;
import cz.cuni.mff.been.hostmanager.InvalidArgumentException;
import cz.cuni.mff.been.hostmanager.ValueNotFoundException;
import cz.cuni.mff.been.hostmanager.database.HostDatabaseEngine;
import cz.cuni.mff.been.hostmanager.util.MiscUtils;
${definition}"
      associated_classes
	class_ref 160770 // LoadServerImplementation
      end
    end

    artifact 161410 "ValueStatistics"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 177666 // ValueStatistics
      end
    end

    artifact 197890 "EventFileParser"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.FileWriter;
import cz.cuni.mff.been.hostmanager.util.MiscUtils;
${definition}"
      associated_classes
	class_ref 219650 // EventFileParser
      end
    end

    artifact 198018 "LoadMapTest"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.List;
import org.junit.Before;
import org.junit.Test;
import cz.cuni.mff.been.hostmanager.util.MiscUtils;
import static org.junit.Assert.assertEquals;
${definition}"
      associated_classes
	class_ref 219778 // LoadMapTest
      end
    end

    artifact 198146 "LoadMonitorNativeTest"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.text.SimpleDateFormat;
import cz.cuni.mff.been.hostmanager.util.TimeUtils;
${definition}"
      associated_classes
	class_ref 219906 // LoadMonitorNativeTest
      end
    end

    artifact 198274 "LoadSerializationTest"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.nio.ByteBuffer;
import java.util.Date;
import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;
${definition}"
      associated_classes
	class_ref 220034 // LoadSerializationTest
      end
    end

    artifact 198402 "StatsTest"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.rmi.Naming;
import java.util.List;
import cz.cuni.mff.been.common.Pair;
import cz.cuni.mff.been.hostmanager.util.MiscUtils;
${definition}"
      associated_classes
	class_ref 220162 // StatsTest
      end
    end

    artifact 198530 "Util"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 220290 // Util
      end
    end
  end
end
