class StringTokenizer
!!!249218.java!!!	StringTokenizer(in delimiters : String)
		
		if (delimiters == null) {
			throw new IllegalArgumentException("null delimiters are not allowed in tokenizer.");
		}
		
		if (delimiters.length() == 0) {
			throw new IllegalArgumentException("Empty delimiter string is not allowed in tokenizer.");
		}
		
		this.delimiters = delimiters.toCharArray();
		Arrays.sort(this.delimiters);
		min = this.delimiters[0];
		max = this.delimiters[this.delimiters.length - 1];
!!!249346.java!!!	getDelimiters() : char
		
		return delimiters.clone();
!!!249474.java!!!	tokenize(in input : String) : Token

		return tokenize(input, true);
!!!249602.java!!!	tokenize(in input : String, inout includeDelimiters : boolean) : Token

		LinkedList< Token > tokens = new LinkedList< Token >();
		StringBuilder tokenBuilder = new StringBuilder();
		
		for (int i = 0; i < input.length(); ++i) {
			
			char c = input.charAt(i);
			if ((c >= min) && (c <= max) && (Arrays.binarySearch(delimiters, c) >= 0)) {
				if (tokenBuilder.length() > 0) {
					tokens.add(new StringToken(tokenBuilder.toString(), i - tokenBuilder.length()));
					tokenBuilder.setLength(0);
				}
				
				if (includeDelimiters) {
					tokens.add(new DelimiterToken(c, i));
				}
			} else {
				tokenBuilder.append(c);
			}
		}
		
		if (tokenBuilder.length() > 0) {
			tokens.add(new StringToken(tokenBuilder.toString(), input.length() - tokenBuilder.length()));
		}
		
		return tokens;
