format 59
"gui" // been::src::cz::cuni::mff::been::resultsrepository::gui
  revision 1
  modified_by 2 "Administrator"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "cz/cuni/mff/been/resultsrepository/gui"
  java_package "cz.cuni.mff.been.resultsrepository.gui"
  classview 129538 "gui"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 135554 "CallbackRScripts"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Contain R scripts called as callbacks after various parts of the experiments
finish.

@author David Majda
"
      classrelation 245634 // <realization>
	relation 245634 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 245634 // <realization>
	  b parent class_ref 148226 // Serializable
      end

      attribute 260610 "completeRunScript"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " R script called after a run completes. 
"
      end

      attribute 260738 "completeBinaryScript"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " R script called after a binary completes. 
"
      end

      attribute 260866 "completeExperimentScript"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " R script called after a experiment completes. 
"
      end

      attribute 260994 "incompleteBinaryScript"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " R script called on the binary level after a run completes. 
"
      end

      attribute 261122 "incompleteExperimentScript"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " R script called on the experiment level after a run completes. 
"
      end

      operation 599170 "getCompleteRunScript"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return R script called after a run completes "
      end

      operation 599298 "getCompleteBinaryScript"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return R script called after a binary completes "
      end

      operation 599426 "getCompleteExperimentScript"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return R script called after a experiment completes "
      end

      operation 599554 "getIncompleteBinaryScript"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return R script called on the binary level after a run completes "
      end

      operation 599682 "getIncompleteExperimentScript"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return R script called on the experiment level after a run completes "
      end

      operation 599810 "CallbackRScripts"
	public explicit_return_type ""
	nparams 5
	  param in name "completeRunScript" explicit_type "String"
	  param in name "completeBinaryScript" explicit_type "String"
	  param in name "completeExperimentScript" explicit_type "String"
	  param in name "incompleteBinaryScript" explicit_type "String"
	  param in name "incompleteExperimentScript" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>CallbackRScripts</code> object.

@param completeRunScript R script called after a run completes
@param completeBinaryScript R script called after a binary completes
@param completeExperimentScript R script called after a experiment
        completes
@param incompleteBinaryScript R script called on the binary level after a
        run completes
@param incompleteExperimentScript R script called on the experiment level
        after a run completes
"
      end
    end

    class 187010 "Entity"
      visibility public 
      nformals 1
      formal name "ID" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Class containing information about entity (analysis, experiment, binary or
run). Used to exchange this information with the web interface.

The class is typed by identifier of the entity.


@param <ID>	ID Type describing entity (AID, EID, BIR or RID)
@author David Majda

"
      classrelation 245890 // <realization>
	relation 245890 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 245890 // <realization>
	  b parent class_ref 148226 // Serializable
      end

      classrelation 246018 // <realization>
	relation 246018 -_-|>
	  a public
	    java "${type}<Entity<ID>>"
	    classrelation_ref 246018 // <realization>
	  b parent class_ref 148098 // Comparable
      end

      attribute 261506 "id"
	private explicit_type "ID"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Entity identifier. 
"
      end

      classrelation 246146 // metadata (<unidirectional association>)
	relation 246146 --->
	  a role_name "metadata" multiplicity "[]" private
	    comment " Entity metadata. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 246146 // metadata (<unidirectional association>)
	  b parent class_ref 191362 // MetadataItem
      end

      attribute 261634 "isDeletable"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Flag determining whether delete is allowed 
"
      end

      classrelation 246274 // statistics (<unidirectional association>)
	relation 246274 --->
	  a role_name "statistics" multiplicity "[]" private
	    comment " Entity statistics. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 246274 // statistics (<unidirectional association>)
	  b parent class_ref 194178 // Statistics
      end

      operation 600322 "getId"
	public explicit_return_type "ID"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return the entity identifier "
      end

      operation 600450 "getMetadata"
	public return_type class_ref 191362 // MetadataItem
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return the entity metadata "
      end

      operation 600578 "getStatistics"
	public return_type class_ref 194178 // Statistics
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return the entity statistics "
      end

      operation 600706 "isDeletable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 600834 "getName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the entity name from the metadata.

@return the entity name
"
      end

      operation 600962 "getComment"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the entity comment from the metadata.

@return the entity comment
"
      end

      operation 601090 "isValid"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the entity validity flag from the metadata.

@return the entity validity flag
"
      end

      operation 601218 "isComplete"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the entity completness flag from the metadata.

@return the entity completness flag
"
      end

      operation 601346 "Entity"
	public explicit_return_type ""
	nparams 4
	  param inout name "id" explicit_type "ID"
	  param inout name "metadata" type class_ref 191362 // MetadataItem
	  param inout name "statistics" type class_ref 194178 // Statistics
	  param inout name "isDeletable" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>Entity</code> object.

@param id entity identifier
@param metadata entity metadata
@param statistics entity statistics
@param isDeletable flag determining whether deletion is allowed
"
      end

      operation 601474 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "anotherEntity" type class_ref 187010 // Entity
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<ID> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Compares this entity with the another entity for order. Returns a negative 
integer, zero, or a positive integer as this entity is less than, equal
to, or greater than the specified ID.
      
@param anotherEntity the <code>Entity&lt;ID&gt;</code> to be compared
@return a negative integer, zero, or a positive integer as this entity is
         less than, equal to, or greater than the specified object
"
      end
    end

    class 187650 "GraphType"
      visibility public stereotype "enum"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 262146 "RESULTS"
	public type class_ref 187650 // GraphType
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Results graphy type

"
      end

      attribute 262274 "LOAD"
	public type class_ref 187650 // GraphType
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Load graph type
"
      end

      operation 602114 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 187778 "GraphInfo"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Class containing information about graph. Used to exchange this information
with the web interface.  

@author David Majda
"
      classrelation 246402 // <realization>
	relation 246402 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 246402 // <realization>
	  b parent class_ref 148226 // Serializable
      end

      attribute 261762 "width"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Graph width. 
"
      end

      attribute 261890 "height"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Graph height. 
"
      end

      attribute 262018 "title"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Graph title. 
"
      end

      operation 601602 "getWidth"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return the graph title "
      end

      operation 601730 "getHeight"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return the graph title "
      end

      operation 601858 "getTitle"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return the graph title "
      end

      operation 601986 "GraphInfo"
	public explicit_return_type ""
	nparams 3
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "title" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>GraphInfo</code> object.

@param width graph width
@param height graph height
@param title graph title
"
      end
    end

    class 188162 "EntityInterface"
      visibility public stereotype "interface"
      nformals 1
      formal name "ID" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Interface encapsulating operations with given entity.

To avoid <code>ResultsRepositoryInterface</code> clutter and code
duplication, each Results Repository entity (analysis, experiment, binary and
run) has its own interface. This interface excapsulates all operations which
can be done with entities. The <code>ResultsRepositoryInterface</code> has
only one method, which gets the interface for analyses (top-level entity).

The interface is typed by the identifier class of the entity which it
encapsulates.

If the concrete implementation of this interface doesn't support some
particular method, it should throw <code>UnsupportedOperationException</code>.
methods which can throw this exceptions are marked as such using
<code>throws</code> statement and in JavaDoc. Described behavior is
instance of the Composite design pattern.

Note the interface encapsulates operation with all entities of given type,
not just one. This is to allow more flexibility and is (maybe?) a bit nicer
as many methods aren't parametrized by concrete entity.

Entities are sent to the web interface using <code>Entity&lt;ID&ht;</code>
class, which is only a lightweight container, not an remote interface. This
is to avoid frequent RMI calls, which has probably better performance
characteristics (not tested, though).

@author David Majda

@param <ID>
           identifier of encapsulated entity

"
      classrelation 220162 // <generalisation>
	relation 220162 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 220162 // <generalisation>
	  b parent class_ref 130818 // Remote
      end

      operation 510722 "getEntity"
	public return_type class_ref 187010 // Entity
	nparams 1
	  param inout name "id" explicit_type "ID"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<ID> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns object with information about given entity.

@param id
           entity identifier
@return object with information about given entity
@throws IllegalArgumentException
            if the entity identified by the entity identifier doesn't
            exist
@throws RemoteException
            if something in RMI goes bad
"
      end

      operation 510850 "setEntityComment"
	public explicit_return_type "void"
	nparams 2
	  param inout name "id" explicit_type "ID"
	  param in name "comment" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets entity comment.

@param id
           entity identifier
@param comment
           entity comment
@throws IllegalArgumentException
            if the entity identified by the entity identifier doesn't
            exist
@throws UnsupportedOperationException
            if this operation isn't supported by encapsulated entity type
@throws RemoteException
            if something in RMI goes bad
"
      end

      operation 510978 "getEntities"
	public return_type class_ref 187010 // Entity
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}<ID>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns list of all entities represented by this interface.

@return list of all entities represented by this interface
@throws RemoteException
            if something in RMI goes bad
"
      end

      operation 511106 "getSubentityInterface"
	public return_type class_ref 188162 // EntityInterface
	nparams 1
	  param inout name "id" explicit_type "ID"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns interface to given subentity.

@param id
           subentity identifier
@return interface to given subentity
@throws IllegalArgumentException
            if the entity identified by the entity identifier doesn't
            exist
@throws UnsupportedOperationException
            if this operation isn't supported by encapsulated entity type
@throws RemoteException
            if something in RMI goes bad
"
      end

      operation 511234 "getExportFormats"
	public return_type class_ref 188290 // DataFormat
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns an array of export formats supported by this entity type.

@return array of export formats supported by this entity type
@throws RemoteException
            if something in RMI goes bad
"
      end

      operation 511362 "beginExport"
	public return_type class_ref 149762 // DownloadHandle
	nparams 4
	  param inout name "ids" explicit_type "ID"
	  param in name "formatId" explicit_type "String"
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 2
	  exception class_ref 187522 // ResultsRepositoryBusyException
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Export entities form the Results Repository. The client must open the
socket on some port before calling this function. Then it calls the
<code>beginExport</code> function.

This function works asynchronously and returns immediately. Before return
it starts a new thread that will send the exported entities to the socket
open on given host and port.

If there is any error when sending the entities' contents, the socket is
closed. It's client's responsibility to check (via the
<code>getExportStatus</code> method whether the data arrived complete
and undamaged.

After the export finishes, client should close the returned handle via
the <code>endExport</code> method.

@param ids
           entity identifiers of the entities to export
@param formatId
           export format identifier
@param ip
           IP address of the machine waiting for receiving the data (not
           necessairly the caller itself)
@param port
           port open for receiving the data
@return entity export handle
@throws IllegalArgumentException
            if some of the the entities identified by the entity
            identifiers doesn't exist
@throws ResultsRepositoryBusyException
@throws RemoteException
            if something in RMI goes bad
"
      end

      operation 511490 "getExportStatus"
	public return_type class_ref 149890 // DownloadStatus
	nparams 1
	  param inout name "handle" type class_ref 149762 // DownloadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the status of the entity export. Result is one of the values
listed in the <code>FileTransferStatus</code> enumeration.

Values <code>INITIALIZING</code> and <code>DOWNLOADING</code> mean
that Results Repository still works on the entity export. Values
<code>SUCCEEDED</code> and <code>ERROR</code> mean that Results
Repository has finished its work (either successfully or unsuccessfully)
and the export handle is ready to be closed by the <code>endExport</code>
method.

@param handle
           entity export handle
@return export status
@throws RemoteException
            when something in RMI goes bad
"
      end

      operation 511618 "endExport"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handle" type class_ref 149762 // DownloadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Closes the export handle. Client should call this method after the export
status returned by <code>getExportStatus</code> has value
<code>SUCCEEDED</code> or <code>ERROR</code>.

@param handle
           entity export handle
@throws RemoteException
            when something in RMI goes bad
"
      end

      operation 511746 "getImportFormats"
	public return_type class_ref 188290 // DataFormat
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns an array of import formats supported by this entity type.

@return array of export formats supported by this entity type
@throws RemoteException
            if something in RMI goes bad
"
      end

      operation 511874 "beginImport"
	public return_type class_ref 134658 // UploadHandle
	nparams 3
	  param in name "formatId" explicit_type "String"
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 2
	  exception class_ref 187522 // ResultsRepositoryBusyException
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Imports entities to the Results Repository. The client must open the
socket on some port before calling this function. Then it calls the
<code>beginImport</code> function.

This function work asynchronously and returns immediately. Before return
it starts a new thread that will receive the imported entities from the
socket open on given host and port.

If there is any error when sending the imported entities, the socket is
closed.

Calling this function doesn't guarantee that imported entities will be
added to the Results Repository - if they arrive damaged or some error
during processing occurs, Results Repository rejects the data. Client has
an opportunity to check (via the <code>getImportStatus</code> method
whether the data arrived complete and undamaged.

After the upload finishes, client should close the returned handle via
the <code>endImport</code> method.

@param formatId
           import format identifier
@param ip
           IP address of the machine prepared for sending the packcage
           (not necessairly the caller itself)
@param port
           port open for sending the package contents
@return entity import handle
@throws ResultsRepositoryBusyException
            if the Results Repository is currently busy - caller should
            retry after a while or abort the import
@throws RemoteException
            if something in RMI goes bad
"
      end

      operation 512002 "getImportStatus"
	public return_type class_ref 134786 // UploadStatus
	nparams 1
	  param inout name "handle" type class_ref 134658 // UploadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the status of the entity import. Result is one of the values
listed in the <code>UploadStatus</code> enumeration.

Values <code>INITIALIZING</code> and <code>UPLOADING</code> mean that
Results Repository still works on the entity upload. Values
<code>ACCEPTED</code>, <code>REJECTED</code> and <code>ERROR</code>
mean that Results Repository has finished its work (either successfully
or unsuccessfully) and the import handle is ready to be closed by the
<code>endImport</code> method.

@param handle
           entity import handle
@return upload status
@throws RemoteException
            when something in RMI goes bad
"
      end

      operation 512130 "endImport"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handle" type class_ref 134658 // UploadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Closes the import handle. Client should call this method after the import
status returned by <code>getImportStatus</code> has value
<code>ACCEPTED</code>, <code>REJECTED</code> or <code>ERROR</code>.

@param handle
           import handle
@throws RemoteException
            when something in RMI goes bad
"
      end

      operation 512258 "deleteEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "id" explicit_type "ID"
	nexceptions 2
	  exception class_ref 187394 // DeleteLockedException
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Deletes an entity.

@param id
           entity identifier of the entity to delete
@throws IllegalArgumentException
            if the entity identified by the entity identifier doesn't
            exist
@throws RemoteException
            if something in RMI goes bad
@throws DeleteLockedException
            if entity is locked (scripts are running in it, results are
            uploading, etc.)
"
      end

      operation 512386 "graphCount"
	public explicit_return_type "int"
	nparams 2
	  param inout name "graphType" type class_ref 187650 // GraphType
	  param inout name "id" explicit_type "ID"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the graph count for given entity.

@param id
           entity identifier
@param graphType
           Determines, whether we ask for results graphs or logs graphs
@return graph count for given entity
@throws IllegalArgumentException
            if the entity identified by the entity identifier doesn't
            exist
@throws UnsupportedOperationException
            if this operation isn't supported by encapsulated entity type
@throws RemoteException
            if something in RMI goes bad
"
      end

      operation 512514 "getGraphInfo"
	public return_type class_ref 187778 // GraphInfo
	nparams 3
	  param inout name "graphType" type class_ref 187650 // GraphType
	  param inout name "id" explicit_type "ID"
	  param in name "index" explicit_type "int"
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 186882 // ResultsRepositoryException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns information about given graph.

@param id
           entity identifier
@param graphType
           Determines, whether we ask for results graphs or logs graphs
@param index
           index of the graph whose title is retrieved
@return graph title
@throws RemoteException
            if something in RMI goes bad
@throws ResultsRepositoryException
            in case of Results Repository error
"
      end

      operation 512642 "beginGraphDownload"
	public return_type class_ref 149762 // DownloadHandle
	nparams 5
	  param inout name "graphType" type class_ref 187650 // GraphType
	  param inout name "id" explicit_type "ID"
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	  param in name "index" explicit_type "int"
	nexceptions 3
	  exception class_ref 187522 // ResultsRepositoryBusyException
	  explicit_exception "RemoteException"
	  exception class_ref 186882 // ResultsRepositoryException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Downloads a graph form the Results Repository. The client must open the
socket on some port before calling this function. Then it calls the
<code>beginGraphDownload</code> function.

This function works asynchronously and returns immediately. Before return
it starts a new thread that will send the graph to the socket open on
given host and port.

If there is any error when sending the graph, the socket is closed. It's
client's responsibility to check (via the
<code>getGraphDownloadStatus</code> method whether the data arrived
complete and undamaged.

After the download finishes, client should close the returned handle via
the <code>endGraphDownload</code> method.

@param graphType
           Determines, whether we ask for results graphs or logs graphs
@param id
           entity identifier of the entity whose graph should be
           downloaded
@param ip
           IP address of the machine waiting for receiving the data (not
           necessairly the caller itself)
@param port
           port open for receiving the data
@param index
           index of the downladed graph
@return graph download handle
@throws UnsupportedOperationException
            if this operation isn't supported by encapsulated entity type
@throws IllegalArgumentException
            if the entity identified by the entity identifier doesn't
            exist
@throws IndexOutOfBoundsException
            if the graph index is invalid
@throws ResultsRepositoryBusyException
            if the Results Repository is currently busy - caller should
            retry after a while or abort the import
@throws RemoteException
            if something in RMI goes bad
@throws ResultsRepositoryException
            in case of Results Repository error
"
      end

      operation 512770 "getGraphDownloadStatus"
	public return_type class_ref 149890 // DownloadStatus
	nparams 1
	  param inout name "handle" type class_ref 149762 // DownloadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the status of the graph download. Result is one of the values
listed in the <code>FileTransferStatus</code> enumeration.

Values <code>INITIALIZING</code> and <code>DOWNLOADING</code> mean
that Results Repository still works on the graph download. Values
<code>SUCCEEDED</code> and <code>ERROR</code> mean that Results
Repository has finished its work (either successfully or unsuccessfully)
and the download handle is ready to be closed by the
<code>endGraphDownload</code> method.

@param handle
           graph download handle
@return download status
@throws RemoteException
            when something in RMI goes bad
"
      end

      operation 512898 "endGraphDownload"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handle" type class_ref 149762 // DownloadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Closes the download handle. Client should call this method after the
download status returned by <code>getGraphDownloadStatus</code> has
value <code>SUCCEEDED</code> or <code>ERROR</code>.

@param handle
           entity export handle
@throws UnsupportedOperationException
            if this operation isn't supported by encapsulated entity type
@throws RemoteException
            when something in RMI goes bad
"
      end

      operation 513026 "beginRawDataDownload"
	public return_type class_ref 149762 // DownloadHandle
	nparams 3
	  param inout name "id" explicit_type "ID"
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 3
	  exception class_ref 187522 // ResultsRepositoryBusyException
	  explicit_exception "RemoteException"
	  exception class_ref 186882 // ResultsRepositoryException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Downloads a raw data form the Results Repository. The client must open
the socket on some port before calling this function. Then it calls the
<code>beginRawDataDownload</code> function.

This function works asynchronously and returns immediately. Before return
it starts a new thread that will send the raw data to the socket open on
given host and port.

If there is any error when sending the raw data, the socket is closed.
It's client's responsibility to check (via the
<code>getRawDataDownloadStatus</code> method whether the data arrived
complete and undamaged.

After the download finishes, client should close the returned handle via
the <code>endRawDataDownload</code> method.

@param id
           entity identifier of the entity whose raw data should be
           downloaded
@param ip
           IP address of the machine waiting for receiving the data (not
           necessairly the caller itself)
@param port
           port open for receiving the data
@return raw data download handle
@throws UnsupportedOperationException
            if this operation isn't supported by encapsulated entity type
@throws IllegalArgumentException
            if the entity identified by the entity identifier doesn't
            exist
@throws ResultsRepositoryBusyException
            if the Results Repository is currently busy - caller should
            retry after a while or abort the download
@throws RemoteException
            if something in RMI goes bad
@throws ResultsRepositoryException
"
      end

      operation 513154 "getRawDataDownloadStatus"
	public return_type class_ref 149890 // DownloadStatus
	nparams 1
	  param inout name "handle" type class_ref 149762 // DownloadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the status of the raw data download. Result is one of the values
listed in the <code>FileTransferStatus</code> enumeration.

Values <code>INITIALIZING</code> and <code>DOWNLOADING</code> mean
that Results Repository still works on the raw data download. Values
<code>SUCCEEDED</code> and <code>ERROR</code> mean that Results
Repository has finished its work (either successfully or unsuccessfully)
and the download handle is ready to be closed by the
<code>endRawDataDownload</code> method.

@param handle
           raw data download handle
@return download status
@throws RemoteException
            when something in RMI goes bad
"
      end

      operation 513282 "endRawDataDownload"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handle" type class_ref 149762 // DownloadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Closes the download handle. Client should call this method after the
download status returned by <code>getRawDataDownloadStatus</code> has
value <code>SUCCEEDED</code> or <code>ERROR</code>.

@param handle
           entity export handle
@throws UnsupportedOperationException
            if this operation isn't supported by encapsulated entity type
@throws RemoteException
            when something in RMI goes bad
"
      end

      operation 513410 "getContext"
	public explicit_return_type "String"
	nparams 1
	  param inout name "id" explicit_type "ID"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Return context in which tasks used to generate data for given entity were
run.

@param id
           entity identifier
@return context in which entity's tasks were run
@throws RemoteException
            when something in RMI goes bad
"
      end

      operation 513538 "getTasks"
	public explicit_return_type "String"
	nparams 1
	  param inout name "id" explicit_type "ID"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Return identifiers of tasks which were run in order to generate data for
given entity.

@param id
           entity identifier
@return identifiers of tasks
@throws RemoteException
"
      end

      operation 513666 "getLogsForTask"
	public return_type class_ref 184194 // LogRecord
	nparams 2
	  param inout name "id" explicit_type "ID"
	  param in name "taskID" explicit_type "String"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 184322 // LogStorageException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "NullPointerException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Gets all log messages produced by a task, which was run in order to
generate data for given entity.

@param id
           entity identifier; cannot be null
@param taskID
           task's ID; cannot be null or an empty string
@return logs of the task
@throws RemoteException
            if something failed during the execution of the remote method
            call
@throws LogStorageException
            if an error occured while retrieving the logs
@throws IllegalArgumentException
            if the the context name or task's ID are empty strings or if
            the task wasn't run
@throws NullPointerException
            if any argument is <code>null</code>
"
      end
    end

    class 188290 "DataFormat"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Class containing information about import/export data formats. Used to
exchange this information with the web interface.  

@author David Majda
"
      classrelation 245762 // <realization>
	relation 245762 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 245762 // <realization>
	  b parent class_ref 148226 // Serializable
      end

      attribute 261250 "id"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Format identifier (i.e. \"text/xml\"). 
"
      end

      attribute 261378 "name"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Format name (i.e. \"XML\"). 
"
      end

      operation 599938 "getId"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return the id "
      end

      operation 600066 "getName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return the name "
      end

      operation 600194 "DataFormat"
	public explicit_return_type ""
	nparams 2
	  param in name "id" explicit_type "String"
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>DataFormat</code> object.

@param id format identifier
@param name format name
"
      end
    end

    class 191362 "MetadataItem"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Class containing information about one item in the entity metadata. Used to
exchange this information with the web interface.  

@author David Majda
"
      classrelation 246530 // <realization>
	relation 246530 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 246530 // <realization>
	  b parent class_ref 148226 // Serializable
      end

      attribute 262402 "NAME_KEY"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"name\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Key represeting entity name. 
"
      end

      attribute 262530 "COMMENT_KEY"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"comment\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Key represeting entity comment. 
"
      end

      attribute 262658 "VALID_KEY"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"valid\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Key represeting entity validity flag. 
"
      end

      attribute 262786 "COMPLETE_KEY"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"complete\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Key represeting entity completness flag. 
"
      end

      attribute 262914 "key"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Metadata key. 
"
      end

      attribute 263042 "value"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Metadata value. 
"
      end

      operation 602242 "getKey"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return the key "
      end

      operation 602370 "getValue"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return the value "
      end

      operation 602498 "MetadataItem"
	public explicit_return_type ""
	nparams 2
	  param in name "key" explicit_type "String"
	  param in name "value" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>MetadataItem</code> object.

@param key metadata key
@param value metadta value
"
      end
    end

    class 192514 "ResultsRepositoryInterface"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
RMI interface to the Results Repository, intended for the GUI (web interface).
 
@author David Majda
"
      classrelation 235394 // <generalisation>
	relation 235394 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 235394 // <generalisation>
	  b parent class_ref 130818 // Remote
      end

      attribute 253186 "RMI_NAME"
	public explicit_type "String"
	init_value "=  \"gui\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " RMI Name for RMI registration 
"
      end

      attribute 253314 "EXPORT_BUFFER_SIZE"
	public explicit_type "int"
	init_value "=  4096"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Size of buffer used when exporting results in the GUI. 
"
      end

      attribute 253442 "IMPORT_BUFFER_SIZE"
	public explicit_type "int"
	init_value "=  4096"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Size of buffer used when importing results in the GUI. 
"
      end

      attribute 253570 "GRAPH_BUFFER_SIZE"
	public explicit_type "int"
	init_value "=  4096"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Size of buffer used when downloading graphs for the GUI. 
"
      end

      attribute 253698 "RAW_DATA_BUFFER_SIZE"
	public explicit_type "int"
	init_value "=  4096"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Size of buffer used when downloading raw data in the GUI. 
"
      end

      attribute 253826 "UPLOAD_BUFFER_SIZE"
	public explicit_type "int"
	init_value "=  4096"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Size of buffer used when uploading R script packages in the GUI. 
"
      end

      attribute 253954 "GRAPH_MIME_TYPE"
	public explicit_type "String"
	init_value "=  \"image/png\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " MIME type of graphs sent to the web interface. 
"
      end

      attribute 254082 "RAW_DATA_MIME_TYPE"
	public explicit_type "String"
	init_value "=  \"application/zip\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " MIME type of thw raw data sent to the web interface. 
"
      end

      operation 564738 "getAnalysisInterface"
	public return_type class_ref 188162 // EntityInterface
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<AID> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the interface for manipulation with analyses.

@return interface for manipulation with analyses
@throws RemoteException when something in RMI goes bad
"
      end

      operation 564866 "beginRScriptPackageUpload"
	public return_type class_ref 134658 // UploadHandle
	nparams 3
	  param in name "name" explicit_type "String"
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Uploads a R script package to the ResultsRepository. The client must open
the socket on some port before calling this function. Then it calls the
<code>beginRScriptPackageUpload</code> function.

This function work asynchronously and returns immediately. Before return it
starts a new thread that will receive the package contents from the socket
open on given host and port.

If there is any error when sending the package contents, the socket
is closed. 

Calling this function doesn't guarantee that this package will be added
to the Results Repository - if it arrives damaged, it is invalid,
or some error during processing occurs, Results Repository rejects
the package. Client has an opportunity to check (via the
<code>getRScriptPackageUploadStatus</code> method whether the package
arrived complete and undamaged.
 
After the upload finishes, client should close the returned handle
via the <code>endRScriptPackageUpload</code> method.  

@param name R script package name (an unique identifier of the package
        in the Results Repository) 
@param ip IP address of the machine prepared for sending the packcage
        (not necessairly the caller itself)
@param port port open for sending the package contents
@return Handle to use when checking status of the upload
@throws IllegalArgumentException if the package with given name is already
         present in Results Repository
@throws RemoteException when something in RMI goes bad
"
      end

      operation 564994 "getRScriptPackageUploadStatus"
	public return_type class_ref 134786 // UploadStatus
	nparams 1
	  param inout name "handle" type class_ref 134658 // UploadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the status of the R script package upload. Result is one
of the values listed in the <code>UploadStatus</code> enumeration.

Values <code>INITIALIZING</code> and <code>UPLOADING</code> mean that
Results Repository still works on the package upload. Values
<code>ACCEPTED</code>, <code>REJECTED</code> and <code>ERROR</code>
mean that Results Repository has finished its work (either successfully
or unsuccessfully) and the download handle is ready to be closed by the
<code>endRScriptsPackageUpload</code> method.   

@param handle package upload handle
@return upload status
@throws RemoteException when something in RMI goes bad
"
      end

      operation 565122 "getRejectedRScriptPackageUploadErrorMessages"
	public explicit_return_type "String"
	nparams 1
	  param inout name "handle" type class_ref 134658 // UploadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the error messages associated with rejected R scripts package
upload. These messages contain human-readable messages describing the
reason of the rejection and are suitable for displaying to the user.

@param handle package upload handle
@return error messages associated with rejected package upload
@throws IllegalStateException if the package upload status is different
         from <code>REJECTED</code>
@throws RemoteException when something in RMI goes bad
"
      end

      operation 565250 "endRScriptPackageUpload"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handle" type class_ref 134658 // UploadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Closes the upload handle. Client should call this method after the upload
status returned by <code>getRScriptPackageUploadStatus</code> has value
<code>ACCEPTED</code>, <code>REJECTED</code> or <code>ERROR</code>.

If the client doesn't close the upload handle, Results Repository will leak
a little amount of memory. However, no other resources than memory
(such as open files, locks...) are associated with the upload handle. 

@param handle upload handle
@throws RemoteException when something in RMI goes bad
"
      end

      operation 565378 "deleteRScriptPackage"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Deletes the R script package form the Results Repository.

@param name name of the deleted R scriptspackage
@return <code>true</code> if the deletion was successfull;
         <code>false</code> otherwise
@throws RemoteException when something in RMI goes bad
"
      end

      operation 565506 "getRScriptPackages"
	public return_type class_ref 192642 // RScriptPackage
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Lists all R script packages installed in the Results Repository.

@return array of <code>RScriptPackages</code> objects describing the
         R script packages installed in the Results Repository, sorted
         alphabetically by package name
@throws RemoteException when something in RMI goes bad
"
      end

      operation 565634 "getAnalysisCallbackRScripts"
	public return_type class_ref 135554 // CallbackRScripts
	nparams 1
	  param inout name "aid" type class_ref 130434 // AID
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Retrieves callback R scripts for given analysis.

@param aid analysis identifier
@return object containing texts of the scripts
@throws IllegalArgumentException if the analysis does not exist
@throws RemoteException when something in RMI goes bad
"
      end

      operation 565762 "setAnalysisCallbackRScripts"
	public explicit_return_type "void"
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "callbackRScripts" type class_ref 135554 // CallbackRScripts
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets callback R scripts for given analysis.

@param aid analysis identifier
@param callbackRScripts object containing texts of the scripts
@throws IllegalArgumentException if the analysis does not exist
@throws RemoteException when something in RMI goes bad
"
      end

      operation 565890 "getRFunctionsHelp"
	public return_type class_ref 192770 // RFunctionHelp
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Retrieves help for all R functions.

@return array of <code>RFunctionHelp</code> objects containing help for
         the functions; sorted alphabetically by function name
@throws RemoteException when something in RMI goes bad
"
      end

      operation 566018 "rScriptingEnabled"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Informs whether R scripts execution is enabled. It can be turned off
in the case something went wrong during the initialization of Results
Repository (R not installed, RNetCDF or SJava libraries not installed, etc.)

@return True if R scripts execution is enabled

@throws RemoteException when something in RMI goes bad
"
      end
    end

    class 192642 "RScriptPackage"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Describes R script package installed in the Results Repository.

@author David Majda
"
      classrelation 246786 // <realization>
	relation 246786 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 246786 // <realization>
	  b parent class_ref 148226 // Serializable
      end

      attribute 263554 "name"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
R script package name. Identifies the package uniquely in the Results
Reposiotry.

"
      end

      attribute 263682 "description"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " R script package description. 
"
      end

      operation 603138 "getName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return R script package name "
      end

      operation 603266 "getDescription"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return R script package description "
      end

      operation 603394 "RScriptPackage"
	public explicit_return_type ""
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "description" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>RScriptPackage</code> object.

@param name R script package name. Identifies the package uniquely in the
        Results Reposiotry
@param description R script package description
"
      end
    end

    class 192770 "RFunctionHelp"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Contains help for one R function.

@author David Majda
"
      classrelation 246658 // <realization>
	relation 246658 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 246658 // <realization>
	  b parent class_ref 148226 // Serializable
      end

      attribute 263170 "name"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Function name. 
"
      end

      attribute 263298 "signature"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Function signature (name with parameter specification). 
"
      end

      attribute 263426 "description"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Function description in XHTML. 
"
      end

      operation 602626 "getName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return function name "
      end

      operation 602754 "getSignature"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return function signature (name with parameter specification) "
      end

      operation 602882 "getDescription"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return function description in HTML "
      end

      operation 603010 "RFunctionHelp"
	public explicit_return_type ""
	nparams 3
	  param in name "name" explicit_type "String"
	  param in name "signature" explicit_type "String"
	  param in name "description" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>RFunctionHelp</code> object.

@param name function name
@param signature function signature (name with parameter specification)
@param description function description in XHTML
"
      end
    end

    class 194178 "Statistics"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Class containing information about one table of entity's statistics,
computed from the results. Used to exchange this information with the web
interface.  

@author Jakub Lehotsky
@author David Majda
"
      classrelation 246914 // <realization>
	relation 246914 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 246914 // <realization>
	  b parent class_ref 148226 // Serializable
      end

      attribute 263810 "label"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Table label. 
"
      end

      attribute 263938 "columnNames"
	private explicit_type "String"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Column names. 
"
      end

      attribute 264066 "columnHighlightFlags"
	private explicit_type "boolean"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Column highlight flags (if the flags is set in particular column, changes
in that column will be highlighted in the web interface). 

"
      end

      attribute 264194 "rowNames"
	private explicit_type "String"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Row names. 
"
      end

      attribute 264322 "values"
	private explicit_type "Double"
	multiplicity "[][]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Cell values. 
"
      end

      operation 603522 "getLabel"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return the table label "
      end

      operation 603650 "getColumnNames"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return the column names "
      end

      operation 603778 "getColumnHighlightFlags"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return the column highlight flags (if the flags is set in particular
column, changes in that column will be highlighted in the web interface)
"
      end

      operation 603906 "getRowNames"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return the row names "
      end

      operation 604034 "getValues"
	public explicit_return_type "Double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return the cell values "
      end

      operation 604162 "Statistics"
	public explicit_return_type ""
	nparams 5
	  param in name "label" explicit_type "String"
	  param in name "columnNames" explicit_type "String"
	  param inout name "columnHighlightFlags" explicit_type "boolean"
	  param in name "rowNames" explicit_type "String"
	  param inout name "values" explicit_type "Double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>Statistics</code> object.

@param label table label
@param columnNames column names
@param columnHighlightFlags column highlight flags (if the flags is set in
        particular column, changes in that column will be highlighted in
        the web interface)
@param rowNames row names
@param values cell values
@throws IllegalArgumentException if the dimensions of the
         <code>values</code> array don't match size of the
         <code>columnNames</code> and <code>rowNames</code> arrays 
"
      end
    end
  end

  deploymentview 131202 "gui"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 166274 "EntityInterface"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.net.InetAddress;
import java.rmi.Remote;
import java.rmi.RemoteException;
import java.util.List;
import cz.cuni.mff.been.common.DownloadHandle;
import cz.cuni.mff.been.common.DownloadStatus;
import cz.cuni.mff.been.common.UploadHandle;
import cz.cuni.mff.been.common.UploadStatus;
import cz.cuni.mff.been.logging.LogRecord;
import cz.cuni.mff.been.logging.LogStorageException;
import cz.cuni.mff.been.resultsrepository.DeleteLockedException;
import cz.cuni.mff.been.resultsrepository.ResultsRepositoryBusyException;
import cz.cuni.mff.been.resultsrepository.ResultsRepositoryException;
${definition}"
      associated_classes
	class_ref 188162 // EntityInterface
      end
    end

    artifact 170626 "ResultsRepositoryInterface"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.net.InetAddress;
import java.rmi.Remote;
import java.rmi.RemoteException;
import cz.cuni.mff.been.common.UploadHandle;
import cz.cuni.mff.been.common.UploadStatus;
import cz.cuni.mff.been.common.id.AID;
${definition}"
      associated_classes
	class_ref 192514 // ResultsRepositoryInterface
      end
    end

    artifact 173314 "CallbackRScripts"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 135554 // CallbackRScripts
      end
    end

    artifact 173442 "DataFormat"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 188290 // DataFormat
      end
    end

    artifact 173570 "Entity"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 187010 // Entity
      end
    end

    artifact 173698 "GraphInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 187778 // GraphInfo
      end
    end

    artifact 173826 "GraphType"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 187650 // GraphType
      end
    end

    artifact 173954 "MetadataItem"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 191362 // MetadataItem
      end
    end

    artifact 174082 "RFunctionHelp"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 192770 // RFunctionHelp
      end
    end

    artifact 174210 "RScriptPackage"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 192642 // RScriptPackage
      end
    end

    artifact 174338 "Statistics"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 194178 // Statistics
      end
    end
  end
end
