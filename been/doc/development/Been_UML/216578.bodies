class GreaterOrEquaConditionlTest
!!!810242.java!!!	testLongWithUnitParse() : void
		assertEquals(
			new GreaterOrEqualCondition<LongWithUnit>("a", new LongWithUnit(42, 'k', "Hz")),
			ParserWrapper.parseString("a >= 42kHz")
		);
!!!810370.java!!!	testLongWithUnitTrue1() : void
		assertTrue(Utils.eval("longProperty >= 41", context));
!!!810498.java!!!	testLongWithUnitTrue2() : void
		assertTrue(Utils.eval("longProperty >= 42", context));
!!!810626.java!!!	testLongWithUnitFalse() : void
		assertFalse(Utils.eval("longProperty >= 43", context));
!!!810754.java!!!	testStringParse() : void
		assertEquals(
			new GreaterOrEqualCondition<String>("a", "42"),
			ParserWrapper.parseString("a >= \"42\"")
		);
!!!810882.java!!!	testStringTrue1() : void
		assertTrue(Utils.eval("stringProperty >= \"41\"", context));
!!!811010.java!!!	testStringTrue2() : void
		assertTrue(Utils.eval("stringProperty >= \"42\"", context));
!!!811138.java!!!	testStringFalse() : void
		assertFalse(Utils.eval("stringProperty >= \"43\"", context));
!!!811266.java!!!	testVersionParse() : void
		assertEquals(
			new GreaterOrEqualCondition<Version>("a", new Version("42")),
			ParserWrapper.parseString("a >= 42.0")
		);
!!!811394.java!!!	testVersionTrue1() : void
		assertTrue(Utils.eval("versionProperty >= 41.0", context));
!!!811522.java!!!	testVersionTrue2() : void
		assertTrue(Utils.eval("versionProperty >= 42.0", context));
!!!811650.java!!!	testVersionFalse() : void
		assertFalse(Utils.eval("versionProperty >= 43.0", context));
!!!811778.java!!!	testDateParse() : void
		Calendar calendar = Calendar.getInstance();
		calendar.setTimeZone(TimeZone.getTimeZone("GMT"));
		calendar.set(2006, 4, 17, 23, 30, 42);
		calendar.setTimeInMillis((calendar.getTimeInMillis() / 1000) * 1000);
		assertEquals(
			new GreaterOrEqualCondition<Date>("dateProperty", calendar.getTime()),
			ParserWrapper.parseString("dateProperty >= 2006-05-17T23:30:42Z")
		);
!!!811906.java!!!	testDateTrue1() : void
		assertTrue(Utils.eval("dateProperty >= 2006-05-17T23:30:41Z", context));
!!!812034.java!!!	testDateTrue2() : void
		assertTrue(Utils.eval("dateProperty >= 2006-05-17T23:30:42Z", context));
!!!812162.java!!!	testDateFalse() : void
		assertFalse(Utils.eval("dateProperty >= 2006-05-17T23:30:43Z", context));
!!!812290.java!!!	testPackageTypeParse() : void
		assertEquals(
			new GreaterOrEqualCondition<PackageType>("a", PackageType.realValueOf("source")),
			ParserWrapper.parseString("a >= source")
		);
!!!812418.java!!!	testPackageTypeFail() : void
		try {
			Utils.eval("packageTypeProperty >= source", context);
			fail();
		} catch (InvalidOperatorException e) {
			/* Eat it. */
		}
!!!812546.java!!!	testToString() : void
		assertEquals(
			"a >= 42",
			ParserWrapper.parseString("a >= 42").toString()
		);
