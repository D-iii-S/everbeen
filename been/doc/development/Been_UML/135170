format 59
"task1" // been::src::cz::cuni::mff::been::task::example::task1
  revision 1
  modified_by 2 "Administrator"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "cz/cuni/mff/been/task/example/task1"
  java_package "cz.cuni.mff.been.task.example.task1"
  classview 133122 "task1"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 199042 "Example1Exception"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
A fatal error occured

@author Jaroslav Urban
"
      classrelation 256514 // <generalisation>
	relation 256514 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 256514 // <generalisation>
	  b parent class_ref 128130 // BeenException
      end

      operation 633858 "Example1Exception"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>AntExampleException</code> object.
"
      end

      operation 633986 "Example1Exception"
	public explicit_return_type ""
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>AntExampleException</code> object
with specified message.

@param message exception message
"
      end

      operation 634114 "Example1Exception"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" explicit_type "Throwable"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>AntExampleException</code> object
with specified cause.

@param cause exception cause
"
      end

      operation 634242 "Example1Exception"
	public explicit_return_type ""
	nparams 2
	  param in name "message" explicit_type "String"
	  param inout name "cause" explicit_type "Throwable"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>AntExampleException</code> object
with specified message and cause.

@param message exception message
@param cause exception cause
"
      end
    end

    class 199170 "Example1Task"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
<p>Example task explaining how to write tasks, use Ant to perform various 
operations and use 3rd party libraries. Ant is usefull for it's
multiplatform implementation of various file operations. For example, 
you may need to customize some source code after downloading it 
from the Software Repository or from the internet, which can be easily done 
with Ant. The task uses Ant to copy a file.
</p>
<p>It also demostrates how to use external libraries (there is a special 
simple hello.jar library) and logging. Logging is demonstrated for a task 
(it's log messages are sent to the log storage) and for a class which is not 
a task (it's log messages are written to the standard output).</p>

<b>Task properties:</b><br>
<ul>
<li>{@value #SOURCE_FILE}: <br>
		- path to the file which will be copied <br>
		- mandatory <br>
<li>{@value #DESTINATION_FILE}: <br>
		- name of the file's copy <br>
		- mandatory<br>
</ul>

@author Jaroslav Urban
"
      classrelation 256642 // <generalisation>
	relation 256642 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 256642 // <generalisation>
	  b parent class_ref 197250 // Job
      end

      attribute 277890 "SOURCE_FILE"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"src.file\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "------------------------CONSTANTS--------------------

The task properties in this task are just as an example of how to use them.
Typically when you use Ant to perform some operation, the filenames etc will
be always the same, so you will use constants in the task's source.


Task property name for the file to be copied

"
      end

      attribute 278018 "DESTINATION_FILE"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"dest.file\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Task property name for the name of the file's copy

"
      end

      attribute 278146 "srcFile"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "-----------------------ATTRIBUTES--------------------

File to be copied

"
      end

      attribute 278274 "destFile"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Filename of the copy of the file

"
      end

      class 199298 "Foo"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 256770 // logger (<unidirectional association>)
	  relation 256770 --->
	    a role_name "logger" init_value "=  new ConsoleLogger(this)" private
	      comment " ConsoleLogger logs to stdout. The logger must have a name. Loggers
 are in a hierarchy based on their names, e.g. \"cz\" is the parent logger
 for \"cz.cuni\". Therefore it's recommended to use full classnames for the 
 logger's names. You can pass a reference to the class using the logger
 in the logger's constructor, and it will name itself automatically. Alternatively,
 there is a contructor with a String parameter, so you can name the logger
 as you want.
 The logger can be static, it doesn't change the behavior. It can't be static here
 because Foo is in inner class.
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 256770 // logger (<unidirectional association>)
	    b parent class_ref 184962 // ConsoleLogger
	end

	operation 634370 "bar"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
Example method of the class, only does some example loggind.

"
	end
      end

      operation 634498 "Example1Task"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 137218 // TaskInitializationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "

Allocates a new <code>Example1Task</code> object.

@throws TaskInitializationException
"
      end

      operation 634626 "run"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 137346 // TaskException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "
(non-Javadoc)
@see cz.cuni.mff.been.task.Job#run()
"
      end

      operation 634754 "checkRequiredProperties"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 137346 // TaskException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end
  end

  deploymentview 132226 "task1"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 179330 "Example1Exception"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import cz.cuni.mff.been.common.BeenException;
${definition}"
      associated_classes
	class_ref 199042 // Example1Exception
      end
    end

    artifact 179458 "Example1Task"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import hello.Hello;
import cz.cuni.mff.been.common.anttasks.Copy;
import cz.cuni.mff.been.logging.ConsoleLogger;
import cz.cuni.mff.been.logging.LogLevel;
import cz.cuni.mff.been.task.Job;
import cz.cuni.mff.been.task.Task;
import cz.cuni.mff.been.task.TaskException;
import cz.cuni.mff.been.task.TaskInitializationException;
${definition}"
      associated_classes
	class_ref 199170 // Example1Task
      end
    end
  end
end
