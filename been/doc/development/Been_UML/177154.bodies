class EventProcessorThread
!!!403458.java!!!	EventProcessorThread(inout queue : EventQueue, inout listeners : ConcurrentMap< OID, LoadMonitorEventListener >)
			
			super();
			
			this.queue = queue;
			this.listeners = listeners;
			events = new LinkedList< LoadMonitorEvent >();
!!!403586.java!!!	stopMe() : void
			
			stop = true;
!!!403714.java!!!	run() : void

			// Repeat until the end of the universe - 1
			while (!stop) {
				events.clear();
				queue.getAll(events);
				
				synchronized (listeners) {
					
					// For each listeners
					for (LoadMonitorEventListener listener: listeners.values()) {
						// Process all events
						for (LoadMonitorEvent event: events) {
							try {
								listener.handleEvent(event);
							} catch (Exception e) {
								// Do nothing, we have to process remaining events
								// hmm, very helpful message
								logger.logError("Listener error.", e);
							}
						}
					}
				}
				
				if (isInterrupted()) {
					return;
				}
			}
