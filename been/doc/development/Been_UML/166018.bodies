class NameValuePair
!!!371970.java!!!	NameValuePair()

		super("(none)", null);
!!!372098.java!!!	NameValuePair(in newName : String, inout newValue : ValueCommonInterface)
		
		super(newName, newValue);
		
		if ((newName == null) || (newValue == null)) {
			
			throw new IllegalArgumentException("null parameters are not allowed in NameValuePair.");
		}
		
		if (newName.length() == 0) {
			
			throw new IllegalArgumentException("Empty name is not allowed in NameValuePair.");
		}
!!!372226.java!!!	NameValuePair(inout node : Node)
		
		super("", null);
		
		parseXMLNode(node);
!!!372354.java!!!	getName() : String
		
		return getFirst();
!!!372482.java!!!	getValue() : ValueCommonInterface
		
		return getSecond();
!!!372610.java!!!	toString() : String
		
		return getFirst() + "=" + getSecond().toString();
!!!372738.java!!!	parseXMLNode(inout node : Node) : void
		
		if (!node.getNodeName().equals(getXMLNodeName())) {
			throw new InputParseException("Node does not contain NameValuePair data. Node name is \""
					+ node.getNodeName() + "\".");
		}

		String name = XMLHelper.getAttributeValueByName("name", node);
		String valueType = XMLHelper.getAttributeValueByName("valueType", node);
		ValueCommonInterface value = null;

		try {
			value = (ValueCommonInterface) Class.forName(valueType).newInstance();
		} catch (Exception e) {
			throw new InputParseException("Unable to create new instance of value type.", e);
		}

		value.parseXMLNode(XMLHelper.getSubNodeByName(value.getXMLNodeName(), node));

		setFirst(name);
		setSecond(value);
!!!372866.java!!!	exportAsElement(inout doc : Document) : Element
		
		/* Node looks like this:
		 * 
		 * <namevalue name="<name>" valueType="<type>">
		 *    <data-node>
		 * </namevalue>
		 * 
		 * where <name> is string with name of the property, <type> is canonical name of the 
		 * property value type and <data-node> is serialised form of the value (for more info
		 * see serialisation routines for all Value* types).
		 */
		
		Element element = doc.createElement(getXMLNodeName());
		
		element.setAttribute("name", getFirst());
		element.setAttribute("valueType", getSecond().getClass().getCanonicalName());
		
		element.appendChild(getSecond().exportAsElement(doc));
		
		return element;
!!!372994.java!!!	getXMLNodeName() : String
		
		return XML_NODE_NAME;
!!!373122.java!!!	equals(inout o : Object) : boolean
		
		if (o instanceof NameValuePair) {
			return equals((NameValuePair) o);
		} else {
			return false;
		}
!!!373250.java!!!	equals(inout o : NameValuePair) : boolean
		
		return getName().equals(o.getName()) && getValue().equals(o.getValue());
!!!373378.java!!!	hashCode() : int
		
		return getName().hashCode() + getValue().hashCode();
