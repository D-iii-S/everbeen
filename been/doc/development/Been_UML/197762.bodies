class CVSDownload
!!!629634.java!!!	CVSDownload()
		super();
!!!629762.java!!!	setup() : void
		globalOptions = new GlobalOptions();
		globalOptions.setCVSRoot(getTaskProperty(CVS_REPOSITORY));
		connection = (PServerConnection) ConnectionFactory.getConnection(getTaskProperty(CVS_REPOSITORY));
		
		//user specified an cvs password 
		if (getTaskProperty(CVS_PASSWORD) != null) {
			connection.setEncodedPassword(StandardScrambler.getInstance().scramble(getTaskProperty(CVS_PASSWORD)));
		}
		
		cvsClient = new Client(connection, new StandardAdminHandler());
		cvsClient.setLocalPath(getWorkingDirectory());
		cvsClient.getEventManager().addCVSListener(new LoggingCVSListener(this));
!!!629890.java!!!	download() : void
		CheckoutCommand checkout = new CheckoutCommand();
		checkout.setPruneDirectories(false);
		checkout.setBuilder(null);
		checkout.setRecursive(true);
		checkout.setModule(getTaskProperty(CVS_MODULE));
		
		// checkout revision if set
		if (getTaskProperty(CVS_REVISION) != null) {
			checkout.setCheckoutByRevision(getTaskProperty(CVS_REVISION));
		}
		
		// checkout to given date if set
		if (getTaskProperty(CVS_DATE) != null) {
			checkout.setCheckoutByDate(getTaskProperty(CVS_DATE));
		}
		
		cvsClient.executeCommand(checkout, globalOptions);		
!!!630018.java!!!	run() : void
		// prevent javacvs library warnings about reusing connection (which is doing itself)
		System.setProperty("javacvs.multiple_commands_warning", "false");
		
		setup();
		
		try {
			// download specified module
			download();
			checkPointReached(CHECKPOINT, "true");
		} catch (CommandException e) {
			logFatal("Checkout command aborted: " + e.getMessage());
			throw new TaskException("Checkout command aborted",e);
		} catch (AuthenticationException e) {
			logFatal("Authenticion error: " + e.getMessage());
			throw new TaskException("Authentication error",e);
		}
!!!630146.java!!!	checkRequiredProperties() : void
		checkRequiredProperties(new String[]{CVS_MODULE,CVS_REPOSITORY});
!!!630274.java!!!	main(in args : String) : void
		CVSDownload download = new CVSDownload();
		download.run();
		
