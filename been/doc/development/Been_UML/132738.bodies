class ExperimentMetadata
!!!173954.java!!!	ExperimentMetadata(inout analysisID : AID, inout experimentID : EID, in name : String, in description : String, inout pluginID : PEID, in pluginName : String)
		
		assert name != null && name.length() > 0 : "Experiment name must be non-empty";
		
		this.aid = analysisID;
		this.id = experimentID;
		this.name = name;
		this.description = description;
		this.plugin = pluginID;
		this.pluginName = pluginName;
		this.tasks = new TaskSequence(experimentID);
		this.status = EntityStatus.CONFIGURED;
!!!174082.java!!!	ExperimentMetadata(inout experimentID : EID, inout model : ExperimentMetadata)
		this(model.getAnalysis(),experimentID,model.getName(),
			model.getDescription(),model.getPlugin(),model.getPluginName());
		this.properties.putAll(model.properties);
		this.roles.putAll(model.roles);
		this.packages.putAll(model.packages);
		this.runCount = model.runCount;
		this.binaryCount = model.binaryCount;
		this.sampleCount = model.sampleCount;
		this.scripts = model.scripts;
!!!174210.java!!!	getID() : EID
		return id;
!!!174338.java!!!	getAnalysis() : AID
		return aid;
!!!174466.java!!!	getPlugin() : PEID
		return plugin;
!!!174594.java!!!	getPluginName() : String
		return pluginName;
!!!174722.java!!!	getDescription() : String
		return description;
!!!174850.java!!!	getName() : String
		return name;
!!!174978.java!!!	setName(in name : String) : void
		this.name = name;
!!!175106.java!!!	getTasks() : TaskDescriptor
		return tasks.getTasks(getID());
!!!175234.java!!!	getTasks(inout id : OID) : TaskDescriptor
		return tasks.getTasks(id);
!!!175362.java!!!	getAllTasks() : TaskDescriptor
		return tasks.getAllTasks();
!!!175490.java!!!	getAllTasks(inout id : OID) : TaskDescriptor
		return tasks.getAllTasks(id);
!!!175618.java!!!	getTaskSequence() : TaskSequence
		return tasks;
!!!175746.java!!!	getBinaryCount() : int
		return binaryCount;
!!!175874.java!!!	setBinaryCount(in binaryCount : int) : void
		this.binaryCount = binaryCount;
!!!176002.java!!!	getRunCount() : int
		return runCount;
!!!176130.java!!!	setRunCount(in runCount : int) : void
		this.runCount = runCount;
!!!176258.java!!!	getSamplesCount() : int
		return sampleCount;
!!!176386.java!!!	setSamplesCount(in samplesCount : int) : void
		this.sampleCount = samplesCount;
!!!176514.java!!!	getRoleNames() : String
		return roles.keySet().toArray(new String[roles.size()]); 
!!!176642.java!!!	isRerun() : boolean
		return isRerun;
!!!176770.java!!!	setProperty(in name : String, in value : String) : void
		properties.put(name,value);
!!!176898.java!!!	getProperty(in name : String) : String
		return this.properties.get(name);
!!!177026.java!!!	getPropertyNames() : String
		return this.properties.keySet().toArray(new String[this.properties.keySet().size()]);
!!!177154.java!!!	getProperty(in name : String, in defaultValue : String) : String
		String val = this.properties.get(name);
		return val != null ? val : defaultValue;
!!!177282.java!!!	getBinaries() : BinaryMetadata
		return binaries.toArray(new BinaryMetadata[binaries.size()]);
!!!177410.java!!!	getBinary(inout id : BID) : BinaryMetadata
		return (BinaryMetadata)binaries.findByID(id);
!!!177538.java!!!	getRoles() : StandardRole
		return roles.values().toArray(new StandardRole[roles.size()]);
!!!177666.java!!!	getRole(in name : String) : StandardRole
		return roles.get(name);
!!!177794.java!!!	addRole(in roleName : String, inout rsl : Condition, in count : int) : void
		createRole(roleName,rsl,false,count);
!!!177922.java!!!	addBenchmarkingRole(in roleName : String, inout rsl : Condition, in count : int) : void
		createRole(roleName,rsl,true,count);
!!!178050.java!!!	getContextID() : String
		return  getAnalysis() + "-" + getID();
!!!178178.java!!!	getStatus(inout id : OID) : EntityStatus
		/*
		 * In case we are experiment with configured status,
		 * we have no tasks/children created yet, because
		 * the generator was not started.
		 * When node has no children/tasks, the algorithm returns
		 * "finish" status, which is not correct in this case, so
		 * we must prevent calling getStatus() algorithm.
		 * 
		 * When experiment is dispatched, it has generated tasks, but was not yet
		 * submitted, so task manager returns null for them and status
		 * algorithm assumes they are finished, which is again not correct.
		 * 
		 * Once the experiment is finished, it can't change 
		 * its state again, so we don't need check our status. 
		 */
		synchronized (tasks) {
			switch (status) {
				case CONFIGURED: // must not call status algorithm
				case DISPATCHED: // must not call status algorithm
				case FINISHED:   // need not call status algorithm
						return status;
				default:
						EntityStatus countedStatus = getTaskSequence().getStatus(id); 	
						if (getID().equals(id)) {
							this.status = countedStatus;
						}
						return countedStatus;
			}
		}
		
!!!178306.java!!!	getStatus() : EntityStatus
		return getStatus(getID());
!!!178434.java!!!	setUserHosts(inout roles : Role) : void
		for (Role role : roles) {
			StandardRole expRole = getRole(role.getName());
			
			if (expRole.isBenchmarking()) {
				((BenchmarkRole)expRole).setUserHosts(role.getSelectedHosts());
			}
		}
!!!178562.java!!!	setScripts(inout scripts : CallbackRScripts) : void
		this.scripts = scripts;
!!!178690.java!!!	getScripts() : CallbackRScripts
		return scripts;
!!!178818.java!!!	setStatus(inout status : EntityStatus) : void
		synchronized (tasks) {
	 		this.status = status;
			tasks.setGlobalStatus(status);
		}
!!!178946.java!!!	addPackage(inout binary : BinaryMetadata, in packageName : String, in metadataFlag : String) : void
		packages.put(binary.getID() + packageName, metadataFlag);
!!!179074.java!!!	getPackage(inout binary : BinaryMetadata, in packageName : String) : String
		return packages.get(binary.getID() + packageName);
!!!179202.java!!!	getBinaryIds() : BID
		return getTaskSequence().getBinaries();
!!!179330.java!!!	getRunIds() : RID
		return getTaskSequence().getRuns();
!!!179458.java!!!	addRoleMapping(in role : String, in host : String) : void
		resultsMapping.add(new Pair<String,String>(role,host));
!!!179586.java!!!	getResultsMapping() : Pair
		return Collections.unmodifiableList(resultsMapping);
!!!179714.java!!!	createRole(in roleName : String, inout rsl : Condition, inout isBenchmarking : boolean, in count : int) : void
		StandardRole role = isBenchmarking ?
						new BenchmarkRole(roleName, rsl, count) :
						new StandardRole(roleName,rsl, count);
		roles.put(role.getName(),role);
