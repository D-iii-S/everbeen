class TaskLoader
!!!490370.java!!!	loadTask(in taskClass : String) : void
		// load the task's class
		Class clazz = null;
		try {
			clazz = Class.forName(taskClass);
		} catch (ClassNotFoundException e) {
			System.err.println("Class not found: " + taskClass);
			e.printStackTrace();
			System.exit(Task.EXIT_CODE_ERROR);
		}
		
		// create instance of the task
		try {
			task = (Task) clazz.newInstance();
		} catch (InstantiationException e) {
			System.err.println("Cannot create instance of the task " + taskClass 
					+ " : " + e.getMessage());
			System.err.println("Possible reasons: no nullary constructor, the "
					+ "class class cannot be instantiated (is abstract, interface, etc)"
					+ " or instantiation failed for some other reason");
			e.printStackTrace();
			System.exit(Task.EXIT_CODE_ERROR);
		} catch (IllegalAccessException e) {
			System.err.println("Cannot create instance of the task " + taskClass 
					+ " : " + e.getMessage());
			System.err.println("Possible reasons: class or it's nullary contructor are"
					+ " not accessible");
			e.printStackTrace();
			System.exit(Task.EXIT_CODE_ERROR);
		}
!!!490498.java!!!	runTask() : void
		if (task instanceof Job) {
			try {
				((Job) task).runJob();
			} catch (TaskException e) {
				e.printStackTrace();
				task.logFatal(e.getMessage());
				System.exit(Task.EXIT_CODE_ERROR);
			}
			System.exit(Task.EXIT_CODE_SUCCESS);
		} else if (task instanceof Service) {
			try {
				((Service) task).startService();
			} catch (TaskException e) {
				System.err.println("Cannot start service: " + e.getMessage());
				e.printStackTrace();
				System.exit(Task.EXIT_CODE_ERROR);
			}
		} else {
			System.err.println("The loaded class is not a Job nor a Service: " 
				+ task.getClass().getCanonicalName());
			System.exit(Task.EXIT_CODE_ERROR);
		}
!!!490626.java!!!	main(in args : String) : void
		if (args.length < 1) {
			System.out.println("You must give the task's classname as a command line parameter");
			System.exit(Task.EXIT_CODE_ERROR);
		}
		
		String taskClass = args[0];
		TaskLoader loader = new TaskLoader();
		loader.loadTask(taskClass);
		loader.runTask();
