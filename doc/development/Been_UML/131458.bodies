class SchedulerInfo
!!!226818.java!!!	getMinutes() : int
		return minutes;
!!!226946.java!!!	getHours() : int
		return hours;
!!!227074.java!!!	getDaysOfMonth() : int
		return daysOfMonth;
!!!227202.java!!!	getMonths() : int
		return months;
!!!227330.java!!!	getDaysOfWeek() : int
		return daysOfWeek;
!!!227458.java!!!	getYear() : int
		return year;
!!!227586.java!!!	isPaused() : boolean
		return isPaused;
!!!227714.java!!!	getHistoricalStartDate() : long
		return historicalStartDate;
!!!227842.java!!!	getHistoricalEndDate() : long
		return historicalEndDate;
!!!227970.java!!!	SchedulerInfo(in minutes : int, in hours : int, in daysOfMonth : int, in months : int, in daysOfWeek : int, in year : int, inout isPaused : boolean, in historicalStartDate : long, in historicalEndDate : long)
		this.minutes = minutes;
		this.hours = hours;
		this.daysOfMonth = daysOfMonth;
		this.months = months;
		this.daysOfWeek = daysOfWeek;
		this.year = year;
		this.isPaused = isPaused;
		this.historicalStartDate = historicalStartDate;
		this.historicalEndDate = historicalEndDate;
		sortArrayFields();
!!!228098.java!!!	sortArrayFields() : void
		for (int[] arrayField: new int[][] {
			minutes, hours, daysOfMonth, months, daysOfWeek
		}) {
			if (arrayField != null) {
				Arrays.sort(arrayField);
			}
		}
!!!228226.java!!!	equals(inout obj : Object) : boolean
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		final SchedulerInfo other = (SchedulerInfo) obj;
		if (isPaused != other.isPaused)
			return false;
		if (year != other.year)
			return false;
		if (historicalStartDate != other.historicalStartDate)
			return false;
		if (!Arrays.equals(daysOfMonth, other.daysOfMonth))
			return false;
		if (!Arrays.equals(daysOfWeek, other.daysOfWeek))
			return false;
		if (!Arrays.equals(hours, other.hours))
			return false;
		if (!Arrays.equals(minutes, other.minutes))
			return false;
		if (!Arrays.equals(months, other.months))
			return false;
		return true;
!!!228354.java!!!	hashCode() : int
		final int PRIME = 31;
		int result = 1;
		result = PRIME * result + Arrays.hashCode(daysOfMonth);
		result = PRIME * result + Arrays.hashCode(daysOfWeek);
		result = PRIME * result + (int) (historicalStartDate ^ (historicalStartDate >>> 32));
		result = PRIME * result + Arrays.hashCode(hours);
		result = PRIME * result + (isPaused ? 1231 : 1237);
		result = PRIME * result + Arrays.hashCode(minutes);
		result = PRIME * result + Arrays.hashCode(months);
		result = PRIME * result + year;
		return result;
