class Entity
!!!600322.java!!!	getId() : ID
		return id;
!!!600450.java!!!	getMetadata() : MetadataItem
		return metadata;
!!!600578.java!!!	getStatistics() : Statistics
		return statistics;
!!!600706.java!!!	isDeletable() : boolean
		return isDeletable;
!!!600834.java!!!	getName() : String
		for (MetadataItem item: metadata) {
			if (item.getKey().equals(MetadataItem.NAME_KEY)) {
				return item.getValue();
			}
		}
		assert false: "Entity doesn't have \"" + MetadataItem.NAME_KEY
			+ "\" key in its metadata.";
		return null; // to shut up the compiler
!!!600962.java!!!	getComment() : String
		for (MetadataItem item: metadata) {
			if (item.getKey().equals(MetadataItem.COMMENT_KEY)) {
				return item.getValue();
			}
		}
		assert false: "Entity doesn't have \"" + MetadataItem.COMMENT_KEY
			+ "\" key in its metadata.";
		return null; // to shut up the compiler
!!!601090.java!!!	isValid() : boolean
		for (MetadataItem item: metadata) {
			if (item.getKey().equals(MetadataItem.VALID_KEY)) {
				if (item.getValue().equals("true")) {
					return true;
				}
				if (item.getValue().equals("false")) {
					return false;
				}
				assert false: "Entity does have invalid \"" + MetadataItem.VALID_KEY
					+ "\" value in its metadata.";
			}
		}
		assert false: "Entity doesn't have \"" + MetadataItem.VALID_KEY
			+ "\" key in its metadata.";
		return false; // to shut up the compiler
!!!601218.java!!!	isComplete() : boolean
		for (MetadataItem item: metadata) {
			if (item.getKey().equals(MetadataItem.COMPLETE_KEY)) {
				if (item.getValue().equals("true")) {
					return true;
				}
				if (item.getValue().equals("false")) {
					return false;
				}
				assert false: "Entity does have invalid \"" + MetadataItem.COMPLETE_KEY
					+ "\" value in its metadata.";
			}
		}
		assert false: "Entity doesn't have \"" + MetadataItem.COMPLETE_KEY
			+ "\" key in its metadata.";
		return false; // to shut up the compiler
!!!601346.java!!!	Entity(inout id : ID, inout metadata : MetadataItem, inout statistics : Statistics, inout isDeletable : boolean)
		this.id = id;
		this.metadata = metadata;
		this.statistics = statistics;
		this.isDeletable = isDeletable;
!!!601474.java!!!	compareTo(inout anotherEntity : Entity) : int
		return (int) (
			(Long) this.getId().value() - (Long) anotherEntity.getId().value()
		); 
