class JBossBuild
!!!635778.java!!!	JBossBuild()
		super();
!!!635906.java!!!	checkRequiredProperties() : void
		checkRequiredProperties(new String[]{JBOSS_DIR});
!!!636034.java!!!	run() : void
		jbossDir = getTaskProperty(JBOSS_DIR);
		logInfo("JBoss directory: " + jbossDir);

		ArrayList<String> params = new ArrayList<String>();
		if (isRunningInWindows()) {
			params.add("cmd");
			params.add("/C");
			params.add("call");
			params.add(jbossDir + File.separator + "build" + File.separator 
					+ "build.bat");
		}
		if (isRunningInLinux()) {
			params.add(jbossDir + File.separator + "build" + File.separator 
					+ "build.sh");
		}
		// set the install.id property to jboss so that the compile
		// output is always in the same directory
		params.add("-Dinstall.id\"=\"jboss");
		String[] cmdArray = params.toArray(new String[params.size()]);
		
		try {
			logInfo("Compiling JBoss");
			logInfo("Executing: " + ArrayUtils.join(" ", cmdArray));
			
			ProcessBuilder builder = new ProcessBuilder(cmdArray);
			builder.directory(new File(jbossDir, "build"));
			Process p = builder.start();
			p.getOutputStream().close();
			
			/* Read in the output from the subprocess */
			OutputReader stdoutReader = 
				new OutputReader(p.getInputStream(), OutputType.STDOUT);
			OutputReader stderrReader = 
				new OutputReader(p.getErrorStream(), OutputType.STDERR);
			stdoutReader.start();
			stderrReader.start();

			// wait untill the compilation finishes
			if (p.waitFor() != 0) {
				throw new TaskException("Build failed");
			}
		} catch (TaskException e) {
			throw e;
		} catch (Exception e) {
			throw new TaskException("Cannot run JBoss compilation", e);
		}
		
		logInfo("Build succesfull");
