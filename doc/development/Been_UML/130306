format 59
"resultsrepository" // been::src::cz::cuni::mff::been::resultsrepository
  revision 3
  modified_by 2 "Administrator"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "cz/cuni/mff/been/resultsrepository"
  java_package "cz.cuni.mff.been.resultsrepository"
  package_ref 130434 // gui

  classview 130690 "resultsrepository"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    classdiagram 135938 "ResultsRepository"
      draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_infonote default shadow default show_stereotype_properties default
      size A0-Landscape
    end

    class 142722 "ResultsRepositoryInterface"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Main interface for communication with other parts of BEEN (RMI interface)
(see also <code>ResultsRepositoryUserInterface</code> and <code>DatabaseInterface</code>)

@author Jakub Lehotsky
"
      classrelation 235138 // <generalisation>
	relation 235138 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 235138 // <generalisation>
	  b parent class_ref 130818 // Remote
      end

      attribute 253058 "RMI_NAME"
	public explicit_type "String"
	init_value "=  \"main\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
RMI name

"
      end

      operation 562946 "addAnalysis"
	public explicit_return_type "void"
	nparams 1
	  param inout name "description" type class_ref 131202 // AnalysisEntity
	nexceptions 2
	  exception class_ref 186882 // ResultsRepositoryException
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Notice Results Repository about new analysis being created in Benchmark Manager - 
initializes all metadata, etc. This call creates analysis in Results Repository database.

@param description	All info about analysis being created
@throws ResultsRepositoryException	In case something went wrong (analysis already exists,
										 i/o error)
@throws RemoteException				In case of network connection malfunction
"
      end

      operation 563074 "addExperiment"
	public explicit_return_type "void"
	nparams 1
	  param inout name "description" type class_ref 135426 // ExperimentEntity
	nexceptions 2
	  exception class_ref 186882 // ResultsRepositoryException
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Notice Results Repository about new experiment being created in Benchmark Manager - 
initializes all metadata, etc. This call creates experiment in Results Repository database.

@param description	All info about experiment being created
@throws ResultsRepositoryException	In case something went wrong (experiment already exists, 
										or analysis doesn't exist, io error)
@throws RemoteException				In case of network connection malfunction
"
      end

      operation 563202 "addBinary"
	public explicit_return_type "void"
	nparams 1
	  param inout name "description" type class_ref 139266 // BinaryEntity
	nexceptions 2
	  exception class_ref 186882 // ResultsRepositoryException
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Notice Results Repository about new binary being created in Benchmark Manager - initializes
all metadata, etc. This call creates binary in Results Repository database.

@param description	All info about experiment being created
@throws ResultsRepositoryException	In case something went wrong (binary already exists, or
										analysis/experiment doesn't exist, io error)
@throws RemoteException				In case of network connection malfunction
"
      end

      operation 563330 "uploadRunResults"
	public return_type class_ref 134658 // UploadHandle
	nparams 11
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	  param in name "roleName" explicit_type "String"
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "int"
	  param inout name "runValid" explicit_type "boolean"
	  param inout name "blocking" explicit_type "boolean"
	  param in name "tableIndex" explicit_type "int"
	  param in name "totalTables" explicit_type "int"
	nexceptions 4
	  explicit_exception "UnknownHostException"
	  explicit_exception "IOException"
	  explicit_exception "RemoteException"
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Used to start upload of binary file - for specific run results upload 
The client must open the socket on some port before calling this function. 
Then it calls the <code>uploadFile</code> method.

This method work asynchronously and returns immediately.
Before return it starts a new thread that will receive the file contents
from the socket open on given host and port.

If there is any error when sending the file contents, the socket
is closed. 

Client has an opportunity to check (via the <code>getFileUploadStatus</code> 
method to check the current status of upload (eventually can be error)
 
After the upload finishes, client should close the returned handle
via the <code>endFileUpload</code> method.  

@param aid	Analysis ID
@param eid	Experiment ID
@param bid	Binary ID
@param rid	Run ID for upload
@param roleName The name of the role
@param host	Hostname, from which file is uploaded
@param port	Open port for network transfer
@param runValid	Determines, whether run is valid or crashed 
@param blocking 	Determines, whether transfer will be blockin or non-blocking
@param tableIndex	Index of the currently uploaded table
@param totalTables	Total number of tables to be uploaded for a given run

@return 	UploadHandle, which you can use later to refer to transfer

@throws UnknownHostException
@throws IOException
@throws RemoteException 
@throws ResultsRepositoryBusyException 
"
      end

      operation 563458 "initLoadUpload"
	public explicit_return_type "void"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Initializes results repository load upload for a load of a given run. It must be called
prior to any load information upload  

@param aid	Analysis Id
@param eid	Experiment Id
@param bid	Binary Id
@param rid	Run Id

@throws RemoteException
"
      end

      operation 563586 "closeLoadUpload"
	public explicit_return_type "void"
	nparams 5
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	  param inout name "valid" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Notify results repository, that load upload is done. If valid parameter is
set to false, it cleans stored load information if there are any partial uploads, etc.
This must be called at finish in order for Results Repository to mark load data as valid
and use them for load graphs drawing.

@param aid	Analysis Id
@param eid	Experiment Id
@param bid	Binary Id
@param rid	Run Id
@param valid Validity of uploaded load information

@throws RemoteException
"
      end

      operation 563714 "uploadLoadInfo"
	public return_type class_ref 134658 // UploadHandle
	nparams 8
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	  param in name "filename" explicit_type "String"
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "int"
	  param inout name "blocking" explicit_type "boolean"
	nexceptions 4
	  explicit_exception "UnknownHostException"
	  explicit_exception "IOException"
	  explicit_exception "RemoteException"
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Used to start upload of load information file 
The client must open the socket on some port before calling this function. 
Then it calls the <code>uploadFile</code> method.

This method work asynchronously and returns immediately.
Before return it starts a new thread that will receive the file contents
from the socket open on given host and port.

If there is any error when sending the file contents, the socket
is closed. 

Client has an opportunity to check (via the <code>getFileUploadStatus</code> 
method to check the current status of upload (eventually can be error)
 
After the upload finishes, client should close the returned handle
via the <code>endFileUpload</code> method.  

@param aid	Analysis ID
@param eid	Experiment ID
@param bid	Binary ID
@param rid	Run ID for upload
@param filename	Filename
@param host	Hostname, from which file is uploaded
@param port	Open port for network transfer
@param blocking 	Determines, whether transfer will be blockin or non-blocking

@return 	UploadHandle, which you can use later to refer to transfer

@throws UnknownHostException
@throws IOException
@throws RemoteException 
@throws ResultsRepositoryBusyException 
"
      end

      operation 563842 "getFileUploadStatus"
	public return_type class_ref 134786 // UploadStatus
	nparams 1
	  param inout name "handle" type class_ref 134658 // UploadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "	 Note: following methods has meaning only for non-blocking upload (default mode)

Returns the status of the file upload. Result is one
of the values listed in the <code>FileTransferStatus</code> enumeration.

Values <code>INITIALIZING</code> and <code>UPLOADING</code> mean that
Results Repository still works on the file upload. Values
<code>ACCEPTED</code> and <code>ERROR</code> mean that Results Repository
has finished its work (either successfully or unsuccessfully) and the 
download handle is ready to be closed by the <code>endFileUpload</code> method.   

@param handle file upload handle
@return upload status
@throws RemoteException when something in RMI goes bad
"
      end

      operation 563970 "endRunUpload"
	public explicit_return_type "void"
	nparams 6
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	  param in name "host" explicit_type "String"
	  param inout name "handle" type class_ref 134658 // UploadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Closes the upload handle. Client should call this method after the upload
status returned by <code>getFileUploadStatus</code> has value
<code>ACCEPTED</code>, or <code>ERROR</code>.

This method is crucial, so that synchronization and upload callbacks work correctly

If the client doesn't close the upload handle, Results Repository will leak
a little amount of memory. However, no other resources than memory
(such as open files, locks...) are associated with the upload handle. 
@param aid Analysis Id
@param eid Experimet Id
@param bid Binary Id
@param rid Run Id
@param host Hostname from where results are uploaded

@param handle upload handle
@throws RemoteException when something in RMI goes bad
"
      end

      operation 564098 "endFileUpload"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handle" type class_ref 134658 // UploadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Closes the upload handle after uploading the run. Client should call 
this method after the upload status returned by <code>getFileUploadStatus</code> 
has value <code>ACCEPTED</code>, or <code>ERROR</code>. 

If the client doesn't close the upload handle, Results Repository will leak
a little amount of memory. However, no other resources than memory
(such as open files, locks...) are associated with the upload handle. 

@param handle upload handle
@throws RemoteException when something in RMI goes bad
"
      end

      operation 564226 "performLogUpload"
	public explicit_return_type "void"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param in name "contextName" explicit_type "String"
	  param in name "taskName" explicit_type "String"
	nexceptions 2
	  exception class_ref 186882 // ResultsRepositoryException
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Request upload of logs from a given context and task into results repository. This tasks
checks, whether 

@param aid		AnalysisId
@param eid		ExperimentId 
@param contextName	The name of task's context
@param taskName		The name of task to upload logs from
@throws ResultsRepositoryException 
@throws RemoteException 
"
      end

      operation 564354 "finishLogUpload"
	public explicit_return_type "void"
	nparams 2
	  param inout name "analysisId" type class_ref 130434 // AID
	  param inout name "experimentId" type class_ref 133378 // EID
	nexceptions 2
	  exception class_ref 186882 // ResultsRepositoryException
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Finishes upload of all the logs, which where registered for a given experiment, but still not
uploaded

@param analysisId 	AID of analysis in account
@param experimentId 	EID of experiment in account
@throws ResultsRepositoryException 
@throws RemoteException 
"
      end

      operation 564482 "setExperimentCallbackRScripts"
	public explicit_return_type "void"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "callbackRScripts" type class_ref 135554 // CallbackRScripts
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets callback R scripts for given experiment.

@param aid analysis identifier
@param eid experiment identifier
@param callbackRScripts object containing texts of the scripts
@throws IllegalArgumentException if the analysis or experiment does not
         exist
@throws RemoteException when something in RMI goes bad
"
      end

      operation 564610 "reportExperimentColumnNames"
	public explicit_return_type "void"
	nparams 3
	  param inout name "analysisId" type class_ref 130434 // AID
	  param inout name "experimentId" type class_ref 133378 // EID
	  param inout name "columnNames" explicit_type "ArrayList<String>"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Reports column names for experiment

@param analysisId	Analysis Id
@param experimentId	Experiment Id
@param columnNames	<code>ArrayList&lt;String&gt;</code> containing list of column names 
@throws RemoteException when something in RMI goes bad 
"
      end
    end

    class 190722 "ExportInterface"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Export interface. If you want to make new exporting format, you have to implement this interface 
and register in the Exporter class (for now, change the hardcoded table in Exporter.java)

NOTE: arguments (arrays with entities) are checked for existence and for duplicates, before 
passed to these methods 

@author Jakub Lehotsky
"
      operation 537218 "setDatabase"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aDatabase" type class_ref 186242 // Database
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Notice given export implementation with Results Repository database, exporter calls this 
prior to begin{Whatever}Export to notice about database instance to use.
@param aDatabase	Database instance
"
      end

      operation 537346 "beginAnalysesExport"
	public return_type class_ref 149762 // DownloadHandle
	nparams 3
	  param inout name "aids" type class_ref 130434 // AID
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Begins analyses export, you should implement the sending of single export package to 
InetAddress ip and port. Otherwise this methods works like <code>downloadFile</code> from 
Database.java, using <code>getAnalysesExportStatus</code> and 
<code>endAnalysesExportStatus</code> accordingly.
@see cz.cuni.mff.been.resultsrepository.Database#downloadFile 

@param aids	Array of analysis IDs for export 
@param ip	ip address to send exported package to
@param port	Port to use for network communication
@return		Download handle to use for checking status and finishing export
@throws ResultsRepositoryBusyException
"
      end

      operation 537474 "beginExperimentsExport"
	public return_type class_ref 149762 // DownloadHandle
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eids" type class_ref 133378 // EID
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Begins experiments export, you should implement the sending of single export package to 
InetAddress ip and port. Otherwise this methods works like <code>downloadFile</code> from 
Database.java, using <code>getExperimentsExportStatus</code> and
<code>endExperimentsExportStatus</code> accordingly.
@see cz.cuni.mff.been.resultsrepository.Database#downloadFile 

@param aid	Analysis ID (with experiments)
@param eids	Array of experiment IDs for export 
@param ip	ip address to send exported package to
@param port	Port to use for network communication
@return		Download handle to use for checking status and finishing export
@throws ResultsRepositoryBusyException
"
      end

      operation 537602 "beginBinariesExport"
	public return_type class_ref 149762 // DownloadHandle
	nparams 5
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bids" type class_ref 138754 // BID
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Begins binaries export, you should implement the sending of single export package to 
InetAddress ip and port. Otherwise this methods works like <code>downloadFile</code> from 
Database.java, using <code>getBinariesExportStatus</code> and 
<code>endBinariesExportStatus</code> accordingly.
@see cz.cuni.mff.been.resultsrepository.Database#downloadFile 

@param aid	Analysis ID (with binaries)
@param eid	Experiment ID (with binaries)
@param bids	Array of binary IDs for export 
@param ip	ip address to send exported package to
@param port	Port to use for network communication
@return		Download handle to use for checking status and finishing export
@throws ResultsRepositoryBusyException
"
      end

      operation 537730 "beginRunsExport"
	public return_type class_ref 149762 // DownloadHandle
	nparams 6
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "runIndexes" type class_ref 140290 // RID
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Begins runs export, you should implement the sending of single export package to 
InetAddress ip and port. Otherwise this methods works like <code>downloadFile</code> from 
Database.java, using <code>getRunsExportStatus</code> and <code>endRunsExportStatus</code> 
accordingly.
@see cz.cuni.mff.been.resultsrepository.Database#downloadFile 

@param aid	Analysis ID (with runs)
@param eid	Experiment ID (with runs)
@param bid	Binary ID (with runs)
@param runIndexes	Array of run indexes for export 
@param ip	ip address to send exported package to
@param port	Port to use for network communication
@return		Download handle to use for checking status and finishing export
@throws ResultsRepositoryBusyException
"
      end
    end

    class 191106 "ImportInterface"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Import interface. If you want to make new importing format, you have to implement this interface 
and register in the Importer class (for now, change the hardcoded table in Importer.java)


@author Jakub Lehotsky
"
      operation 543490 "setDatabase"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aDatabase" type class_ref 186242 // Database
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Notice given import implementation with Results Repository database, importer calls this 
prior to begin{Whatever}Import to notice about database instance to use.
@param aDatabase	Database instance
"
      end

      operation 543618 "beginAnalysesImport"
	public return_type class_ref 134658 // UploadHandle
	nparams 2
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Begins analyses import, you should implement the recieving of single import package to 
InetAddress ip and port. All the importing functionality should be done via some callback 
function, you should pass this as the argument to <code>database.uploadFile</code> method.
It is called after the file has been uploaded. (see <code>FileUploadCallbackInterface</code>) 
Otherwise this methods works like <code>uploadFile</code> from Database.java, using 
<code>getAnalysesImportStatus</code> nad <code>endAnalysesImportStatus</code> accordingly.
@see cz.cuni.mff.been.resultsrepository.Database#uploadFile 
   
@param ip	ip address to recieve imported package from
@param port	Port to use for network communication
@return		Download handle to use for checking status and finishing import
@throws ResultsRepositoryBusyException
"
      end

      operation 543746 "beginExperimentsImport"
	public return_type class_ref 134658 // UploadHandle
	nparams 2
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Begins experiments import, you should implement the recieving of single import package to 
InetAddress ip and port. All the importing functionality should be done via some callback 
function, you should pass this as the argument to <code>database.uploadFile</code> method.
It is called after the file has been uploaded. (see <code>FileUploadCallbackInterface</code>) 
Otherwise this methods works like <code>uploadFile</code> from Database.java, using 
<code>getAnalysesImportStatus</code> nad <code>endAnalysesImportStatus</code> accordingly.
@see cz.cuni.mff.been.resultsrepository.Database#uploadFile 
   
@param ip	ip address to recieve imported package from
@param port	Port to use for network communication
@return		Download handle to use for checking status and finishing import
@throws ResultsRepositoryBusyException
"
      end

      operation 543874 "beginBinariesImport"
	public return_type class_ref 134658 // UploadHandle
	nparams 2
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Begins binaries import, you should implement the recieving of single import package to 
InetAddress ip and port. All the importing functionality should be done via some callback 
function, you should pass this as the argument to <code>database.uploadFile</code> method.
It is called after the file has been uploaded. (see <code>FileUploadCallbackInterface</code>) 
Otherwise this methods works like <code>uploadFile</code> from Database.java, using 
<code>getAnalysesImportStatus</code> nad <code>endAnalysesImportStatus</code> accordingly.
@see cz.cuni.mff.been.resultsrepository.Database#uploadFile 
 
@param ip	ip address to recieve imported package from
@param port	Port to use for network communication
@return		Download handle to use for checking status and finishing import
@throws ResultsRepositoryBusyException
"
      end

      operation 544002 "beginRunsImport"
	public return_type class_ref 134658 // UploadHandle
	nparams 2
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Begins runs import, you should implement the recieving of single import package to 
InetAddress ip and port. All the importing functionality should be done via some callback 
function, you should pass this as the argument to <code>database.uploadFile</code> method.
It is called after the file has been uploaded. (see <code>FileUploadCallbackInterface</code>) 
Otherwise this methods works like <code>uploadFile</code> from Database.java, using 
<code>getAnalysesImportStatus</code> nad <code>endAnalysesImportStatus</code> accordingly.
@see cz.cuni.mff.been.resultsrepository.Database#uploadFile 
  
@param ip	ip address to recieve imported package from
@param port	Port to use for network communication
@return		Download handle to use for checking status and finishing import
@throws ResultsRepositoryBusyException
"
      end
    end

    class 190338 "FileUploadCallbackInterface"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Callback interface used after file is uploaded into Results Repository database.
This is used for all functionality needed to be executed after some file is finished with 
uploading into Results Repository. Now its used for importing and for making statistical 
evaluation after results has been uploaded. 

@author Jakub Lehotsky
"
      operation 540546 "callbackFunction"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" explicit_type "Object"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Implement this function to do, what needs to be done

@param data	General data, you can set up to accept it what you want when registering 
				upload callback.
"
      end

      operation 540674 "getAid"
	public return_type class_ref 130434 // AID
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return associated Analysis ID
"
      end

      operation 540802 "getEid"
	public return_type class_ref 133378 // EID
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return associated Experiment ID
"
      end

      operation 540930 "getBid"
	public return_type class_ref 138754 // BID
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return associated Binary ID
"
      end

      operation 541058 "getRid"
	public return_type class_ref 140290 // RID
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return associated Run ID
"
      end
    end

    class 192258 "ResultsRepositoryDebugInterface"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Debugging interface for communication with debugging parts and unit testing parts of been

@author Jakub Lehotsky
"
      classrelation 234882 // <generalisation>
	relation 234882 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 234882 // <generalisation>
	  b parent class_ref 130818 // Remote
      end

      attribute 252930 "RMI_NAME"
	public explicit_type "String"
	init_value "=  \"debug\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
RMI name

"
      end

      operation 562434 "enqueueScriptExecution"
	public explicit_return_type "void"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param in name "functionToRun" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Adds new function execution into the background queue of R scripts execution

@param 	aid	Analysis ID
@param	eid Experiment ID
@param	functionToRun	the string containing function to be executed in R
@throws RemoteException
"
      end

      operation 562562 "enqueueScriptExecution"
	public explicit_return_type "void"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param in name "functionToRun" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Adds new function execution into the background queue of R scripts execution

@param 	aid	Analysis ID
@param	eid Experiment ID
@param	bid	Binary ID
@param	functionToRun	the string containing function to be executed in R
@throws RemoteException 
"
      end

      operation 562690 "enqueueScriptExecution"
	public explicit_return_type "void"
	nparams 5
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	  param in name "functionToRun" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Adds new function execution into the background queue of R scripts execution

@param 	aid	Analysis ID
@param	eid Experiment ID
@param	bid Binary ID
@param rid 
@param	functionToRun	the string containing function to be executed in R
@throws RemoteException 
"
      end

      operation 562818 "resourceRScripts"
	public explicit_return_type "void"
	nparams 0
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 186882 // ResultsRepositoryException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Causes R scripts (in working directory) to be reloaded into R 

@throws RemoteException 
@throws ResultsRepositoryException 
"
      end
    end

    class 186114 "AnalysisEntityManager"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Simple class for performing of logs collection from Task Manager and storing it
in database

@author Jakub Lehotsky
"
      attribute 243458 "BM_CONTACT_DELETE_PERMIT_ERROR"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"Unable to contact benchmark manager to get analysis deletion permit.\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Unable to contact Benchmark manager to get deletion permit error 
"
      end

      classrelation 219266 // analysisEntityManager (<unidirectional association>)
	relation 219266 --->
	  a role_name "analysisEntityManager" init_value "=  null" class_relation private
	    comment " Single instance of load collector 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 219266 // analysisEntityManager (<unidirectional association>)
	  b parent class_ref 186114 // AnalysisEntityManager
      end

      classrelation 219394 // database (<unidirectional association>)
	relation 219394 --->
	  a role_name "database" private
	    comment " Databse that is used for results in Results Repository 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 219394 // database (<unidirectional association>)
	  b parent class_ref 186242 // Database
      end

      classrelation 219522 // metaManager (<unidirectional association>)
	relation 219522 --->
	  a role_name "metaManager" class_relation private
	    comment " Metadata manager - loading and storing 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 219522 // metaManager (<unidirectional association>)
	  b parent class_ref 186370 // MetadataManager
      end

      classrelation 219650 // statisticsManager (<unidirectional association>)
	relation 219650 --->
	  a role_name "statisticsManager" private
	    comment " Internal statistics manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 219650 // statisticsManager (<unidirectional association>)
	  b parent class_ref 186498 // StatisticsManager
      end

      classrelation 219778 // graphManager (<unidirectional association>)
	relation 219778 --->
	  a role_name "graphManager" private
	    comment " Internal graph manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 219778 // graphManager (<unidirectional association>)
	  b parent class_ref 186626 // GraphManager
      end

      classrelation 219906 // rScriptsRunner (<unidirectional association>)
	relation 219906 --->
	  a role_name "rScriptsRunner" private
	    comment " Internal scripts runner reference 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 219906 // rScriptsRunner (<unidirectional association>)
	  b parent class_ref 186754 // RScriptsRunner
      end

      operation 508162 "AnalysisEntityManager"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
 Construction, notify load collector about Results Repository database when constructing
"
      end

      operation 508290 "getInstance"
	class_operation public return_type class_ref 186114 // AnalysisEntityManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the single instance of load collector

@return	Reference to LoadCollector instance 
"
      end

      operation 508418 "initialize"
	public explicit_return_type "void"
	nparams 5
	  param inout name "database" type class_ref 186242 // Database
	  param inout name "metaManager" type class_ref 186370 // MetadataManager
	  param inout name "statisticsManager" type class_ref 186498 // StatisticsManager
	  param inout name "graphManager" type class_ref 186626 // GraphManager
	  param inout name "scriptsRunner" type class_ref 186754 // RScriptsRunner
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Use to initialize analysis entity manager 

@param database			Instance of Results Repository database
@param metaManager		Instance of Results Repository metadata manager
@param statisticsManager	Instance of Results Repository statistics manager
@param graphManager		Instance of Results Repository graph manager
@param scriptsRunner 
"
      end

      operation 508546 "addAnalysis"
	public explicit_return_type "void"
	nparams 1
	  param inout name "description" type class_ref 131202 // AnalysisEntity
	nexceptions 1
	  exception class_ref 186882 // ResultsRepositoryException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Adds new analysis into results repository, so it can be filled with entities and results,
it must not exist before.

@param description Description of analysis - all metadata for creation

@throws ResultsRepositoryException in case analysis already exists or some I/O error occurs 
"
      end

      operation 508674 "addAnalysisMetadata"
	public explicit_return_type "void"
	nparams 3
	  param inout name "analysisId" type class_ref 130434 // AID
	  param in name "key" explicit_type "String"
	  param in name "value" explicit_type "String"
	nexceptions 1
	  exception class_ref 186882 // ResultsRepositoryException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allows adding new custom analysis metadata. 

@param analysisId	Analysis Id
@param key			Key of metadata item
@param value			Value of metadata item
@throws ResultsRepositoryException	In case you attempt to overwrite existing metadata item
"
      end

      operation 508802 "createAnalysis"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aid" type class_ref 130434 // AID
	nexceptions 1
	  exception class_ref 186882 // ResultsRepositoryException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ************ Analysis ************** 

Initializes new analysis (creates it in the database)

@param aid
           Analysis ID
@throws ResultsRepositoryException
            In the case of error (cause IllegalArgumentException if
            analysis already exists)
"
      end

      operation 508930 "analysisFinished"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "aid" type class_ref 130434 // AID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Asks benchmark manager, whether analysis is finished

@param aid	Analysis Id

@return	True if analysis is finished
"
      end

      operation 509058 "getAnalyses"
	public return_type class_ref 187010 // Entity
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}<AID>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "
Returns the list of analyses stored in Results Repository

@return The list
"
      end

      operation 509186 "isValidAid"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "aid" type class_ref 130434 // AID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Checks whether AID conforms to some existing analysis in results
repository

@param aid
           Analysis ID
@return True iff analysis does exist in results repository
"
      end

      operation 509314 "ensureValidAid"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aid" type class_ref 130434 // AID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Ensures that given AID belongs to a valid analysis in results repository,
otherwise throws an IllegalArgumentException

@param aid
           Analysis ID
"
      end

      operation 509442 "getAnalysis"
	public return_type class_ref 187010 // Entity
	nparams 1
	  param inout name "aid" type class_ref 130434 // AID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<AID> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the Entity&lt;AID&gt; object representing analysis for use in GUI

@param aid	Analysis Id

@return	The analysis entity
"
      end

      operation 509570 "ensureSuccessLoadAnalysisMetadata"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "analysisMetadata" type class_ref 187138 // MetadataRef
	  param inout name "aid" type class_ref 130434 // AID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Tries to load analysis metadata and notify, whether it was successful, eventually
log error

@param analysisMetadata	Reference to metadata object, where they will be stored
@param aid	Analysis Id
@return	True if metadata was loaded successfuly
"
      end

      operation 509698 "ensureSuccessStoreAnalysisMetadata"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "analysisMetadata" type class_ref 187266 // Metadata
	  param inout name "aid" type class_ref 130434 // AID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Tries to store analysis metadata and notify, whether it was successful, eventually
log error

@param analysisMetadata	Reference to metadata object, where they will be stored
@param aid	Analysis Id
@return	True if metadata was loaded successfuly
"
      end

      operation 509826 "setAnalysisComment"
	public explicit_return_type "void"
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param in name "comment" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets the comment metadata of an analysis

@param aid	Analysis Id
@param comment	Comment to set
"
      end

      operation 509954 "eraseAnalysis"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "aid" type class_ref 130434 // AID
	nexceptions 1
	  exception class_ref 187394 // DeleteLockedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Deletes analysis from database (all metadata, experiments, results, logs,
load info ...)

@param aid
           Analysis ID
@return True iff succesful

@throws DeleteLockedException	If analysis is locked for deleting 
"
      end

      operation 510082 "uploadAnalysisFile"
	public return_type class_ref 134658 // UploadHandle
	nparams 5
	  param inout name "aid" type class_ref 130434 // AID
	  param in name "name" explicit_type "String"
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "int"
	  param inout name "blocking" explicit_type "boolean"
	nexceptions 3
	  explicit_exception "UnknownHostException"
	  explicit_exception "IOException"
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Uploads analysis file (short, passed as an argument)

@see cz.cuni.mff.been.resultsrepository.Database#uploadFile

@param aid
           Analysis ID
@param name
           Name of file to store
@param host
           Hostname to connect to for data retrieving
@param port
           Port used in connection with host
@param blocking
           Determines, whether to use blocking transfer
@return Handle of network connection (null for blocking upload)
@throws UnknownHostException
            In the case host could not be found
@throws IOException
            In the case of some IO error
@throws ResultsRepositoryBusyException
            In the case of non-blocking upload when Results Repository is
            busy with (down/)uploading files
"
      end

      operation 510210 "downloadAnalysisFile"
	public return_type class_ref 149762 // DownloadHandle
	nparams 5
	  param inout name "aid" type class_ref 130434 // AID
	  param in name "name" explicit_type "String"
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "int"
	  param inout name "blocking" explicit_type "boolean"
	nexceptions 3
	  explicit_exception "UnknownHostException"
	  explicit_exception "IOException"
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Download analysis file

@see cz.cuni.mff.been.resultsrepository.Database#downloadFile

@param aid
           Analysis ID
@param name
           Name of file to download
@param host
           Hostname to connect to for data retrieving
@param port
           Port used in connection with host
@param blocking
           Determines, whether to use blocking transfer
@return Handle of network connection
@throws UnknownHostException
            In the case host could not be found
@throws IOException
            In the case of some IO error
@throws ResultsRepositoryBusyException
            In the case of non-blocking upload when Results Repository is
            busy with (down/)uploading files
"
      end

      operation 510338 "getAnalysisGraphCount"
	public explicit_return_type "int"
	nparams 2
	  param inout name "graphType" type class_ref 187650 // GraphType
	  param inout name "aid" type class_ref 130434 // AID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the analysis graph count of a given graph type

@param graphType	Load or Results graph type
@param aid	Analysis Id
@return	The count of graphs
"
      end

      operation 510466 "getAnalysisGraphInfo"
	public return_type class_ref 187778 // GraphInfo
	nparams 3
	  param inout name "graphType" type class_ref 187650 // GraphType
	  param inout name "aid" type class_ref 130434 // AID
	  param in name "index" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the analysis graph info for a given graph. GraphInfo object returned contains 
width, height and title of the graph

@param graphType	Load or Results graph type
@param aid	Analysis Id
@param index	Index of graph - can be one of 0..getAnalysisGraphCount()-1
@return	The graph info

@throws IOException	In case of error of getting metadata
"
      end

      operation 510594 "getAnalysisGraphPath"
	public explicit_return_type "String"
	nparams 3
	  param inout name "graphType" type class_ref 187650 // GraphType
	  param inout name "aid" type class_ref 130434 // AID
	  param in name "index" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the complete path for a given analysis graph

@param graphType
		Load or Results graph type
@param aid
		Analysis Id
@param index
		Index of graph - can be one of 0..getAnalysisGraphCount()-1
@return
		The path to the file with graph image on disk
@throws IOException
		if this info couldn't be retrieved because of I/O problems
@throws IllegalArgumentException 
		if graph doesn't exist
"
      end
    end

    class 186242 "Database"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Note: internal been api uses ResultsRepositoryException, gui uses
RuntimeException - unite this

/** Implementation of <code>DatabaseInterface</code> Instance of this class
used inside Results Repository This is the core of the whole Results
Repository - it allows data storage and retrieval in the database, it
performs storage of binary representation of results, simple database
querying (simple selects), and network connection synchronization

@author Jakub Lehotsky
"
      attribute 244354 "UPLOAD_BUFFER_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  4096"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Buffer size for file uploading to database 
"
      end

      attribute 244482 "DOWNLOAD_BUFFER_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  4096"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Buffer size for file downloading from database 
"
      end

      attribute 244610 "TOO_MANY_CONNECTIONS_MESSAGE"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"Too many connections to Results Repository.\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Too many connections text message 
"
      end

      attribute 244738 "RSCRIPTS_DIRECTORY"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"rscripts\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Name of the dir in database to store rscripts 
"
      end

      attribute 244866 "INVALIDATE_RSCRIPTS_DIRECTORY"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"invalidate\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Name of the dir in database to store scripts to be executed on invalidation 
"
      end

      attribute 244994 "LOAD_STORAGE_DIRECTORY"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"load\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Name of the dir in database to store load information 
"
      end

      attribute 245122 "TEMP_DIR_EXT"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \".unpack\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Extensions of temporary directory for R scripts unpacking 
"
      end

      classrelation 223106 // benchmarkManagerInstance (<unidirectional association>)
	relation 223106 --->
	  a role_name "benchmarkManagerInstance" class_relation private
	    comment " Running instance of Benchmark Manager to connect to 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 223106 // benchmarkManagerInstance (<unidirectional association>)
	  b parent class_ref 134018 // BenchmarkManagerGUIInterface
      end

      classrelation 223234 // dbInstance (<unidirectional association>)
	relation 223234 --->
	  a role_name "dbInstance" init_value "=  null" class_relation private
	    comment " The single existing intance of database 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 223234 // dbInstance (<unidirectional association>)
	  b parent class_ref 186242 // Database
      end

      attribute 245250 "activeConnections"
	class_attribute private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Active connections counter 
"
      end

      attribute 245378 "maxConnections"
	class_attribute private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Maximal network connections (uploads + downloads) 
"
      end

      attribute 245506 "databasePath"
	class_attribute private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Path to the Results Repository path with stored results 
"
      end

      classrelation 223362 // ridManager (<unidirectional association>)
	relation 223362 --->
	  a role_name "ridManager" class_relation private
	    comment " Internal RID Manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 223362 // ridManager (<unidirectional association>)
	  b parent class_ref 189186 // RunValidityMapsManager
      end

      classrelation 223490 // graphManager (<unidirectional association>)
	relation 223490 --->
	  a role_name "graphManager" class_relation private
	    comment " Internal graph manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 223490 // graphManager (<unidirectional association>)
	  b parent class_ref 186626 // GraphManager
      end

      classrelation 223618 // statisticsManager (<unidirectional association>)
	relation 223618 --->
	  a role_name "statisticsManager" class_relation private
	    comment " Internal statistics manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 223618 // statisticsManager (<unidirectional association>)
	  b parent class_ref 186498 // StatisticsManager
      end

      classrelation 223746 // loadCollector (<unidirectional association>)
	relation 223746 --->
	  a role_name "loadCollector" class_relation private
	    comment " Internal load collecor of database 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unused\")
"
	    classrelation_ref 223746 // loadCollector (<unidirectional association>)
	  b parent class_ref 189314 // LoadCollector
      end

      classrelation 223874 // logCollector (<unidirectional association>)
	relation 223874 --->
	  a role_name "logCollector" class_relation private
	    comment " Internal log collector of database 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 223874 // logCollector (<unidirectional association>)
	  b parent class_ref 189442 // LogCollector
      end

      classrelation 224002 // logStorage (<unidirectional association>)
	relation 224002 --->
	  a role_name "logStorage" class_relation private
	    comment " Internal results repository log storage 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 224002 // logStorage (<unidirectional association>)
	  b parent class_ref 185090 // FilesystemLogStorage
      end

      attribute 245634 "connectionSemaphore"
	class_attribute private explicit_type "Semaphore"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Connection semaphore - download/upload synchronization in blocking
synchronization mode

"
      end

      classrelation 224130 // downloadStatuses (<unidirectional association>)
	relation 224130 --->
	  stereotype "Map"
	  a role_name "downloadStatuses" init_value "=  Collections
			.synchronizedMap(new HashMap<DownloadHandle, DownloadStatus>())" private
	    comment " Download statuses. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, DownloadStatus> ${name}${value};
"
	    classrelation_ref 224130 // downloadStatuses (<unidirectional association>)
	  b parent class_ref 149762 // DownloadHandle
      end

      classrelation 224258 // uploadStatuses (<unidirectional association>)
	relation 224258 --->
	  stereotype "Map"
	  a role_name "uploadStatuses" init_value "=  Collections
			.synchronizedMap(new HashMap<UploadHandle, UploadStatus>())" private
	    comment " Upload statuses. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, UploadStatus> ${name}${value};
"
	    classrelation_ref 224258 // uploadStatuses (<unidirectional association>)
	  b parent class_ref 134658 // UploadHandle
      end

      classrelation 224386 // uploadCallbacks (<unidirectional association>)
	relation 224386 --->
	  stereotype "Map"
	  a role_name "uploadCallbacks" init_value "=  Collections
			.synchronizedMap(new HashMap<UploadHandle, FileUploadCallbackInterface>())" private
	    comment " Upload callbacks. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, FileUploadCallbackInterface> ${name}${value};
"
	    classrelation_ref 224386 // uploadCallbacks (<unidirectional association>)
	  b parent class_ref 134658 // UploadHandle
      end

      classrelation 224514 // uploadCallbackData (<unidirectional association>)
	relation 224514 --->
	  stereotype "Map"
	  a role_name "uploadCallbackData" init_value "=  Collections
			.synchronizedMap(new HashMap<UploadHandle, Object>())" private
	    comment " Upload callback data. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, Object> ${name}${value};
"
	    classrelation_ref 224514 // uploadCallbackData (<unidirectional association>)
	  b parent class_ref 134658 // UploadHandle
      end

      classrelation 224642 // uploadErrorMessages (<unidirectional association>)
	relation 224642 --->
	  stereotype "Map"
	  a role_name "uploadErrorMessages" init_value "=  Collections
			.synchronizedMap(new HashMap<UploadHandle, String[]>())" private
	    comment " Upload error messages. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, String[]> ${name}${value};
"
	    classrelation_ref 224642 // uploadErrorMessages (<unidirectional association>)
	  b parent class_ref 134658 // UploadHandle
      end

      attribute 245762 "tempDirectory"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Temporary directory 
"
      end

      classrelation 224770 // metaManager (<unidirectional association>)
	relation 224770 --->
	  a role_name "metaManager" class_relation private
	    comment " Metadata manager - loading and storing 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 224770 // metaManager (<unidirectional association>)
	  b parent class_ref 186370 // MetadataManager
      end

      classrelation 224898 // rolesManager (<unidirectional association>)
	relation 224898 --->
	  a role_name "rolesManager" class_relation private
	    comment " Role list manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 224898 // rolesManager (<unidirectional association>)
	  b parent class_ref 189570 // RolesManager
      end

      classrelation 225026 // rManager (<unidirectional association>)
	relation 225026 --->
	  a role_name "rManager" class_relation private
	    comment " Internal Callbacks Manager Factory and holder 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 225026 // rManager (<unidirectional association>)
	  b parent class_ref 189698 // RManager
      end

      classrelation 225154 // rScriptsRunner (<unidirectional association>)
	relation 225154 --->
	  a role_name "rScriptsRunner" class_relation private
	    comment " Internal Callbacks Manager scripts runner and scheduler 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 225154 // rScriptsRunner (<unidirectional association>)
	  b parent class_ref 186754 // RScriptsRunner
      end

      classrelation 225282 // importer (<unidirectional association>)
	relation 225282 --->
	  a role_name "importer" class_relation private
	    comment " Internal Importer instance 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unused\")
"
	    classrelation_ref 225282 // importer (<unidirectional association>)
	  b parent class_ref 188546 // Importer
      end

      classrelation 225410 // exporter (<unidirectional association>)
	relation 225410 --->
	  a role_name "exporter" class_relation private
	    comment " Internal Exporter instance 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unused\")
"
	    classrelation_ref 225410 // exporter (<unidirectional association>)
	  b parent class_ref 188418 // Exporter
      end

      classrelation 225538 // lockManager (<unidirectional association>)
	relation 225538 --->
	  a role_name "lockManager" class_relation private
	    comment " Internal Lock Manager instance 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unused\")
"
	    classrelation_ref 225538 // lockManager (<unidirectional association>)
	  b parent class_ref 189826 // LockManager
      end

      classrelation 225666 // taskListManager (<unidirectional association>)
	relation 225666 --->
	  a role_name "taskListManager" private
	    comment " Internal Task List manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 225666 // taskListManager (<unidirectional association>)
	  b parent class_ref 188802 // TaskListManager
      end

      classrelation 225794 // analysisEntityManager (<unidirectional association>)
	relation 225794 --->
	  a role_name "analysisEntityManager" private
	    comment " Analyses level of entity manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 225794 // analysisEntityManager (<unidirectional association>)
	  b parent class_ref 186114 // AnalysisEntityManager
      end

      classrelation 225922 // experimentEntityManager (<unidirectional association>)
	relation 225922 --->
	  a role_name "experimentEntityManager" private
	    comment " Experiment level of entity manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 225922 // experimentEntityManager (<unidirectional association>)
	  b parent class_ref 188930 // ExperimentEntityManager
      end

      classrelation 226050 // binaryEntityManager (<unidirectional association>)
	relation 226050 --->
	  a role_name "binaryEntityManager" private
	    comment " Binary level of entity manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 226050 // binaryEntityManager (<unidirectional association>)
	  b parent class_ref 188674 // BinaryEntityManager
      end

      classrelation 226178 // runEntityManager (<unidirectional association>)
	relation 226178 --->
	  a role_name "runEntityManager" private
	    comment " Run level of entity manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 226178 // runEntityManager (<unidirectional association>)
	  b parent class_ref 189954 // RunEntityManager
      end

      operation 523650 "Database"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Constructor - private, void for singleton use

"
      end

      operation 523778 "getInstance"
	class_operation public return_type class_ref 186242 // Database
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Return single instance of Results Repository database

@return reference single running instance of Database
"
      end

      operation 523906 "initialize"
	public explicit_return_type "void"
	nparams 3
	  param in name "dataPath" explicit_type "String"
	  param in name "tempDir" explicit_type "String"
	  param in name "aMaxConnections" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Initialize Results Repository database, call to this method intializes all the necessary
components of Results Repository according to their dependencies and pass their references
to each other as needed. It must be called before any other use of Results Repository 

@param dataPath
				path to Results Repository database in file system
@param tempDir 
				path to temporary directory
@param aMaxConnections
				maximal simultaneous connections for Results Repository, 0
				means no limit
"
      end

      operation 524034 "initBMReference"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Initializes Benchmark Manager reference (gets its remote interface and store it for use) 
"
      end

      operation 524162 "getLogStorage"
	public return_type class_ref 185090 // FilesystemLogStorage
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return the logStorage
"
      end

      operation 524290 "getAnalysisEntityManager"
	public return_type class_ref 186114 // AnalysisEntityManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns internal instance of AnalysisEntityManager

@return	The instance
"
      end

      operation 524418 "getExperimentEntityManager"
	public return_type class_ref 188930 // ExperimentEntityManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns internal instance of ExperimentEntityManager

@return	The instance
"
      end

      operation 524546 "getBinaryEntityManager"
	public return_type class_ref 188674 // BinaryEntityManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns internal instance of BinaryEntityManager

@return	The instance
"
      end

      operation 524674 "getRunEntityManager"
	public return_type class_ref 189954 // RunEntityManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns internal instance of BinaryEntityManager

@return	The instance
"
      end

      operation 524802 "getRManager"
	public return_type class_ref 189698 // RManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns R manager instance

@return	The instance
"
      end

      operation 524930 "getRunValidityMapsManager"
	public return_type class_ref 189186 // RunValidityMapsManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns run validity map manager 

@return	The instance
"
      end

      operation 525058 "getLockManager"
	public return_type class_ref 189826 // LockManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns lock manager instance  

@return	The instance
"
      end

      operation 525186 "getBenchmarkManagerInstance"
	public return_type class_ref 134018 // BenchmarkManagerGUIInterface
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns benchmark manager Interface

@return	Interface of running benchmark manager 
"
      end

      operation 525314 "getTempDirectory"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns temporary directory of Results Repository

@return	The directory
"
      end

      operation 525442 "shutdown"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Shutdown of results repository database. 
"
      end

      operation 525570 "getLoadCollector"
	public return_type class_ref 189314 // LoadCollector
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns reference to internal load collector

@return Single valid LoadCollector instance
"
      end

      operation 525698 "getLogCollector"
	public return_type class_ref 189442 // LogCollector
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns reference to internal log collector

@return Single valid LogCollector instance
"
      end

      operation 525826 "getDatabasePath"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ************************************************* 
 **** ResultsRepositoryImplementation support **** 
 ************************************************* 

Returns path to stored database

@return The path
"
      end

      operation 525954 "getDirectoryInDatabase"
	public explicit_return_type "String"
	nparams 1
	  param inout name "aid" type class_ref 130434 // AID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Construcucts a path for analysis directory

@param aid
           Analysis ID
@return Fully qualified path
"
      end

      operation 526082 "getFileInDatabase"
	public explicit_return_type "String"
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param in name "filename" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Construcucts a path for filename to store (or stored) in a given analysis

@param aid
           Analysis ID
@param filename
           Filename of the file in database
@return Fully qualified path
"
      end

      operation 526210 "getDirectoryInDatabase"
	public explicit_return_type "String"
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Construcucts a path for experiment directory

@param aid
           Analysis ID
@param eid
           Experiment ID
@return Fully qualified path
"
      end

      operation 526338 "getFileInDatabase"
	public explicit_return_type "String"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param in name "filename" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Construcucts a path for filename to store (or stored) in a given
experiment

@param aid
           Analysis ID
@param eid
           Experiment ID
@param filename
           Filename of the file in database
@return Fully qualified path
"
      end

      operation 526466 "getDirectoryInDatabase"
	public explicit_return_type "String"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Construcucts a path for binary directory

@param aid
           Analysis ID
@param eid
           Experiment ID
@param bid
           Binary ID
@return Fully qualified path
"
      end

      operation 526594 "getFileInDatabase"
	public explicit_return_type "String"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param in name "filename" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Construcucts a path for filename to store (or stored) in a given binary

@param aid
           Analysis ID
@param eid
           Experiment ID
@param bid
           Binary ID
@param filename
           Filename of the file in database
@return Fully qualified path
"
      end

      operation 526722 "getRScriptsDirectory"
	public explicit_return_type "String"
	nparams 1
	  param inout name "aid" type class_ref 130434 // AID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns a path where analysis stores its R scripts (no checking whteher
analysis or directory exists)

@param aid
           Analysis ID
@return Fully qualified path
"
      end

      operation 526850 "getRScriptsDirectory"
	public explicit_return_type "String"
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns a path where experiment stores its R scripts (no checking whteher
analysis or directory exists)

@param aid
           Analysis ID
@param eid
           Experiment ID
@return Fully qualified path
"
      end

      operation 526978 "getInvalidateScriptsDirectory"
	public explicit_return_type "String"
	nparams 1
	  param inout name "aid" type class_ref 130434 // AID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns a path to invalidate R scritps (to be executed after delete) 
directory for an analysis  

@param aid
		Analysis ID

@return Fully qualified path
"
      end

      operation 527106 "getInvalidateScriptsDirectory"
	public explicit_return_type "String"
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns a path to invalidate R scritps (to be executed after delete) 
directory for an experiment 

@param aid
		Analysis ID
@param eid
		Experiment ID

@return Fully qualified path
"
      end

      operation 527234 "getInvalidateScriptsDirectory"
	public explicit_return_type "String"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns a path to invalidate R scritps (to be executed after delete) 
directory for a binary 

@param aid
		Analysis ID
@param eid
		Experiment ID
@param bid
		Binary ID

@return Fully qualified path
"
      end

      operation 527362 "getLoadDirectory"
	public explicit_return_type "String"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns a path where load information of runs for a given binary is stored

@param aid
		Analysis ID
@param eid
		Experiment ID
@param bid
		Binary ID
@return Fully qualified path
"
      end

      operation 527490 "getAnalysisReferenceString"
	class_operation public explicit_return_type "String"
	nparams 1
	  param inout name "aid" type class_ref 130434 // AID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Constructs short string with analysis ID (useful for logs)

@param aid
           Analysis ID
@return String 'analysis <code>aid</code>'
"
      end

      operation 527618 "getExperimentReferenceString"
	class_operation public explicit_return_type "String"
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Constructs short string with analysis/experiment IDs (useful for logs)

@param aid
           Analysis ID
@param eid
           Experiment ID
@return String 'experiment <code>eid</code> (analysis <code>aid</code>)'
"
      end

      operation 527746 "getBinaryReferenceString"
	class_operation public explicit_return_type "String"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Constructs short string with analysis/experiment/binary IDs (useful for
logs)

@param aid
           Analysis ID
@param eid
           Experiment ID
@param bid
           Binary ID
@return String 'binary <code>bid</code> (analysis <code>aid</code>,
        experiment <code>eid</code>)'
"
      end

      operation 527874 "getRunReferenceString"
	class_operation public explicit_return_type "String"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Constructs short string with analysis/experiment/binary IDs (useful for
logs)

@param aid
           Analysis ID
@param eid
           Experiment ID
@param bid
           Binary ID
@param rid
           Run ID
@return String 'run <code>rid</code> (analysis <code>aid</code>,
        experiment <code>eid</code>, binary <code>bid</code>)'
"
      end

      operation 528002 "getActiveConnections"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns actual active connections (uploads/downloads)

@return Active connection count
"
      end

      operation 528130 "isBusy"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns true, if database is busy with uploading of a file (or files).

@return True if busy, False if ready for another upload (download)
"
      end

      operation 528258 "ensureMetadataNotNull"
	class_operation public explicit_return_type "boolean"
	nparams 3
	  param in name "metadata" explicit_type "String"
	  param in name "itemName" explicit_type "String"
	  param in name "referenceString" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns true if metadata is non-null, else logs error message about
itemName and entity described in referenceString

@param metadata
@param itemName
@param referenceString
@return true iff metadata is non-null
"
      end

      class 190082 "FileUploader"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 226306 // <generalisation>
	  relation 226306 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 226306 // <generalisation>
	    b parent class_ref 151042 // Thread
	end

	attribute 245890 "MAX_CREATE_TEMP_FILE_TRY_COUNT"
	  class_attribute const_attribute private explicit_type "int"
	  init_value "=  1024"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "
How many times we should try to create a temp file. See
<code>createTempFile</code> method for explanation, why we need
this constant.

"
	end

	classrelation 226434 // handle (<unidirectional association>)
	  relation 226434 --->
	    a role_name "handle" private
	      comment " Upload handle. 
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 226434 // handle (<unidirectional association>)
	    b parent class_ref 134658 // UploadHandle
	end

	attribute 246018 "host"
	  private explicit_type "String"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Host to upload file from 
"
	end

	attribute 246146 "port"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Port to download the file from. 
"
	end

	attribute 246274 "filename"
	  private explicit_type "String"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Filename, where to store file in database 
"
	end

	attribute 246402 "rScript"
	  private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "
Indicates whether we're upload r script and thus registration is
required

"
	end

	operation 528386 "FileUploader"
	  public explicit_return_type ""
	  nparams 5
	    param inout name "handle" type class_ref 134658 // UploadHandle
	    param in name "filename" explicit_type "String"
	    param in name "host" explicit_type "String"
	    param in name "port" explicit_type "int"
	    param inout name "rScript" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
Construction of thread

@param handle

@param filename
           Filename to store file to
@param host
           Host where file will be uploaded
@param port
           Port which this host use for this purpose
@param rScript
           True, if we're uploading R scripts package
"
	end

	operation 528514 "setStatus"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "status" type class_ref 134786 // UploadStatus
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
Sets the upload status to given value.

@param status
           downloaD status
"
	end

	operation 528642 "setErrorMessages"
	  private explicit_return_type "void"
	  nparams 1
	    param in name "errorMessages" explicit_type "String"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
Sets the error messages.

@param errorMessages
           error messages
"
	end

	operation 528770 "uploadAFile"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "tmpFile" explicit_type "File"
	  nexceptions 3
	    explicit_exception "UnknownHostException"
	    explicit_exception "IOException"
	    explicit_exception "InterruptedException"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
Performs an upload - connects through socket to given host and port,
downloads files and store them at destination place

@param tmpFile

@throws UnknownHostException
@throws IOException
@throws InterruptedException
"
	end

	operation 528898 "createTempFile"
	  private explicit_return_type "File"
	  nparams 0
	  nexceptions 1
	    explicit_exception "IOException"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
Creates teporary file in the <code>tmpDir</code> directory.

@return the temporary file

@throws IOException
            if the temporary file can not be created
"
	end

	operation 529026 "unpackAndValidateRScript"
	  private explicit_return_type "String"
	  nparams 1
	    param in name "path" explicit_type "String"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
Unpacks the contents of package and validates that its contents are valid
R package

@param path
           The path to the package to validate
@return The list of error messages while validating package
"
	end

	operation 529154 "run"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
Main thread function - just calls file uploading and logs occasional
errors

@see java.lang.Runnable#run()
"
	end
      end

      class 190210 "FileDownloader"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 226562 // <generalisation>
	  relation 226562 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 226562 // <generalisation>
	    b parent class_ref 151042 // Thread
	end

	classrelation 226690 // handle (<unidirectional association>)
	  relation 226690 --->
	    a role_name "handle" private
	      comment " Upload handle. 
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 226690 // handle (<unidirectional association>)
	    b parent class_ref 149762 // DownloadHandle
	end

	attribute 246530 "host"
	  private explicit_type "String"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Host to download file to 
"
	end

	attribute 246658 "port"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Port to download the file from. 
"
	end

	attribute 246786 "filename"
	  private explicit_type "String"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Filename, where to store file in database 
"
	end

	operation 529282 "FileDownloader"
	  public explicit_return_type ""
	  nparams 4
	    param inout name "handle" type class_ref 149762 // DownloadHandle
	    param in name "filename" explicit_type "String"
	    param in name "host" explicit_type "String"
	    param in name "port" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
Construction of thread

@param handle
           Handle of the file to be downloaded
@param filename
           Filename to store file to
@param host
           Hostname from which uploading sends data
@param port
           Port which this host use for this purpose
"
	end

	operation 529410 "setStatus"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "status" type class_ref 149890 // DownloadStatus
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
Sets the download status to given value.

@param status
           downloa status
"
	end

	operation 529538 "downloadAFile"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 3
	    explicit_exception "UnknownHostException"
	    explicit_exception "IOException"
	    explicit_exception "InterruptedException"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
Performs a download - sets database status to true (notice, that
database alone doesn't care how many simultaneous transfers run at a
time), connects through socket to given host and port, read file and
upload them

@throws UnknownHostException
@throws IOException
@throws InterruptedException
"
	end

	operation 529666 "run"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
Main thread function - just calls file uploading and logs occasional
errors

@see java.lang.Runnable#run()
"
	end
      end

      operation 529794 "uploadFile"
	public return_type class_ref 134658 // UploadHandle
	nparams 7
	  param in name "filename" explicit_type "String"
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "int"
	  param inout name "blocking" explicit_type "boolean"
	  param inout name "rScript" explicit_type "boolean"
	  param inout name "callbackInterface" type class_ref 190338 // FileUploadCallbackInterface
	  param inout name "data" explicit_type "Object"
	nexceptions 3
	  explicit_exception "UnknownHostException"
	  explicit_exception "IOException"
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
General method, wich uploads a file into Results Repository database. The
client must open the socket on some port before calling this function.
Then it calls the <code>uploadFile</code> method.

This method work asynchronously and returns immediately. Before return it
starts a new thread that will receive the file contents from the socket
open on given host and port.

If there is any error when sending the file contents, the socket is
closed.

Client has an opportunity to check (via the
<code>getFileUploadStatus</code> method to check the current status of
upload (eventually can be error)

After the upload finishes, client should close the returned handle via
the <code>endFileUpload</code> method.

If you need to perform some additional functionality, after file is
uploaded, you should pass it call back function (and its argument
accordingly), otherwise leave them to null. Note: this is used only in
this low-level uploadFile, not in special upload functions and is
reserved for statistical computation and importing.

@param filename
           Filename of file to store uploaded data
@param host
           Hostname, from which file is uploaded
@param port
           Open port for network transfer
@param blocking
           Determines whether to use blocking or non-blocking version of
           upload
@param rScript
			  Tells, whether we're uploading rScript
@param callbackInterface
           callback to run after file is uploaded (can be null)
@param data
           argument of callback (if there is one, can be null)
@return UploadHandle, which could be used to refer to transfer later
@throws UnknownHostException
@throws IOException
@throws ResultsRepositoryBusyException
"
      end

      operation 529922 "downloadFile"
	public return_type class_ref 149762 // DownloadHandle
	nparams 4
	  param in name "filename" explicit_type "String"
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "int"
	  param inout name "blocking" explicit_type "boolean"
	nexceptions 3
	  explicit_exception "UnknownHostException"
	  explicit_exception "IOException"
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
General method, wich downloads a file from Results Repository database.
The client must open the socket on some port before calling this
function. Then it calls the <code>downloadFile</code> method.

This method work asynchronously and returns immediately. Before return it
starts a new thread that will receive the file contents from the socket
open on given host and port.

If there is any error when sending the file contents, the socket is
closed.

Client has an opportunity to check (via the
<code>getFileDownloadStatus</code> method to check the current status
of download (eventually can be error)

After the upload finishes, client should close the returned handle via
the <code>endFileDownload</code> method.

@param filename
           Filename of file to store uploaded data
@param host
           Hostname, from which file is uploaded
@param port
           Open port for network transfer
@param blocking
           Determines, whether to use blocking download
@return DownloadHandle, which could be used to refer transfer later
@throws UnknownHostException
@throws IOException
@throws ResultsRepositoryBusyException
"
      end

      operation 530050 "getFileUploadStatus"
	public return_type class_ref 134786 // UploadStatus
	nparams 1
	  param inout name "handle" type class_ref 134658 // UploadHandle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the status of the file upload. Result is one of the values listed
in the <code>FileTransferStatus</code> enumeration.

Values <code>INITIALIZING</code> and <code>UPLOADING</code> mean that
Results Repository still works on the file upload. Values
<code>ACCEPTED</code> and <code>ERROR</code> mean that Results
Repository has finished its work (either successfully or unsuccessfully)
and the download handle is ready to be closed by the
<code>endFileUpload</code> method.

@param handle
           file upload handle
@return upload status
"
      end

      operation 530178 "getFileDownloadStatus"
	public return_type class_ref 149890 // DownloadStatus
	nparams 1
	  param inout name "handle" type class_ref 149762 // DownloadHandle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the status of the file download. Result is one of the values
listed in the <code>FileTransferStatus</code> enumeration.

Values <code>INITIALIZING</code> and <code>DOWNLOADING</code> mean
that Software Repository still works on the file download. Values
<code>SUCCEEDED</code> and <code>ERROR</code> mean that Results
Repository has finished its work (either successfully or unsuccessfully)
and the download handle is ready to be closed by the
<code>endFileDownload</code> method.

@param handle
           file download handle
@return download status
"
      end

      operation 530306 "endFileUpload"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handle" type class_ref 134658 // UploadHandle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Closes the upload handle. Client should call this method after the upload
status returned by <code>getFileUploadStatus</code> has value
<code>ACCEPTED</code>, or <code>ERROR</code>.

If the client doesn't close the upload handle, Results Repository will
leak a little amount of memory. However, no other resources than memory
(such as open files, locks...) are associated with the upload handle.

@param handle
           upload handle
"
      end

      operation 530434 "endFileDownload"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handle" type class_ref 149762 // DownloadHandle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Closes the download handle. Client should call this method after the
downlaod status returned by <code>getFileDownloadStatus</code> has
value <code>SUCCEEDED</code> or <code>ERROR</code>.

If the client doesn't close the download handle, Software Repository will
leak a little amount of memory. However, no other resources than memory
(such as open files, locks...) are associated with the download handle.

@param handle
           download handle
"
      end

      operation 530562 "eraseDirectoryRecursively"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "dir" explicit_type "File"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Helper method for recursive directory erasing

@param dir
           Directory to delete
@return True iff successful
"
      end

      operation 530690 "getRejectedUploadErrorMessages"
	public explicit_return_type "String"
	nparams 1
	  param inout name "handle" type class_ref 134658 // UploadHandle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
In the case, we were uploading a R package for registration and it was rejected,
this method returns the list of error messages describing the reasons, why it was
rejected.

@param handle	Upload handle of the R package transfer

@return	The String array with messages
"
      end
    end

    class 186370 "MetadataManager"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Class implementing manipulation with metadata and caching their loading (if possible)

@author Jakub Lehotsky
"
      attribute 249730 "ANALYSIS_METADATA_FILENAME"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"analysis.meta\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Analysis metadata filename 
"
      end

      attribute 249858 "EXPERIMENT_METADATA_FILENAME"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"experiment.meta\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Experiment metadata filename 
"
      end

      attribute 249986 "BINARY_METADATA_FILENAME"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"binary.meta\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Binary metadata filename 
"
      end

      classrelation 233218 // database (<unidirectional association>)
	relation 233218 --->
	  a role_name "database" class_relation private
	    comment " Reference to results repository database 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 233218 // database (<unidirectional association>)
	  b parent class_ref 186242 // Database
      end

      classrelation 233346 // mMInstance (<unidirectional association>)
	relation 233346 --->
	  a role_name "mMInstance" init_value "=  null" class_relation private
	    comment " The single existing intance of RID Manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 233346 // mMInstance (<unidirectional association>)
	  b parent class_ref 186370 // MetadataManager
      end

      attribute 250114 "ASCII_TAB"
	class_attribute const_attribute protected explicit_type "String"
	init_value "=  \"\\t\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Ascii of tab character 
"
      end

      operation 553090 "MetadataManager"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Constructor - private, void for singleton use 
"
      end

      operation 553218 "getInstance"
	class_operation public return_type class_ref 186370 // MetadataManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Return single instance of Graph manager 

@return	reference single running instance of Graph manager
"
      end

      operation 553346 "initialize"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "database" type class_ref 186242 // Database
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Initialize Metadata Manager before its first use 

@param database	Instance of Results Repository database
"
      end

      operation 553474 "setMetadataItem"
	public explicit_return_type "void"
	nparams 3
	  param in name "metaFile" explicit_type "String"
	  param in name "key" explicit_type "String"
	  param in name "value" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Stores metadata key-value into metadat file, if there is no item with key,
creates a new one.

@param metaFile	File with metadata 
@param key	Key of metadata item
@param value	Value of metadata item
"
      end

      operation 553602 "storeAnalysisMetadata"
	public explicit_return_type "void"
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "metadata" type class_ref 187266 // Metadata
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Stores metadata for analysis into database

@param aid
           Analysis ID to store metadata into
@param metadata
           Metadata to be stored
@throws IOException
            In case of I/O error
"
      end

      operation 553730 "loadAnalysisMetadata"
	public return_type class_ref 187266 // Metadata
	nparams 1
	  param inout name "aid" type class_ref 130434 // AID
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the value of metadata of a given analysis

@param aid
           Analysis ID to read metadata from
@return The value of metadata item
@throws IOException
"
      end

      operation 553858 "setAnalysisMetadataItem"
	public explicit_return_type "void"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param in name "key" explicit_type "String"
	  param in name "value" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Stores metadata key-value into analysis metadata file, if there is no item with key,
creates a new one.

@param aid 	Analysis ID 
@param key	Key of metadata item
@param value	Value of metadata item
"
      end

      operation 553986 "getAnalysisMetadataItem"
	public explicit_return_type "String"
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param in name "key" explicit_type "String"
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the value of one metadata item of a given analysis

@param aid
           Analysis ID to read metadata from
@param key
           Key of item to read
@return The value of metadata item
@throws IOException
"
      end

      operation 554114 "storeExperimentMetadata"
	public explicit_return_type "void"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "metadata" type class_ref 187266 // Metadata
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Stores metadata for experiment into database

@param aid
           Analysis ID with given experiment
@param eid
           Experiment ID to store metadata into
@param metadata
           Metadata to be stored
@throws IOException
            In case of I/O error
"
      end

      operation 554242 "loadExperimentMetadata"
	public return_type class_ref 187266 // Metadata
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the value of metadata of a given analysis

@param aid
           Analysis ID to read metadata from
@param eid
           Experiment ID to read metadata from            
@return The value of metadata item
@throws IOException
"
      end

      operation 554370 "setExperimentMetadataItem"
	public explicit_return_type "void"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param in name "key" explicit_type "String"
	  param in name "value" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Stores metadata key-value into experiment metadata file, if there is no item with key,
creates a new one.

@param aid 	Analysis ID 
@param eid 	Experiment ID
@param key	Key of metadata item
@param value	Value of metadata item
"
      end

      operation 554498 "getExperimentMetadataItem"
	public explicit_return_type "String"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param in name "key" explicit_type "String"
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the value of one metadata item of a given experiment

@param aid
           Analysis ID with given experiment
@param eid
           Experiment ID to read metadata from
@param key
           Key of item to read
@return The value of metadata item
@throws IOException
"
      end

      operation 554626 "storeBinaryMetadata"
	public explicit_return_type "void"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "metadata" type class_ref 187266 // Metadata
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Stores metadata for binary into database

@param aid
           Analysis ID with given experiment/binary
@param eid
           Experiment ID with given binary
@param bid
           Binary ID to store metadata into
@param metadata
           Metadata to be stored
@throws IOException
            In case of I/O error
"
      end

      operation 554754 "loadBinaryMetadata"
	public return_type class_ref 187266 // Metadata
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the value of metadata of a given binary

@param aid
           Analysis ID to read metadata from
@param eid
           Experiment ID to read metadata from
@param bid
           Binary ID to read metadata from            
@return The value of metadata item
@throws IOException
"
      end

      operation 554882 "setBinaryMetadataItem"
	public explicit_return_type "void"
	nparams 5
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param in name "key" explicit_type "String"
	  param in name "value" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Stores metadata key-value into binary metadata file, if there is no item with key,
creates a new one.

@param aid 	Analysis ID 
@param eid 	Experiment ID
@param bid 	Binary ID
@param key	Key of metadata item
@param value	Value of metadata item
"
      end

      operation 555010 "getBinaryMetadataItem"
	public explicit_return_type "String"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param in name "key" explicit_type "String"
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the value of one metadata item of a given binary

@param aid
           Analysis ID with given experiment/binary
@param eid
           Experiment ID with given binary
@param bid
           Binary ID to read binary metadata from
@param key
           Key of item to read
@return The value of metadata item
@throws IOException
"
      end
    end

    class 186498 "StatisticsManager"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Class implementing manipulation with multiple statistics tables for entities.

@author Jakub Lehotsky
"
      attribute 258818 "STATISTICS_TABLE_FILE"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"statistics.tables\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Filename with stored statistics tables references 
"
      end

      attribute 258946 "STATISTICS_RUN_HEADER_FILE"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"runstatistics-head\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Filename with stored statistics tables references 
"
      end

      classrelation 244866 // database (<unidirectional association>)
	relation 244866 --->
	  a role_name "database" init_value "=  null" class_relation private
	    comment " Reference to results repository database 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 244866 // database (<unidirectional association>)
	  b parent class_ref 186242 // Database
      end

      classrelation 244994 // sMInstance (<unidirectional association>)
	relation 244994 --->
	  a role_name "sMInstance" init_value "=  null" class_relation private
	    comment " The single existing intance of RID Manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 244994 // sMInstance (<unidirectional association>)
	  b parent class_ref 186498 // StatisticsManager
      end

      attribute 259074 "ASCII_TAB"
	class_attribute const_attribute protected explicit_type "String"
	init_value "=  \"\\t\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Ascii of tab character 
"
      end

      attribute 259202 "STATISTICS_DIM_FILE"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \".dim\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Stastitic file with dimensions 
"
      end

      attribute 259330 "STATISTICS_LABEL_FILE"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \".label\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Stastitic file with table label 
"
      end

      attribute 259458 "STATISTICS_COLUMNS_FILE"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \".col\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Stastitic file with column names 
"
      end

      attribute 259586 "STATISTICS_ROWS_FILE"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \".row\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Stastitic file with row names 
"
      end

      attribute 259714 "STATISTICS_VALUE_FILE"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \".value\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Stastitic file with values of statistics 
"
      end

      operation 594562 "StatisticsManager"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Constructor - private, void for singleton use 
"
      end

      operation 594690 "getInstance"
	class_operation public return_type class_ref 186498 // StatisticsManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Return single instance of Graph manager 

@return	reference single running instance of Graph manager
"
      end

      operation 594818 "initialize"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "database" type class_ref 186242 // Database
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Initialize Statistics Manager before its first use 

@param database	Instance of database we use
"
      end

      operation 594946 "getParsedLine"
	private explicit_return_type "String"
	nparams 2
	  param inout name "inputReader" explicit_type "BufferedReader"
	  param in name "filename" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Reads one line from reader and splits it by tabs 

@param inputReader	Reader to read line from
@param filename	Filename to be reported if error occurs

@return	Array of Strings containing tokens, that were separated by tabs
"
      end

      operation 595074 "loadStatisticsTable"
	private return_type class_ref 194178 // Statistics
	nparams 1
	  param in name "tableName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Loads statistics table into memory

@param tableName	The name of the statistics table to read from

@return	Statistics object containing loaded statistics
"
      end

      operation 595202 "loadStatistics"
	private return_type class_ref 194178 // Statistics
	nparams 1
	  param in name "entityDirectory" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Load all statistics given a statistics table index directory for given entity

@param entityDirectory	Directory which holds stastistics

@return	Array of all counted statistics
"
      end

      operation 595330 "loadAnalysisStatistics"
	public return_type class_ref 194178 // Statistics
	nparams 1
	  param inout name "aid" type class_ref 130434 // AID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Loads analysis statistics

@param aid	Analysis Id

@return	Statistics array
"
      end

      operation 595458 "loadExperimentStatistics"
	public return_type class_ref 194178 // Statistics
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Loads experiment statistics

@param aid	Analysis Id
@param eid	Experiment Id

@return	Statistics array
"
      end

      operation 595586 "loadBinaryStatistics"
	public return_type class_ref 194178 // Statistics
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Loads binary statistics

@param aid	Analysis Id
@param eid	Experiment Id
@param bid	Binary Id 

@return	Statistics array
"
      end

      operation 595714 "loadRunStatistics"
	public return_type class_ref 194178 // Statistics
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Loads run statistics

@param aid	Analysis Id
@param eid	Experiment Id
@param bid	Binary Id
@param rid	Run Id 

@return	Statistics array
"
      end
    end

    class 186626 "GraphManager"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Class implementing manipulation with graphs for entities. Implemented solely for caching
of reading metadata about garphs

NOTE: all supressed warning for unused variables are just pending TODOS (for synchronization
with RR-side GUI Graph caching 

@author Jakub Lehotsky
"
      attribute 247810 "GRAPH_DOESNT_EXIST_MESSAGE"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"Graph doesn't exist.\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Graph doesn't exist error message 
"
      end

      attribute 247938 "LOAD_GRAPH_DOESNT_EXIST_MESSAGE"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"Load graph doesn't exist.\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Load graph doesn't exist error message 
"
      end

      attribute 248066 "RESULTS_GRAPH_TABLE"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"results.graphs\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Results graphs table filename 
"
      end

      attribute 248194 "LOAD_GRAPH_TABLE"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"load.graphs\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Load graphs table filename 
"
      end

      classrelation 229634 // database (<unidirectional association>)
	relation 229634 --->
	  a role_name "database" init_value "=  null" class_relation private
	    comment " Reference to results repository database 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 229634 // database (<unidirectional association>)
	  b parent class_ref 186242 // Database
      end

      classrelation 229762 // gMInstance (<unidirectional association>)
	relation 229762 --->
	  a role_name "gMInstance" init_value "=  null" class_relation private
	    comment " The single existing intance of RID Manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 229762 // gMInstance (<unidirectional association>)
	  b parent class_ref 186626 // GraphManager
      end

      classrelation 229890 // analTableAID (<unidirectional association>)
	relation 229890 --->
	  a role_name "analTableAID" init_value "=  null" class_relation private
	    comment " AID of analysis graph table in memory 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unused\")
"
	    classrelation_ref 229890 // analTableAID (<unidirectional association>)
	  b parent class_ref 130434 // AID
      end

      classrelation 230018 // analType (<unidirectional association>)
	relation 230018 --->
	  a role_name "analType" init_value "=  GraphType.RESULTS" class_relation private
	    comment " Type of analysis graph table in memory 
 correctly - nondefined"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unused\")
"
	    classrelation_ref 230018 // analType (<unidirectional association>)
	  b parent class_ref 187650 // GraphType
      end

      classrelation 230146 // expTableAID (<unidirectional association>)
	relation 230146 --->
	  a role_name "expTableAID" init_value "=  null" class_relation private
	    comment " AID of experiment graph table in memory 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unused\")
"
	    classrelation_ref 230146 // expTableAID (<unidirectional association>)
	  b parent class_ref 130434 // AID
      end

      classrelation 230274 // expTableEID (<unidirectional association>)
	relation 230274 --->
	  a role_name "expTableEID" init_value "=  null" class_relation private
	    comment " EID of experiment graph table in memory 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unused\")
"
	    classrelation_ref 230274 // expTableEID (<unidirectional association>)
	  b parent class_ref 133378 // EID
      end

      classrelation 230402 // expType (<unidirectional association>)
	relation 230402 --->
	  a role_name "expType" init_value "=  GraphType.RESULTS" class_relation private
	    comment " Type of analysis graph table in memory 
 correctly - nondefined"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unused\")
"
	    classrelation_ref 230402 // expType (<unidirectional association>)
	  b parent class_ref 187650 // GraphType
      end

      classrelation 230530 // runTableAID (<unidirectional association>)
	relation 230530 --->
	  a role_name "runTableAID" init_value "=  null" class_relation private
	    comment " AID of run load graph table in memory 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unused\")
"
	    classrelation_ref 230530 // runTableAID (<unidirectional association>)
	  b parent class_ref 130434 // AID
      end

      classrelation 230658 // runTableEID (<unidirectional association>)
	relation 230658 --->
	  a role_name "runTableEID" init_value "=  null" class_relation private
	    comment " EID of run load graph table in memory 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unused\")
"
	    classrelation_ref 230658 // runTableEID (<unidirectional association>)
	  b parent class_ref 133378 // EID
      end

      classrelation 230786 // runTableBID (<unidirectional association>)
	relation 230786 --->
	  a role_name "runTableBID" init_value "=  null" class_relation private
	    comment " BID of run load graph table in memory 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unused\")
"
	    classrelation_ref 230786 // runTableBID (<unidirectional association>)
	  b parent class_ref 138754 // BID
      end

      classrelation 230914 // runTableRID (<unidirectional association>)
	relation 230914 --->
	  a role_name "runTableRID" init_value "=  null" class_relation private
	    comment " RID of run load graph table in memory 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unused\")
"
	    classrelation_ref 230914 // runTableRID (<unidirectional association>)
	  b parent class_ref 140290 // RID
      end

      classrelation 231042 // runType (<unidirectional association>)
	relation 231042 --->
	  a role_name "runType" init_value "=  GraphType.LOAD" class_relation private
	    comment " correctly - nondefined"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unused\")
"
	    classrelation_ref 231042 // runType (<unidirectional association>)
	  b parent class_ref 187650 // GraphType
      end

      classrelation 231170 // analGraphTable (<unidirectional association>)
	relation 231170 --->
	  a role_name "analGraphTable" private
	    comment " Analysis graph table data 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 231170 // analGraphTable (<unidirectional association>)
	  b parent class_ref 190850 // NumberedTable
      end

      classrelation 231298 // expGraphTable (<unidirectional association>)
	relation 231298 --->
	  a role_name "expGraphTable" private
	    comment " Experiment graph table data 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 231298 // expGraphTable (<unidirectional association>)
	  b parent class_ref 190850 // NumberedTable
      end

      classrelation 231426 // runGraphTable (<unidirectional association>)
	relation 231426 --->
	  a role_name "runGraphTable" private
	    comment " Run load graph table data 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 231426 // runGraphTable (<unidirectional association>)
	  b parent class_ref 190850 // NumberedTable
      end

      attribute 248322 "ASCII_TAB"
	class_attribute const_attribute protected explicit_type "String"
	init_value "=  \"\\t\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Ascii of tab character 
"
      end

      operation 541186 "GraphManager"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Constructor - private, void for singleton use 
"
      end

      operation 541314 "getInstance"
	class_operation public return_type class_ref 186626 // GraphManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Return single instance of Graph manager 

@return	reference single running instance of Graph manager
"
      end

      operation 541442 "initialize"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "database" type class_ref 186242 // Database
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Initialize RID Manager before its first use 

@param database	Instance of database we use
"
      end

      operation 541570 "loadAnalysisGraphTable"
	private explicit_return_type "void"
	nparams 2
	  param inout name "graphType" type class_ref 187650 // GraphType
	  param inout name "aid" type class_ref 130434 // AID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *************************** ANALYSES ******************************** 

Loads analysis graphs table of a given analysis into memory

@param graphType	
		Results or Load graph type
@param aid
		Analysis Id
"
      end

      operation 541698 "validAnalysisGraph"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "graphType" type class_ref 187650 // GraphType
	  param inout name "aid" type class_ref 130434 // AID
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Validates that given graph really exists

@param graphType
		Results or Load graph
@param aid
		Analysis Id
@param index
		Index of the graph

@return	True if graph is valid and file with its image exists
"
      end

      operation 541826 "getAnalysisGraphCount"
	public explicit_return_type "int"
	nparams 2
	  param inout name "graphType" type class_ref 187650 // GraphType
	  param inout name "aid" type class_ref 130434 // AID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns analysis graph count

@param graphType
		Results of Load graph
@param aid
		Analysis Id
@return	The count of graphs of a given type for a given analysis
"
      end

      operation 541954 "getAnalysisGraphInfo"
	public return_type class_ref 187778 // GraphInfo
	nparams 3
	  param inout name "graphType" type class_ref 187650 // GraphType
	  param inout name "aid" type class_ref 130434 // AID
	  param in name "index" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns analysis graph info (height, width, title)

@param graphType
		Results or Load graph type
@param aid
		Analysis Id
@param index
		Index of graph
@return	GraphInfo descrining graph
@throws IOException	in case metadata couldn't be read
"
      end

      operation 542082 "getAnalysisGraphPath"
	public explicit_return_type "String"
	nparams 3
	  param inout name "graphType" type class_ref 187650 // GraphType
	  param inout name "aid" type class_ref 130434 // AID
	  param in name "index" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns full path to a given graph

@param graphType
		Results or Load graph
@param aid
		Analysis Id
@param index
		Index of graph
@return	The path to a graph

@throws IOException in case of metadata reading I/O error 
"
      end

      operation 542210 "loadExperimentGraphTable"
	private explicit_return_type "void"
	nparams 3
	  param inout name "graphType" type class_ref 187650 // GraphType
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *************************** EXPERIMENTS ******************************** 

Loads experiment graphs table of a given experiment into memory

@param graphType	
		Results or Load graph type
@param aid
		Analysis Id
@param eid
		Experiment Id
"
      end

      operation 542338 "validExperimentGraph"
	public explicit_return_type "boolean"
	nparams 4
	  param inout name "graphType" type class_ref 187650 // GraphType
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Validates that given graph really exists

@param graphType
		Results or Load graph
@param aid
		Analysis Id
@param eid
		Experiment Id
@param index
		Index of the graph

@return	True if graph is valid and file with its image exists
"
      end

      operation 542466 "getExperimentGraphCount"
	public explicit_return_type "int"
	nparams 3
	  param inout name "graphType" type class_ref 187650 // GraphType
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns experiment graph count

@param graphType
		Results of Load graph
@param aid
		Analysis Id
@param eid
		Experiment Id
@return	The count of graphs of a given type for a given experiment
"
      end

      operation 542594 "getExperimentGraphInfo"
	public return_type class_ref 187778 // GraphInfo
	nparams 4
	  param inout name "graphType" type class_ref 187650 // GraphType
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param in name "index" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns experiment graph info (height, width, title)

@param graphType
		Results or Load graph type
@param aid
		Analysis Id
@param eid
		Experiment Id
@param index
		Index of graph
@return	GraphInfo descrining graph
@throws IOException	in case metadata couldn't be read
"
      end

      operation 542722 "getExperimentGraphPath"
	public explicit_return_type "String"
	nparams 4
	  param inout name "graphType" type class_ref 187650 // GraphType
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param in name "index" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns full path to a given graph

@param graphType
		Results or Load graph
@param aid
		Analysis Id
@param eid 
		Experiment Id
@param index
		Index of graph
@return	The path to a graph

@throws IOException in case of metadata reading I/O error 
"
      end

      operation 542850 "loadRunLoadGraphTable"
	private explicit_return_type "void"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *************************** RUN ******************************** 

Loads run load graphs table of a given run into memory

@param graphType	
		Results or Load graph type
@param aid
		Analysis Id
@param eid
		Experiment Id
@param bid
		Binary Id
@param rid
		Run Id
"
      end

      operation 542978 "validRunLoadGraph"
	public explicit_return_type "boolean"
	nparams 5
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Validates that given graph really exists

		Results or Load graph
@param aid
		Analysis Id
@param eid
		Experiment Id
@param bid
		Binary Id
@param rid
		Run Id
@param index
		Index of the graph

@return	True if graph is valid and file with its image exists
"
      end

      operation 543106 "getRunLoadGraphCount"
	public explicit_return_type "int"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns run load graph count

@param aid
		Analysis Id
@param eid
		Experiment Id
@param bid
		Binary Id
@param rid
		Run Id

@return	The count of graphs of a given type for a given run
"
      end

      operation 543234 "getRunLoadGraphInfo"
	public return_type class_ref 187778 // GraphInfo
	nparams 5
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	  param in name "index" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns run load graph info (height, width, title)

@param aid
		Analysis Id
@param eid
		Experiment Id
@param bid
		Binary Id
@param rid
		Run Id
@param index
		Index of graph

@return	GraphInfo descrining graph

@throws IOException	in case metadata couldn't be read
"
      end

      operation 543362 "getRunLoadGraphPath"
	public explicit_return_type "String"
	nparams 5
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	  param in name "index" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns full path to a given load graph

@param aid
		Analysis Id
@param eid
		Analysis Id
@param bid
		Analysis Id
@param rid
		Analysis Id

@param index
		Index of graph
@return	The path to a graph

@throws IOException in case of metadata reading I/O error 
"
      end
    end

    class 186754 "RScriptsRunner"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
The class managing execution of R scripts. It sets up and tears down the background thread
and allows access to background queue of R scripts, which is used by background thread to
schedule and execute R scripts.

@author Jakub Lehotsky
"
      classrelation 239874 // rsRInstance (<unidirectional association>)
	relation 239874 --->
	  a role_name "rsRInstance" init_value "=  null" class_relation private
	    comment " The single existing intance of RID Manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 239874 // rsRInstance (<unidirectional association>)
	  b parent class_ref 186754 // RScriptsRunner
      end

      classrelation 240002 // eventQueue (<unidirectional association>)
	relation 240002 --->
	  stereotype "Queue"
	  a role_name "eventQueue" private
	    comment " Queue of registered scripts to run 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 240002 // eventQueue (<unidirectional association>)
	  b parent class_ref 193538 // RREvent
      end

      classrelation 240130 // actualEvent (<unidirectional association>)
	relation 240130 --->
	  a role_name "actualEvent" class_relation private
	    comment " Actually running event 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 240130 // actualEvent (<unidirectional association>)
	  b parent class_ref 193538 // RREvent
      end

      classrelation 240258 // rBackgroundThread (<unidirectional association>)
	relation 240258 --->
	  a role_name "rBackgroundThread" class_relation private
	    comment " Background thread reference 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 240258 // rBackgroundThread (<unidirectional association>)
	  b parent class_ref 191618 // RBackgroundThread
      end

      attribute 257794 "scriptsSemaphore"
	class_attribute volatile package explicit_type "Semaphore"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Sempahore for classical consument/producer synchronization of scripts execution 
"
      end

      attribute 257922 "runBackground"
	volatile private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The status of background thread 
"
      end

      operation 583682 "RScriptsRunner"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Constructor - private, void for singleton use 
"
      end

      operation 583810 "getInstance"
	class_operation public return_type class_ref 186754 // RScriptsRunner
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Return single instance of R Scripts help manager 

@return	reference single running instance of Graph manager
"
      end

      operation 583938 "initialize"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Initialization of scripts runner
"
      end

      operation 584066 "setRunBackroundThread"
	private explicit_return_type "void"
	nparams 1
	  param inout name "runBackground" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets the state of background thread running

@param runBackground	the state
"
      end

      operation 584194 "getRunBackroundThread"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the state of background thread runnign
@return	The state
"
      end

      operation 584322 "startBackgroundThread"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Start R scripts execution background thread

@return	True iff succesful
"
      end

      operation 584450 "stopBackgroundThread"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Stops R scripts execution background thread and wait for thread to finish

"
      end

      operation 584578 "enqueueScriptExecution"
	package explicit_return_type "void"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param in name "functionToRun" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Adds new function execution into the background queue of R scripts execution

@param 	aid	Analysis ID
@param	eid Experiment ID
@param	functionToRun	the string containing function to be executed in R
"
      end

      operation 584706 "enqueueScriptExecution"
	package explicit_return_type "void"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param in name "functionToRun" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Adds new function execution into the background queue of R scripts execution

@param 	aid	Analysis ID
@param	eid Experiment ID
@param	bid	Binary ID
@param	functionToRun	the string containing function to be executed in R
"
      end

      operation 584834 "enqueueScriptExecution"
	package explicit_return_type "void"
	nparams 5
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	  param in name "functionToRun" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Adds new function execution into the background queue of R scripts execution

@param 	aid	Analysis ID
@param	eid Experiment ID
@param	bid Binary ID
@param	functionToRun	the string containing function to be executed in R
"
      end

      operation 584962 "enqueueCallbackExecution"
	package explicit_return_type "void"
	nparams 6
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	  param inout name "callback" type class_ref 190338 // FileUploadCallbackInterface
	  param inout name "callbackData" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Adds new function execution into the background queue of R scripts execution

@param 	aid	Analysis ID
@param	eid	Experiment ID
@param	bid	Binary ID
@param 	callback	upload callback object
@param 	callbackData	it's data 
 
"
      end

      operation 585090 "getNextEventFromQueue"
	public return_type class_ref 193538 // RREvent
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the next function on the top of the queue

@return The script to be executed next
"
      end

      operation 585218 "clearActualEventRecord"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Clears the actual running event from memory
"
      end

      operation 585346 "getEventCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns events count

@return	The count
"
      end

      operation 585474 "testRunInQueue"
	private explicit_return_type "boolean"
	nparams 5
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	  param inout name "rrEvent" type class_ref 193538 // RREvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Test whether run event is in queue

@param aid	Analysis Id
@param eid	Experiment Id
@param bid	Binary Id
@param rid	Run Id
@param rrEvent	Event

@return	True, if event is in queue
"
      end

      operation 585602 "isDeleteRunAllowed"
	public explicit_return_type "boolean"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Checks event queue, whether it contains registered event that would block erasing
of a run

@param aid	Analysis Id
@param eid	Experiment Id
@param bid	Binary Id
@param rid	Run Id

@return	True, if any entity is in queue
"
      end

      operation 585730 "testBinaryInQueue"
	private explicit_return_type "boolean"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rrEvent" type class_ref 193538 // RREvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Test whether binary event is in queue

@param aid	Analysis Id
@param eid	Experiment Id
@param bid	Binary Id
@param rrEvent	Event

@return	True, if event is in queue
"
      end

      operation 585858 "isDeleteBinaryAllowed"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Checks event queue, whether it contains registered event that would block erasing
of a binary

@param aid	Analysis Id
@param eid	Experiment Id
@param bid	Binary Id

@return	True, if any entity is in queue
"
      end

      operation 585986 "testExperimentInQueue"
	private explicit_return_type "boolean"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "rrEvent" type class_ref 193538 // RREvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Test whether experiment event is in queue

@param aid	Analysis Id
@param eid	Experiment Id
@param rrEvent	Event

@return	True, if event is in queue
"
      end

      operation 586114 "isDeleteExperimentAllowed"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Checks event queue, whether it contains registered event that would block erasing
of a experiment

@param aid	Analysis Id
@param eid	Experiment Id

@return	True, if any entity is in queue
"
      end

      operation 586242 "testAnalysisInQueue"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "rrEvent" type class_ref 193538 // RREvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Test whether analysis event is in queue

@param aid	Analysis Id
@param rrEvent	Event

@return	True, if event is in queue
"
      end

      operation 586370 "isDeleteAnalysisAllowed"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "aid" type class_ref 130434 // AID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Checks event queue, whether it contains registered event that would block erasing
of an analysis

@param aid	Analysis Id

@return	True, if any entity is in queue
"
      end
    end

    class 187138 "MetadataRef"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
This helper class is used to overpass unability to pass reference in Java.

@author Jakub Lehotsky
"
      classrelation 233474 // metadata (<unidirectional association>)
	relation 233474 --->
	  a role_name "metadata" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 233474 // metadata (<unidirectional association>)
	  b parent class_ref 187266 // Metadata
      end

      operation 555138 "MetadataRef"
	package explicit_return_type ""
	nparams 1
	  param inout name "metadata" type class_ref 187266 // Metadata
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 187266 "Metadata"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Implements management and loading and storing of metadata to the file

@author Jakub Lehotsky
"
      attribute 249218 "IO_ERROR_METADATA_READING_MESSAGE"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"I/O error reading metadata of \""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " I/O error in metadata reading message 
"
      end

      attribute 249346 "IO_ERROR_METADATA_STORING_MESSAGE"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"I/O error storing metadata of \""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " I/O error in metadata reading message 
"
      end

      attribute 249474 "ASCII_TAB"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"\\t\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " ASCII of delim. character (TAB) 
"
      end

      classrelation 233090 // metadata (<unidirectional association>)
	relation 233090 --->
	  stereotype "ArrayList"
	  a role_name "metadata" private
	    comment " Actual metadata 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 233090 // metadata (<unidirectional association>)
	  b parent class_ref 191362 // MetadataItem
      end

      attribute 249602 "lastItem"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Last item counter 
"
      end

      operation 551554 "Metadata"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Constructor - creates metadata, void object 
(meant for creating new metadata items, initializing them and storing into file)

"
      end

      operation 551682 "getMetadata"
	public return_type class_ref 191362 // MetadataItem
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns metadata we store

@return the metadata
"
      end

      operation 551810 "Metadata"
	public explicit_return_type ""
	nparams 1
	  param in name "filename" explicit_type "String"
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
Constructor - initializes metadata in memory and read their contents from the file.

@param filename	Name of file to read metadata from
@throws IOException 
"
      end

      operation 551938 "store"
	public explicit_return_type "void"
	nparams 1
	  param in name "filename" explicit_type "String"
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Stores metadata we have in our memory to the file.

@param filename	Where to store metadata.
@throws IOException
"
      end

      operation 552066 "getItemCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the count of metadata items currently loaded in memory

@return	The count of items
"
      end

      operation 552194 "addItem"
	public explicit_return_type "void"
	nparams 2
	  param in name "key" explicit_type "String"
	  param in name "value" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Adding key-value pair to metadata - note: this can be used only with void metadata
created by first constructor (Metadata(int count))

@param key	Key to added
@param value	Associated value to add
@throws ArrayIndexOutOfBoundsException
"
      end

      operation 552322 "getItemKey"
	public explicit_return_type "String"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the key of the item with index.

@param index	Index of they key to give.
@return	String with key
"
      end

      operation 552450 "getItemValue"
	public explicit_return_type "String"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the value of the item with index.

@param index	Index of the value to give.
@return	String with value.
"
      end

      operation 552578 "getItemByKey"
	public explicit_return_type "String"
	nparams 1
	  param in name "key" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the value of the item, with given key. 

@param key	Key to ask for.
@return		String with associated value, or null if not found. 
"
      end

      operation 552706 "setItemByKey"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "key" explicit_type "String"
	  param in name "value" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets the value of the item, with the given key. 

@param key	Key
@param value	New Value

@return True iff succesful (false if key doesn't exist)

"
      end

      operation 552834 "codeComment"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Encodes the comment metadata value. This must be called prior
to metadata storing. It allows storing comment with newlines in it.
"
      end

      operation 552962 "uncodeComment"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Decodes the comment metadata value. This must be called after
metadata loading. It allows storing comment with newlines in it.
"
      end
    end

    class 187906 "AnalysisImplementation"
      visibility public 
      nactuals 2
      actual class class_ref 188034 // EntityImplementation
        rank 0 value class_ref 130434 // AID
      actual class class_ref 188162 // EntityInterface
        rank 0 value class_ref 130434 // AID
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 220802 // <realization>
	relation 220802 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 220802 // <realization>
	  b parent class_ref 188034 // EntityImplementation
      end

      classrelation 220930 // <realization>
	relation 220930 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 220930 // <realization>
	  b parent class_ref 148226 // Serializable
      end

      classrelation 221058 // <realization>
	relation 221058 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 221058 // <realization>
	  b parent class_ref 188162 // EntityInterface
      end

      attribute 243586 "LOAD_FOR_RUNS_ONLY"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"Load graphs defined for runs only.\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Load graphs defined for runs only error message 
"
      end

      attribute 243714 "RAW_DATA_FOR_RUNS_ONLY"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"Raw data download defined for runs only.\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Raw data download defined for runs only 
"
      end

      classrelation 221186 // analysisEntityManager (<unidirectional association>)
	relation 221186 --->
	  a role_name "analysisEntityManager" private
	    comment " Results repository entity manager for analyses 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 221186 // analysisEntityManager (<unidirectional association>)
	  b parent class_ref 186114 // AnalysisEntityManager
      end

      operation 516098 "AnalysisImplementation"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Construction of basic analysis implementation 
@throws RemoteException "
      end

      operation 516226 "getEntity"
	public return_type class_ref 187010 // Entity
	nparams 1
	  param inout name "id" type class_ref 130434 // AID
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<AID> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 516354 "setEntityComment"
	public explicit_return_type "void"
	nparams 2
	  param inout name "id" type class_ref 130434 // AID
	  param in name "comment" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 516482 "getEntities"
	public return_type class_ref 187010 // Entity
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}<AID>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 516610 "getSubentityInterface"
	public return_type class_ref 188162 // EntityInterface
	nparams 1
	  param inout name "id" type class_ref 130434 // AID
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 516738 "getExportFormats"
	public return_type class_ref 188290 // DataFormat
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 516866 "beginExport"
	public return_type class_ref 149762 // DownloadHandle
	nparams 4
	  param inout name "ids" type class_ref 130434 // AID
	  param in name "formatId" explicit_type "String"
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 516994 "getImportFormats"
	public return_type class_ref 188290 // DataFormat
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 517122 "beginImport"
	public return_type class_ref 134658 // UploadHandle
	nparams 3
	  param in name "formatId" explicit_type "String"
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 517250 "deleteEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "id" type class_ref 130434 // AID
	nexceptions 2
	  exception class_ref 187394 // DeleteLockedException
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 517378 "graphCount"
	public explicit_return_type "int"
	nparams 2
	  param inout name "graphType" type class_ref 187650 // GraphType
	  param inout name "aid" type class_ref 130434 // AID
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 517506 "getGraphInfo"
	public return_type class_ref 187778 // GraphInfo
	nparams 3
	  param inout name "graphType" type class_ref 187650 // GraphType
	  param inout name "id" type class_ref 130434 // AID
	  param in name "index" explicit_type "int"
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 186882 // ResultsRepositoryException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 517634 "beginGraphDownload"
	public return_type class_ref 149762 // DownloadHandle
	nparams 5
	  param inout name "graphType" type class_ref 187650 // GraphType
	  param inout name "id" type class_ref 130434 // AID
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	  param in name "index" explicit_type "int"
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 187522 // ResultsRepositoryBusyException
	  exception class_ref 186882 // ResultsRepositoryException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 517762 "beginRawDataDownload"
	public return_type class_ref 149762 // DownloadHandle
	nparams 3
	  param inout name "id" type class_ref 130434 // AID
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 2
	  exception class_ref 187522 // ResultsRepositoryBusyException
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 517890 "endRawDataDownload"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handle" type class_ref 149762 // DownloadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 518018 "getRawDataDownloadStatus"
	public return_type class_ref 149890 // DownloadStatus
	nparams 1
	  param inout name "handle" type class_ref 149762 // DownloadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 518146 "getContext"
	public explicit_return_type "String"
	nparams 1
	  param inout name "id" type class_ref 130434 // AID
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 518274 "getTasks"
	public explicit_return_type "String"
	nparams 1
	  param inout name "id" type class_ref 130434 // AID
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 518402 "getLogsForTask"
	public return_type class_ref 184194 // LogRecord
	nparams 2
	  param inout name "id" type class_ref 130434 // AID
	  param in name "taskID" explicit_type "String"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 184322 // LogStorageException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "NullPointerException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 188034 "EntityImplementation"
      abstract visibility public 
      nformals 1
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 188162 // EntityInterface
        rank 0 explicit_value "T"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 220034 // <generalisation>
	relation 220034 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 220034 // <generalisation>
	  b parent class_ref 130178 // UnicastRemoteObject
      end

      classrelation 220290 // <realization>
	relation 220290 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 220290 // <realization>
	  b parent class_ref 188162 // EntityInterface
      end

      classrelation 220418 // database (<unidirectional association>)
	relation 220418 --->
	  a role_name "database" protected
	    comment " Reference to results repository database 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 220418 // database (<unidirectional association>)
	  b parent class_ref 186242 // Database
      end

      classrelation 220546 // exporter (<unidirectional association>)
	relation 220546 --->
	  a role_name "exporter" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 220546 // exporter (<unidirectional association>)
	  b parent class_ref 188418 // Exporter
      end

      classrelation 220674 // importer (<unidirectional association>)
	relation 220674 --->
	  a role_name "importer" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 220674 // importer (<unidirectional association>)
	  b parent class_ref 188546 // Importer
      end

      operation 513794 "EntityImplementation"
	package explicit_return_type ""
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 513922 "getEntity"
	abstract public return_type class_ref 187010 // Entity
	nparams 1
	  param inout name "id" explicit_type "T"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 514050 "setEntityComment"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "id" explicit_type "T"
	  param in name "comment" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 514178 "getEntities"
	abstract public return_type class_ref 187010 // Entity
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}<T>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 514306 "getSubentityInterface"
	abstract public return_type class_ref 188162 // EntityInterface
	nparams 1
	  param inout name "id" explicit_type "T"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 514434 "getExportFormats"
	abstract public return_type class_ref 188290 // DataFormat
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 514562 "beginExport"
	abstract public return_type class_ref 149762 // DownloadHandle
	nparams 4
	  param inout name "ids" explicit_type "T"
	  param in name "formatId" explicit_type "String"
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 514690 "getExportStatus"
	public return_type class_ref 149890 // DownloadStatus
	nparams 1
	  param inout name "handle" type class_ref 149762 // DownloadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 514818 "endExport"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handle" type class_ref 149762 // DownloadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 514946 "getImportFormats"
	abstract public return_type class_ref 188290 // DataFormat
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 515074 "beginImport"
	abstract public return_type class_ref 134658 // UploadHandle
	nparams 3
	  param in name "formatId" explicit_type "String"
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 515202 "getImportStatus"
	public return_type class_ref 134786 // UploadStatus
	nparams 1
	  param inout name "handle" type class_ref 134658 // UploadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 515330 "endImport"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handle" type class_ref 134658 // UploadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 515458 "deleteEntity"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "id" explicit_type "T"
	nexceptions 2
	  exception class_ref 187394 // DeleteLockedException
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 515586 "graphCount"
	abstract public explicit_return_type "int"
	nparams 2
	  param inout name "graphType" type class_ref 187650 // GraphType
	  param inout name "id" explicit_type "T"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 515714 "beginGraphDownload"
	abstract public return_type class_ref 149762 // DownloadHandle
	nparams 5
	  param inout name "graphType" type class_ref 187650 // GraphType
	  param inout name "id" explicit_type "T"
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	  param in name "index" explicit_type "int"
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 187522 // ResultsRepositoryBusyException
	  exception class_ref 186882 // ResultsRepositoryException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 515842 "getGraphDownloadStatus"
	public return_type class_ref 149890 // DownloadStatus
	nparams 1
	  param inout name "handle" type class_ref 149762 // DownloadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 515970 "endGraphDownload"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handle" type class_ref 149762 // DownloadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 188418 "Exporter"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
This class read the raw data (binary, filtered) from database, converts them to desired
format and send them out to the user

Exporter and Importer form the main part of user interface for working with data

@author Jakub Lehotsky

"
      classrelation 229250 // exporterInstance (<unidirectional association>)
	relation 229250 --->
	  a role_name "exporterInstance" init_value "=  null" class_relation private
	    comment " Single instance of exporter 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 229250 // exporterInstance (<unidirectional association>)
	  b parent class_ref 188418 // Exporter
      end

      classrelation 229378 // database (<unidirectional association>)
	relation 229378 --->
	  a role_name "database" class_relation private
	    comment " Instance of Results Repository database to use 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 229378 // database (<unidirectional association>)
	  b parent class_ref 186242 // Database
      end

      classrelation 229506 // exportFormats (<unidirectional association>)
	relation 229506 --->
	  a role_name "exportFormats" multiplicity "[]" init_value "=  new DataFormat[] { 
		new DataFormat(\"application/been\", \"BEEN archive database format\")}" class_relation private
	    comment " Table of used data format for export - maybe will be loaded from file in future 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 229506 // exportFormats (<unidirectional association>)
	  b parent class_ref 188290 // DataFormat
      end

      operation 538626 "Exporter"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Constructor - initializes exporter and let it know about Results Repository databse
"
      end

      operation 538754 "getInstance"
	class_operation public return_type class_ref 188418 // Exporter
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the single instance of exporter
 
@return	Reference to Exporter instance 
"
      end

      operation 538882 "initialize"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "database" type class_ref 186242 // Database
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
Intialization of exporter. Must be called prior to use

@param database	Instance of Results Repository database  
"
      end

      operation 539010 "getExportFormats"
	private return_type class_ref 188290 // DataFormat
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Temporary:"
      end

      operation 539138 "getExportInterface"
	private return_type class_ref 190722 // ExportInterface
	nparams 1
	  param in name "formatId" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the class with ExportInterface determined by formatId 
@param formatId	String identification (mime type), see DataFormat class
@return	class instance implementing ExportInterface
"
      end

      operation 539266 "getAnalysisExportFormats"
	public return_type class_ref 188290 // DataFormat
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ********* ANALYSIS ********* "
      end

      operation 539394 "beginAnalysesExport"
	public return_type class_ref 149762 // DownloadHandle
	nparams 4
	  param inout name "aids" type class_ref 130434 // AID
	  param in name "formatId" explicit_type "String"
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 539522 "getExperimentExportFormats"
	public return_type class_ref 188290 // DataFormat
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ********* EXPERIMENT ********* "
      end

      operation 539650 "beginExperimentsExport"
	public return_type class_ref 149762 // DownloadHandle
	nparams 5
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eids" type class_ref 133378 // EID
	  param in name "formatId" explicit_type "String"
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 539778 "getBinaryExportFormats"
	public return_type class_ref 188290 // DataFormat
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ********* BINARY ********* "
      end

      operation 539906 "beginBinariesExport"
	public return_type class_ref 149762 // DownloadHandle
	nparams 6
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bids" type class_ref 138754 // BID
	  param in name "formatId" explicit_type "String"
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 540034 "getRunExportFormats"
	public return_type class_ref 188290 // DataFormat
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ********* RUN ********* "
      end

      operation 540162 "beginRunsExport"
	public return_type class_ref 149762 // DownloadHandle
	nparams 7
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "runIndexes" type class_ref 140290 // RID
	  param in name "formatId" explicit_type "String"
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 540290 "getExportStatus"
	public return_type class_ref 149890 // DownloadStatus
	nparams 1
	  param inout name "handle" type class_ref 149762 // DownloadHandle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ** common ** "
      end

      operation 540418 "endExport"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handle" type class_ref 149762 // DownloadHandle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 188546 "Importer"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
This class read the data from user in external form, converts them and send them
to Results Repository databse

Exporter and Importer form the main part of user interface for working with data

@author Jakub Lehotsky

"
      classrelation 231810 // database (<unidirectional association>)
	relation 231810 --->
	  a role_name "database" class_relation private
	    comment " Instance of Results Repository database to use 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 231810 // database (<unidirectional association>)
	  b parent class_ref 186242 // Database
      end

      classrelation 231938 // importerInstance (<unidirectional association>)
	relation 231938 --->
	  a role_name "importerInstance" init_value "=  null" class_relation private
	    comment " single instance of importer 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 231938 // importerInstance (<unidirectional association>)
	  b parent class_ref 188546 // Importer
      end

      classrelation 232066 // importFormats (<unidirectional association>)
	relation 232066 --->
	  a role_name "importFormats" multiplicity "[]" init_value "=  new DataFormat[] { 
		new DataFormat(\"text/dumb1\", \"Sample ex/import format 1 (load into temp directory)\") 
	}" class_relation private
	    comment " Table of used data format for import - maybe will be loaded from file in future 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 232066 // importFormats (<unidirectional association>)
	  b parent class_ref 188290 // DataFormat
      end

      operation 544770 "Importer"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Singleton constructor - intitalizes database 
"
      end

      operation 544898 "getInstance"
	class_operation public return_type class_ref 188546 // Importer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the single instance of importer 
 
@return	Reference to Importer instance 
"
      end

      operation 545026 "initialize"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "database" type class_ref 186242 // Database
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
Intialization of importer. Must be called prior to use

@param database	Instance of Results Repository database  
"
      end

      operation 545154 "getImportFormats"
	private return_type class_ref 188290 // DataFormat
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Temporary:"
      end

      operation 545282 "getImportInterface"
	private return_type class_ref 191106 // ImportInterface
	nparams 1
	  param in name "formatId" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the class with ImportInterface determined by formatId 
@param formatId	String identification (mime type), see DataFormat class 
@return	class instance implementing ImportInterface
"
      end

      operation 545410 "getAnalysisImportFormats"
	public return_type class_ref 188290 // DataFormat
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ********* ANALYSIS ********* "
      end

      operation 545538 "beginAnalysesImport"
	public return_type class_ref 134658 // UploadHandle
	nparams 3
	  param in name "formatId" explicit_type "String"
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 545666 "getExperimentImportFormats"
	public return_type class_ref 188290 // DataFormat
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ********* EXPERIMENT ********* "
      end

      operation 545794 "beginExperimentsImport"
	public return_type class_ref 134658 // UploadHandle
	nparams 3
	  param in name "formatId" explicit_type "String"
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 545922 "getBinaryImportFormats"
	public return_type class_ref 188290 // DataFormat
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ********* BINARY ********* "
      end

      operation 546050 "beginBinariesImport"
	public return_type class_ref 134658 // UploadHandle
	nparams 3
	  param in name "formatId" explicit_type "String"
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 546178 "getRunImportFormats"
	public return_type class_ref 188290 // DataFormat
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ********* RUN ********* "
      end

      operation 546306 "beginRunsImport"
	public return_type class_ref 134658 // UploadHandle
	nparams 3
	  param in name "formatId" explicit_type "String"
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 546434 "getImportStatus"
	public return_type class_ref 134786 // UploadStatus
	nparams 1
	  param inout name "handle" type class_ref 134658 // UploadHandle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ** common ** "
      end

      operation 546562 "endImport"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handle" type class_ref 134658 // UploadHandle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 188674 "BinaryEntityManager"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Simple class for performing of logs collection from Task Manager and storing it
in database

@author Jakub Lehotsky
"
      attribute 243842 "BM_CONTACT_DELETE_PERMIT_ERROR"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"Unable to contact benchmark manager to get binary deletion permit.\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Unable to contact Benchmark manager to get deletion permit error 
"
      end

      classrelation 221314 // binaryEntityManager (<unidirectional association>)
	relation 221314 --->
	  a role_name "binaryEntityManager" init_value "=  null" class_relation private
	    comment " Single instance of load collector 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 221314 // binaryEntityManager (<unidirectional association>)
	  b parent class_ref 188674 // BinaryEntityManager
      end

      classrelation 221442 // database (<unidirectional association>)
	relation 221442 --->
	  a role_name "database" private
	    comment " Databse that is used for results in Results Repository 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 221442 // database (<unidirectional association>)
	  b parent class_ref 186242 // Database
      end

      classrelation 221570 // metaManager (<unidirectional association>)
	relation 221570 --->
	  a role_name "metaManager" class_relation private
	    comment " Metadata manager - loading and storing 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 221570 // metaManager (<unidirectional association>)
	  b parent class_ref 186370 // MetadataManager
      end

      classrelation 221698 // statisticsManager (<unidirectional association>)
	relation 221698 --->
	  a role_name "statisticsManager" private
	    comment " Internal statistics manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 221698 // statisticsManager (<unidirectional association>)
	  b parent class_ref 186498 // StatisticsManager
      end

      classrelation 221826 // taskListManager (<unidirectional association>)
	relation 221826 --->
	  a role_name "taskListManager" private
	    comment " Internal task list manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 221826 // taskListManager (<unidirectional association>)
	  b parent class_ref 188802 // TaskListManager
      end

      classrelation 221954 // rScriptsRunner (<unidirectional association>)
	relation 221954 --->
	  a role_name "rScriptsRunner" private
	    comment " Internal scripts runner reference 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 221954 // rScriptsRunner (<unidirectional association>)
	  b parent class_ref 186754 // RScriptsRunner
      end

      classrelation 222082 // analysisEntityManager (<unidirectional association>)
	relation 222082 --->
	  a role_name "analysisEntityManager" private
	    comment " Internal analysis entity manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 222082 // analysisEntityManager (<unidirectional association>)
	  b parent class_ref 186114 // AnalysisEntityManager
      end

      classrelation 222210 // experimentEntityManager (<unidirectional association>)
	relation 222210 --->
	  a role_name "experimentEntityManager" private
	    comment " Internal analysis entity manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 222210 // experimentEntityManager (<unidirectional association>)
	  b parent class_ref 188930 // ExperimentEntityManager
      end

      operation 518530 "BinaryEntityManager"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
 Construction, notify load collector about Results Repository database when constructing
"
      end

      operation 518658 "getInstance"
	class_operation public return_type class_ref 188674 // BinaryEntityManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the single instance of load collector

@return	Reference to LoadCollector instance 
"
      end

      operation 518786 "initialize"
	public explicit_return_type "void"
	nparams 7
	  param inout name "database" type class_ref 186242 // Database
	  param inout name "metaManager" type class_ref 186370 // MetadataManager
	  param inout name "statisticsManager" type class_ref 186498 // StatisticsManager
	  param inout name "taskListManager" type class_ref 188802 // TaskListManager
	  param inout name "scriptsRunner" type class_ref 186754 // RScriptsRunner
	  param inout name "analysisEntityManager" type class_ref 186114 // AnalysisEntityManager
	  param inout name "experimentEntityManager" type class_ref 188930 // ExperimentEntityManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Use to initialize analysis entity manager 

@param database			Instance of Results Repository database
@param metaManager		Instance of Results Repository metadata manager
@param statisticsManager	Instance of Results Repository statistics manager
@param taskListManager 	Instance of Results Repository task list manager
@param analysisEntityManager	Instance of Results Repository analysis entity manager
@param scriptsRunner 
@param experimentEntityManager Instance of Results Repository experiment entity manager

"
      end

      operation 518914 "addBinary"
	public explicit_return_type "void"
	nparams 1
	  param inout name "description" type class_ref 139266 // BinaryEntity
	nexceptions 1
	  exception class_ref 186882 // ResultsRepositoryException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Adds new binary into given analysis and experiment of results repository,
so it can be filled with entities and results, it must not exist before.

@param description
           Object describing binary being entered into Results Repository

@throws ResultsRepositoryException
@see cz.cuni.mff.been.resultsrepository.ResultsRepositoryInterface#addBinary
"
      end

      operation 519042 "addBinaryMetadata"
	public explicit_return_type "void"
	nparams 5
	  param inout name "analysisId" type class_ref 130434 // AID
	  param inout name "experimentId" type class_ref 133378 // EID
	  param inout name "binaryId" type class_ref 138754 // BID
	  param in name "key" explicit_type "String"
	  param in name "value" explicit_type "String"
	nexceptions 1
	  exception class_ref 186882 // ResultsRepositoryException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allows adding new custom binary metadata. 

@param analysisId	Analysis Id
@param experimentId	Experiment Id
@param binaryId

@param key			Key of metadata item
@param value			Value of metadata item
@throws ResultsRepositoryException	In case you attempt to overwrite existing metadata item
"
      end

      operation 519170 "createBinary"
	public explicit_return_type "void"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	nexceptions 1
	  exception class_ref 186882 // ResultsRepositoryException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ************* Binary ************** 

Initializes new binary (creates it in database - for a given experiment
in a given analysis)

@param aid
           Analysis ID
@param eid
           Experiment ID
@param bid
           Binary ID to be created
@throws ResultsRepositoryException
"
      end

      operation 519298 "binaryFinished"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Asks benchmark manager, whether experiment is finished

@param aid	Analysis Id
@param eid	Experiment Id
@param bid	Binary Id

@return	True if experiment is finished
"
      end

      operation 519426 "getBinariesInExperiment"
	public return_type class_ref 187010 // Entity
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}<BID>> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "
Returns the list of binaries in a given experiment stored in Results Repository

@param aid	Analysis Id 
@param eid 	Experiment Id

@return The list
"
      end

      operation 519554 "isValidBid"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Checks whether BID conforms to some existing binary in results
repository

@param aid
           Analysis ID
@param eid
           Experiment ID
@param bid
           Binary ID
@return True iff analysis does exist in results repository
"
      end

      operation 519682 "ensureValidBid"
	public explicit_return_type "void"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Ensures that given BID belongs to a valid binary in a given experiment in results repository,
otherwise throws an IllegalArgumentException

@param aid
		Analysis ID
@param eid
		Experiment Id
@param bid
		Binary Id          
"
      end

      operation 519810 "isDeletable"
	private explicit_return_type "boolean"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the flag, whether binary is deltable. Binary is deletable if it is complete and no script 
is running for it or its runs or it has \"finished\" state in Benchmark manager. 

Synchronization note: binary may come non-deletable between this call and call to eraseBinary()

@param aid	Analysis Id
@param eid	Experiment Id 
@param bid	Binary Id 
@return	True if deletable
"
      end

      operation 519938 "getBinary"
	public return_type class_ref 187010 // Entity
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<BID> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the Entity&lt;BID&gt; object representing binary for use in GUI

@param aid	Analysis Id
@param eid	Experiment Id
@param bid	Binary Id 

@return	The binary entity
"
      end

      operation 520066 "ensureSuccessLoadBinaryMetadata"
	class_operation public explicit_return_type "boolean"
	nparams 4
	  param inout name "binaryMetadata" type class_ref 187138 // MetadataRef
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Tries to load binary metadata and notify, whether it was successful, eventually
log error

@param binaryMetadata	Reference to metadata object, where they will be stored
@param aid		Analysis Id
@param eid		Experiment Id
@param bid		Binary Id 

@return	True if metadata was loaded successfuly
"
      end

      operation 520194 "ensureSuccessStoreBinaryMetadata"
	class_operation public explicit_return_type "boolean"
	nparams 4
	  param inout name "binaryMetadata" type class_ref 187266 // Metadata
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Tries to store binary metadata and notify, whether it was successful, eventually
log error

@param binaryMetadata	Reference to metadata object, where they will be stored
@param aid		Analysis Id
@param eid		Experiment Id
@param bid		Binary Id 

@return	True if metadata was loaded successfuly
"
      end

      operation 520322 "setBinaryComment"
	public explicit_return_type "void"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param in name "comment" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets the comment metadata of a binary

@param aid	Analysis Id
@param eid	Experiment Id
@param bid	Binary Id
@param comment	Comment to set
"
      end

      operation 520450 "eraseBinary"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	nexceptions 1
	  exception class_ref 187394 // DeleteLockedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Deletes given binary

@param aid
           Analysis ID
@param eid
           Experiment ID
@param bid
           Binary ID

@return True iff successful

@throws DeleteLockedException	In case binary is locked for deleting 
"
      end

      operation 520578 "getContext"
	public explicit_return_type "String"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the context of a given binary

@param aid	Analysis Id
@param eid	Experiment Id
@param bid	Binary Id
@return	The context Id 
"
      end

      operation 520706 "uploadBinaryFile"
	public return_type class_ref 134658 // UploadHandle
	nparams 7
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param in name "name" explicit_type "String"
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "int"
	  param inout name "blocking" explicit_type "boolean"
	nexceptions 3
	  explicit_exception "UnknownHostException"
	  explicit_exception "IOException"
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Uploads binary file (through TCP)

@see cz.cuni.mff.been.resultsrepository.Database#uploadFile

@param aid
           Analysis ID
@param eid
           Experiment ID
@param bid
           Binary ID
@param name
           Name of file to store
@param host
           Hostname to connect to for data retrieving
@param port
           Port used in connection with host
@param blocking
           Determines, whether to use blocking transfer
@return Handle of network connection

@throws UnknownHostException
            In the case host could not be found
@throws IOException
            In the case of some IO error
@throws ResultsRepositoryBusyException
            In the case of non-blocking upload when Results Repository is
            busy with (down/)uploading files
"
      end

      operation 520834 "downloadBinaryFile"
	public return_type class_ref 149762 // DownloadHandle
	nparams 7
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param in name "name" explicit_type "String"
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "int"
	  param inout name "blocking" explicit_type "boolean"
	nexceptions 3
	  explicit_exception "UnknownHostException"
	  explicit_exception "IOException"
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Download binary file data from database

@see cz.cuni.mff.been.resultsrepository.Database#downloadFile

@param aid
           Analysis ID
@param eid
           Experiment ID
@param bid
           Binary ID
@param name
           Name of file to store
@param host
           Hostname to connect to for data retrieving
@param port
           Port used in connection with host
@param blocking
           Determines, whether to use blocking transfer
@return Handle of network connection

@throws UnknownHostException
            In the case host could not be found
@throws IOException
            In the case of some IO error
@throws ResultsRepositoryBusyException
            In the case of non-blocking upload when Results Repository is
            busy with (down/)uploading files
"
      end
    end

    class 188802 "TaskListManager"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
This class handles all the tasks information stored in entities. On experiment level, info
about whether logs are already uploaded is present, on binary level, only list is stored, on 
runs level, tables per run are stored.

Purpose is to allow logs upload and their displaying through GUI 

@author Jakub Lehotsky
"
      attribute 259842 "TASK_LIST_FILENAME"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"tasks\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Extensions of temporary directory for R scripts unpacking 
"
      end

      attribute 259970 "RUNSTASK_LIST_FILENAME"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"runs-tasks\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Extensions of temporary directory for R scripts unpacking 
"
      end

      attribute 260098 "ASCII_TAB"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"\\t\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " ASCII of TAB character 
"
      end

      classrelation 245122 // taskListManagerInstance (<unidirectional association>)
	relation 245122 --->
	  a role_name "taskListManagerInstance" init_value "=  null" class_relation private
	    comment " Single instance of load collector 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 245122 // taskListManagerInstance (<unidirectional association>)
	  b parent class_ref 188802 // TaskListManager
      end

      classrelation 245250 // database (<unidirectional association>)
	relation 245250 --->
	  a role_name "database" class_relation private
	    comment " Databse that is used for results in Results Repository 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 245250 // database (<unidirectional association>)
	  b parent class_ref 186242 // Database
      end

      classrelation 245378 // experimentTaskList (<unidirectional association>)
	relation 245378 --->
	  a role_name "experimentTaskList" class_relation private
	    comment " Experiment task list 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 245378 // experimentTaskList (<unidirectional association>)
	  b parent class_ref 190850 // NumberedTable
      end

      attribute 260226 "binaryTaskList"
	class_attribute private explicit_type "String"
	stereotype "ArrayList"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Binary task list 
"
      end

      classrelation 245506 // runsTaskList (<unidirectional association>)
	relation 245506 --->
	  a role_name "runsTaskList" class_relation private
	    comment " Runs task list 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 245506 // runsTaskList (<unidirectional association>)
	  b parent class_ref 190850 // NumberedTable
      end

      operation 595842 "TaskListManager"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
 Construction
"
      end

      operation 595970 "initialize"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "database" type class_ref 186242 // Database
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 596098 "getInstance"
	class_operation public return_type class_ref 188802 // TaskListManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the single instance of load collector

@return	Reference to LoadCollector instance 
"
      end

      operation 596226 "loadExperimentTaskList"
	package explicit_return_type "void"
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ****************** 
 *** EXPERIMENT *** 
 ****************** 

Loads experiment task list into memory, this should be performed every time before another
operation is done upon experiment task list. In experiment task list, also information about
logs uploaded are stored (they are not stored with binaries and runs)

@param aid	Analysis ID
@param eid	Experiment ID
"
      end

      operation 596354 "storeExperimentTaskList"
	package explicit_return_type "void"
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Stores experiment task list in memory into disk including \"logs uploaded\" flag 

@param aid	Analysis ID
@param eid	Experiment ID
"
      end

      operation 596482 "addNewExperimentTasks"
	package explicit_return_type "void"
	nparams 1
	  param in name "taskIds" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Adds new experiment tasks into list (loadExperimentTaskList should be called before!)
These tasks are selected as with logs not yet uploaded.  

@param taskIds
"
      end

      operation 596610 "setExperimentTaskUploadedFlag"
	package explicit_return_type "void"
	nparams 1
	  param in name "taskId" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets the flag \"logs are uploaded\" for a giben task in experiment (this is stored 
accross whole experiment only). This is changed in memory only, so be shure to have
<code>loadExperimentTaskList()</code> before and call <code>storeExperimentTaskList()</code> 
to persist information. 

@param taskId	The name of task, to set \"logs are uploaded\" flag 
"
      end

      operation 596738 "getExperimentUnuploadedTaskList"
	package explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the list of all tasks registered with experiment, which don't have their logs 
uploaded (i.e. have not \"logs uploaded\" flag set)

@return	The list of tasks which don't have logs uploaded
"
      end

      operation 596866 "getExperimentTaskList"
	package explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns list of all tasks contained in experiment (both which uploaded their logs, and 
which didn't)

@return	The list of task names in experiment
"
      end

      operation 596994 "loadBinaryTaskList"
	public explicit_return_type "void"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ************** 
 *** BINARY *** 
 ************** 

Load binary task list into memory. This is simpler than experiment, it doesn't contain
information about logs presence for a given task, so just list of tasks is stored. 

@param aid	Analysis ID
@param eid	Experiment ID
@param bid	Binary ID
"
      end

      operation 597122 "storeBinaryTaskList"
	public explicit_return_type "void"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Stores task list of a given binary to the disk
 
@param aid	Analysis ID
@param eid	Experiment ID
@param bid	Binary ID
"
      end

      operation 597250 "addNewBinaryTasks"
	package explicit_return_type "void"
	nparams 1
	  param in name "taskIds" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Adds list of tasks to existing binary task list. It is done in memory, so be shure to have 
actual data in memory loaded with <code>loadBinaryTaskList()</code>  and then to store it 
to disk with <code>storeBinaryTaskList()</code>

@param taskIds
"
      end

      operation 597378 "getBinaryTaskList"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returnns binary tasks list stored in memory.

@return	The list of task names for a given binary
"
      end

      operation 597506 "loadRunsTaskList"
	public explicit_return_type "void"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ************** 
 *** BINARY *** 
 ************** 

Loads runs task list into memory. This is loaded for whole binary at once. When some run
is deleted, item is still kept. This little DB-leak allows for more simplicity of managing 
code. 

@param aid	Analysis ID
@param eid	Experiment ID
@param bid	Binary ID
"
      end

      operation 597634 "addNewRunsTasks"
	package explicit_return_type "void"
	nparams 2
	  param inout name "rid" type class_ref 140290 // RID
	  param in name "taskIds" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Adds task list for a given run. Noticed that for a run, just a single list is provided and
it is not changed any more in future. For experiment and binaries, it can be added to allow
additional measurements mechanism. 

@param rid		Run ID
@param taskIds	List of tasks that belong to RID
"
      end

      operation 597762 "storeRunsTaskList"
	package explicit_return_type "void"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Stores task list of runs of given binary to disk

@param aid	Analysis ID
@param eid	Experiment ID
@param bid	Binary ID
"
      end

      operation 597890 "getRunTaskList"
	public explicit_return_type "String"
	nparams 1
	  param inout name "rid" type class_ref 140290 // RID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns task list of a given run. This is read from memory. So, if you want to read from the
disk, be shure to call loadRunsTaskList before.

@param rid	Run ID, for which we want task list
@return		List of tasks
"
      end
    end

    class 188930 "ExperimentEntityManager"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Simple class for performing of logs collection from Task Manager and storing it
in database

@author Jakub Lehotsky
"
      attribute 246914 "BM_CONTACT_DELETE_PERMIT_ERROR"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"Unable to contact benchmark manager to get experiment deletion permit.\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Unable to contact Benchmark manager to get deletion permit error 
"
      end

      attribute 247042 "COLUMNS_FILE"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"columns\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 247170 "ASCII_TAB"
	class_attribute const_attribute private explicit_type "Object"
	init_value "=  \"\\t\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 227074 // experimentEntityManager (<unidirectional association>)
	relation 227074 --->
	  a role_name "experimentEntityManager" init_value "=  null" class_relation private
	    comment " Single instance of load collector 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 227074 // experimentEntityManager (<unidirectional association>)
	  b parent class_ref 188930 // ExperimentEntityManager
      end

      classrelation 227202 // database (<unidirectional association>)
	relation 227202 --->
	  a role_name "database" private
	    comment " Databse that is used for results in Results Repository 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 227202 // database (<unidirectional association>)
	  b parent class_ref 186242 // Database
      end

      classrelation 227330 // metaManager (<unidirectional association>)
	relation 227330 --->
	  a role_name "metaManager" class_relation private
	    comment " Metadata manager - loading and storing 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 227330 // metaManager (<unidirectional association>)
	  b parent class_ref 186370 // MetadataManager
      end

      classrelation 227458 // statisticsManager (<unidirectional association>)
	relation 227458 --->
	  a role_name "statisticsManager" private
	    comment " Internal statistics manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 227458 // statisticsManager (<unidirectional association>)
	  b parent class_ref 186498 // StatisticsManager
      end

      classrelation 227586 // graphManager (<unidirectional association>)
	relation 227586 --->
	  a role_name "graphManager" private
	    comment " Internal graph manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 227586 // graphManager (<unidirectional association>)
	  b parent class_ref 186626 // GraphManager
      end

      classrelation 227714 // logCollector (<unidirectional association>)
	relation 227714 --->
	  a role_name "logCollector" private
	    comment " Internal analysis entity manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 227714 // logCollector (<unidirectional association>)
	  b parent class_ref 189442 // LogCollector
      end

      classrelation 227842 // taskListManager (<unidirectional association>)
	relation 227842 --->
	  a role_name "taskListManager" private
	    comment " Internal task list manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 227842 // taskListManager (<unidirectional association>)
	  b parent class_ref 188802 // TaskListManager
      end

      classrelation 227970 // rolesManager (<unidirectional association>)
	relation 227970 --->
	  a role_name "rolesManager" private
	    comment " Internal roles manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 227970 // rolesManager (<unidirectional association>)
	  b parent class_ref 189570 // RolesManager
      end

      classrelation 228098 // rScriptsRunner (<unidirectional association>)
	relation 228098 --->
	  a role_name "rScriptsRunner" private
	    comment " Internal scripts runner reference 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 228098 // rScriptsRunner (<unidirectional association>)
	  b parent class_ref 186754 // RScriptsRunner
      end

      classrelation 228226 // analysisEntityManager (<unidirectional association>)
	relation 228226 --->
	  a role_name "analysisEntityManager" private
	    comment " Internal analysis entity manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 228226 // analysisEntityManager (<unidirectional association>)
	  b parent class_ref 186114 // AnalysisEntityManager
      end

      operation 531842 "ExperimentEntityManager"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
 Construction, notify load collector about Results Repository database when constructing
"
      end

      operation 531970 "getInstance"
	class_operation public return_type class_ref 188930 // ExperimentEntityManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the single instance of load collector

@return	Reference to LoadCollector instance 
"
      end

      operation 532098 "initialize"
	public explicit_return_type "void"
	nparams 9
	  param inout name "database" type class_ref 186242 // Database
	  param inout name "metaManager" type class_ref 186370 // MetadataManager
	  param inout name "statisticsManager" type class_ref 186498 // StatisticsManager
	  param inout name "graphManager" type class_ref 186626 // GraphManager
	  param inout name "logCollector" type class_ref 189442 // LogCollector
	  param inout name "taskListManager" type class_ref 188802 // TaskListManager
	  param inout name "rolesManager" type class_ref 189570 // RolesManager
	  param inout name "scriptsRunner" type class_ref 186754 // RScriptsRunner
	  param inout name "analysisEntityManager" type class_ref 186114 // AnalysisEntityManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Use to initialize analysis entity manager 

@param database			Instance of Results Repository database
@param metaManager		Instance of Results Repository metadata manager
@param statisticsManager	Instance of Results Repository statistics manager
@param graphManager		Instance of Results Repository graph manager
@param logCollector		Instance of Results Repository log collector 
@param taskListManager 	Instance of Results Repository task list manager
@param rolesManager		Instance of Results Repository roles manager
@param scriptsRunner 
@param analysisEntityManager	Instance of Results Repository analysis entity manager

"
      end

      operation 532226 "addExperiment"
	public explicit_return_type "void"
	nparams 1
	  param inout name "description" type class_ref 135426 // ExperimentEntity
	nexceptions 1
	  exception class_ref 186882 // ResultsRepositoryException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Adds new experiment into results repository, so it can be filled with entities and results,
it must not exist before and containing analysis must be already created

@param description Description of analysis - all metadata for creation

@throws ResultsRepositoryException in case experiment already exists or some I/O error occurs
"
      end

      operation 532354 "addExperimentMetadata"
	public explicit_return_type "void"
	nparams 4
	  param inout name "analysisId" type class_ref 130434 // AID
	  param inout name "experimentId" type class_ref 133378 // EID
	  param in name "key" explicit_type "String"
	  param in name "value" explicit_type "String"
	nexceptions 1
	  exception class_ref 186882 // ResultsRepositoryException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allows adding new custom experiment metadata. 

@param analysisId	Analysis Id
@param experimentId	Experiment Id
@param key			Key of metadata item
@param value			Value of metadata item
@throws ResultsRepositoryException	In case you attempt to overwrite existing metadata item
"
      end

      operation 532482 "createExperiment"
	public explicit_return_type "void"
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	nexceptions 1
	  exception class_ref 186882 // ResultsRepositoryException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ************ Experiment ************** 

Initializes new experiment (creates it in a database - for a given
analysis)

@param aid
           Analysis ID
@param eid
           Experiment ID to be created
@throws ResultsRepositoryException
"
      end

      operation 532610 "experimentFinished"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Asks benchmark manager, whether experiment is finished

@param aid	Analysis Id
@param eid	Experiment Id

@return	True if experiment is finished
"
      end

      operation 532738 "getExperimentsInAnalysis"
	public return_type class_ref 187010 // Entity
	nparams 1
	  param inout name "aid" type class_ref 130434 // AID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}<EID>> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "
Returns the list of experiment in a given analysis stored in Results Repository

@param aid	Analysis Id 

@return The list
"
      end

      operation 532866 "isValidEid"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Checks whether EID conforms to some existing experiment in results
repository

@param aid
           Analysis ID
@param eid
           Experiment ID
@return True iff analysis does exist in results repository
"
      end

      operation 532994 "ensureValidEid"
	public explicit_return_type "void"
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Ensures that given EID belongs to a valid experiment in a given analysis in results repository,
otherwise throws an IllegalArgumentException

@param aid
		Analysis ID
@param eid
		Experiment Id          
"
      end

      operation 533122 "isDeletable"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the flag, whether experiment is deltable. Experiment is deletable if it contains no
incomplete binaries and no script is running for any binary. Or it has \"finished\" 
state in Benchmark manager. 

Synchronization note: experiment may come non-deletable between this call and call to eraseExperiment()

@param aid	Analysis Id
@param eid	Experiment Id 
@return	True if deletable
"
      end

      operation 533250 "getExperiment"
	public return_type class_ref 187010 // Entity
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<EID> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the Entity&lt;EID&gt; object representing experiment for use in GUI

@param aid	Analysis Id
@param eid	Experiment Id 

@return	The experiment entity
"
      end

      operation 533378 "ensureSuccessLoadExperimentMetadata"
	class_operation public explicit_return_type "boolean"
	nparams 3
	  param inout name "experimentMetadata" type class_ref 187138 // MetadataRef
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Tries to load experiment metadata and notify, whether it was successful, eventually
log error

@param experimentMetadata	Reference to metadata object, where they will be stored
@param aid		Analysis Id
@param eid		Experiment Id

@return	True if metadata was loaded successfuly
"
      end

      operation 533506 "ensureSuccessStoreExperimentMetadata"
	class_operation public explicit_return_type "boolean"
	nparams 3
	  param inout name "experimentMetadata" type class_ref 187266 // Metadata
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Tries to store experiment metadata and notify, whether it was successful, eventually
log error

@param experimentMetadata	Reference to metadata object, where they will be stored
@param aid	Analysis Id
@param eid	Experiment Id
@return	True if metadata was loaded successfuly
"
      end

      operation 533634 "setExperimentComment"
	public explicit_return_type "void"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param in name "comment" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets the comment metadata of an experiment

@param aid	Analysis Id
@param eid	Experiment Id 
@param comment	Comment to set
"
      end

      operation 533762 "eraseExperiment"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	nexceptions 1
	  exception class_ref 187394 // DeleteLockedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Deletes given experiment (results, logs, load info, metadata, additional
info, etc.)

@param aid
           Analysis ID
@param eid
           Experiment ID

@return True iff successful

@throws DeleteLockedException	If experiment is locked for deleting 
"
      end

      operation 533890 "uploadExperimentFile"
	public return_type class_ref 134658 // UploadHandle
	nparams 6
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param in name "name" explicit_type "String"
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "int"
	  param inout name "blocking" explicit_type "boolean"
	nexceptions 3
	  explicit_exception "UnknownHostException"
	  explicit_exception "IOException"
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Uploads experiment file (through TCP, etc...)

@see cz.cuni.mff.been.resultsrepository.Database#uploadFile

@param aid
           Analysis ID
@param eid
           Experiment ID
@param name
           Name of file to store
@param host
           Hostname to connect to for data retrieving
@param port
           Port used in connection with host
@param blocking
           Determines, whether to use blocking transfer
@return Handle of network connection

@throws UnknownHostException
            In the case host could not be found
@throws IOException
            In the case of some IO error
@throws ResultsRepositoryBusyException
            In the case of non-blocking upload when Results Repository is
            busy with (down/)uploading files
"
      end

      operation 534018 "downloadExperimentFile"
	public return_type class_ref 149762 // DownloadHandle
	nparams 6
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param in name "name" explicit_type "String"
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "int"
	  param inout name "blocking" explicit_type "boolean"
	nexceptions 3
	  explicit_exception "UnknownHostException"
	  explicit_exception "IOException"
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Download experiment file data from database

@see cz.cuni.mff.been.resultsrepository.Database#downloadFile

@param aid
           Analysis ID
@param eid
           Experiment ID
@param name
           Name of file to download
@param host
           Hostname to connect to for data retrieving
@param port
           Port used in connection with host
@param blocking
           Determines, whether to use blocking transfer
@return Handle of network connection

@throws UnknownHostException
            In the case host could not be found
@throws IOException
            In the case of some IO error
@throws ResultsRepositoryBusyException
            In the case of non-blocking upload when Results Repository is
            busy with (down/)uploading files
"
      end

      operation 534146 "getExperimentContext"
	public explicit_return_type "String"
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the context of a given experiment, in case it is already registered (unless an error
occurs in BM, it should be registered upon creation)

@param aid	Analysis Id
@param eid	Experiment Id
@return		Context Id
"
      end

      operation 534274 "getExperimentGraphCount"
	public explicit_return_type "int"
	nparams 3
	  param inout name "graphType" type class_ref 187650 // GraphType
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the experiment graph count of a given graph type

@param graphType	Load or Results graph type
@param aid	Analysis Id
@param eid	Experiment Id 
@return	The count of graphs
"
      end

      operation 534402 "getExperimentGraphInfo"
	public return_type class_ref 187778 // GraphInfo
	nparams 4
	  param inout name "graphType" type class_ref 187650 // GraphType
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param in name "index" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the experiment graph info for a given graph. GraphInfo object returned contains 
width, height and title of the graph

@param graphType	Load or Results graph type
@param aid	Analysis Id
@param eid	Experiment Id 
@param index	Index of graph - can be one of 0..getExperimentGraphCount()-1
@return	The graph info

@throws IOException	In case of error of getting metadata
"
      end

      operation 534530 "getExperimentGraphPath"
	public explicit_return_type "String"
	nparams 4
	  param inout name "graphType" type class_ref 187650 // GraphType
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param in name "index" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the complete path for a given experiment graph

@param graphType
		Load or Results graph type
@param aid
		Analysis Id
@param eid
		Experiment Id 
@param index
		Index of graph - can be one of 0..getExperimentGraphCount()-1
@return
		The path to the file with graph image on disk
@throws IOException
		if this info couldn't be retrieved because of I/O problems
@throws IllegalArgumentException 
		if graph doesn't exist
"
      end

      operation 534658 "reportExperimentColumnNames"
	public explicit_return_type "void"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "columnNames" explicit_type "ArrayList<String>"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Reports column names for experiment

@param aid	Analysis Id
@param eid	Experiment Id
@param columnNames	<code>ArrayList&lt;String&gt;</code> containing list of column names 
"
      end
    end

    class 189058 "BinaryImplementation"
      visibility public 
      nactuals 2
      actual class class_ref 188034 // EntityImplementation
        rank 0 value class_ref 138754 // BID
      actual class class_ref 188162 // EntityInterface
        rank 0 value class_ref 138754 // BID
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 222338 // <realization>
	relation 222338 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 222338 // <realization>
	  b parent class_ref 188034 // EntityImplementation
      end

      classrelation 222466 // <realization>
	relation 222466 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 222466 // <realization>
	  b parent class_ref 148226 // Serializable
      end

      classrelation 222594 // <realization>
	relation 222594 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 222594 // <realization>
	  b parent class_ref 188162 // EntityInterface
      end

      attribute 243970 "LOAD_FOR_RUNS_ONLY"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"Load graphs defined for runs only.\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Load graphs defined for runs only error message 
"
      end

      attribute 244098 "RAW_DATA_FOR_RUNS_ONLY"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"Raw data download defined for runs only.\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Raw data download defined for runs only 
"
      end

      attribute 244226 "NO_BINARY_GRAPHS"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"No graphs for binaries.\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Binaries don't support graphs - will be changed maybe ;) 
"
      end

      classrelation 222722 // binaryEntityManager (<unidirectional association>)
	relation 222722 --->
	  a role_name "binaryEntityManager" private
	    comment " Results repository entity manager for analyses 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 222722 // binaryEntityManager (<unidirectional association>)
	  b parent class_ref 188674 // BinaryEntityManager
      end

      classrelation 222850 // aid (<unidirectional association>)
	relation 222850 --->
	  a role_name "aid" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 222850 // aid (<unidirectional association>)
	  b parent class_ref 130434 // AID
      end

      classrelation 222978 // eid (<unidirectional association>)
	relation 222978 --->
	  a role_name "eid" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 222978 // eid (<unidirectional association>)
	  b parent class_ref 133378 // EID
      end

      operation 520962 "BinaryImplementation"
	public explicit_return_type ""
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Construction of basic Binary implementation 
@param aid 	AnalysisId
@param eid 	ExperimentId
@throws RemoteException"
      end

      operation 521090 "getEntity"
	public return_type class_ref 187010 // Entity
	nparams 1
	  param inout name "id" type class_ref 138754 // BID
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<BID> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 521218 "setEntityComment"
	public explicit_return_type "void"
	nparams 2
	  param inout name "id" type class_ref 138754 // BID
	  param in name "comment" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 521346 "getEntities"
	public return_type class_ref 187010 // Entity
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}<BID>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 521474 "getSubentityInterface"
	public return_type class_ref 188162 // EntityInterface
	nparams 1
	  param inout name "id" type class_ref 138754 // BID
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 521602 "getExportFormats"
	public return_type class_ref 188290 // DataFormat
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 521730 "beginExport"
	public return_type class_ref 149762 // DownloadHandle
	nparams 4
	  param inout name "ids" type class_ref 138754 // BID
	  param in name "formatId" explicit_type "String"
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 521858 "getImportFormats"
	public return_type class_ref 188290 // DataFormat
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 521986 "beginImport"
	public return_type class_ref 134658 // UploadHandle
	nparams 3
	  param in name "formatId" explicit_type "String"
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 522114 "deleteEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "id" type class_ref 138754 // BID
	nexceptions 2
	  exception class_ref 187394 // DeleteLockedException
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 522242 "graphCount"
	public explicit_return_type "int"
	nparams 2
	  param inout name "graphType" type class_ref 187650 // GraphType
	  param inout name "id" type class_ref 138754 // BID
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 522370 "getGraphInfo"
	public return_type class_ref 187778 // GraphInfo
	nparams 3
	  param inout name "graphType" type class_ref 187650 // GraphType
	  param inout name "id" type class_ref 138754 // BID
	  param in name "index" explicit_type "int"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 522498 "beginGraphDownload"
	public return_type class_ref 149762 // DownloadHandle
	nparams 5
	  param inout name "graphType" type class_ref 187650 // GraphType
	  param inout name "id" type class_ref 138754 // BID
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	  param in name "index" explicit_type "int"
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 522626 "getGraphDownloadStatus"
	public return_type class_ref 149890 // DownloadStatus
	nparams 1
	  param inout name "handle" type class_ref 149762 // DownloadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 522754 "endGraphDownload"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handle" type class_ref 149762 // DownloadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 522882 "beginRawDataDownload"
	public return_type class_ref 149762 // DownloadHandle
	nparams 3
	  param inout name "id" type class_ref 138754 // BID
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 2
	  exception class_ref 187522 // ResultsRepositoryBusyException
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 523010 "endRawDataDownload"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handle" type class_ref 149762 // DownloadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 523138 "getRawDataDownloadStatus"
	public return_type class_ref 149890 // DownloadStatus
	nparams 1
	  param inout name "handle" type class_ref 149762 // DownloadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 523266 "getContext"
	public explicit_return_type "String"
	nparams 1
	  param inout name "id" type class_ref 138754 // BID
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 523394 "getTasks"
	public explicit_return_type "String"
	nparams 1
	  param inout name "id" type class_ref 138754 // BID
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 523522 "getLogsForTask"
	public return_type class_ref 184194 // LogRecord
	nparams 2
	  param inout name "id" type class_ref 138754 // BID
	  param in name "taskID" explicit_type "String"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 184322 // LogStorageException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "NullPointerException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 189186 "RunValidityMapsManager"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Class managing translations of BEEN RID to Results repository internal RRID

@author Jakub Lehotsky
"
      attribute 258434 "BINARY_VALIDITYMAP_FILENAME"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"validity.map\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Validity map filename 
"
      end

      attribute 258562 "META_TYPE"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \".meta\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Metadata file extension 
"
      end

      attribute 258690 "STATISTIC_TYPE"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \".stat\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Statistics file extension 
"
      end

      classrelation 243970 // database (<unidirectional association>)
	relation 243970 --->
	  a role_name "database" class_relation private
	    comment " Reference to Results Repository database 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 243970 // database (<unidirectional association>)
	  b parent class_ref 186242 // Database
      end

      classrelation 244098 // rolesManager (<unidirectional association>)
	relation 244098 --->
	  a role_name "rolesManager" class_relation private
	    comment " Reference to Results Repository roles manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 244098 // rolesManager (<unidirectional association>)
	  b parent class_ref 189570 // RolesManager
      end

      classrelation 244226 // rvmInstance (<unidirectional association>)
	relation 244226 --->
	  a role_name "rvmInstance" init_value "=  null" class_relation private
	    comment " The single existing intance of RID Manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 244226 // rvmInstance (<unidirectional association>)
	  b parent class_ref 189186 // RunValidityMapsManager
      end

      classrelation 244354 // tableAID (<unidirectional association>)
	relation 244354 --->
	  a role_name "tableAID" init_value "=  null" class_relation private
	    comment " AID of table in memory 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 244354 // tableAID (<unidirectional association>)
	  b parent class_ref 130434 // AID
      end

      classrelation 244482 // tableEID (<unidirectional association>)
	relation 244482 --->
	  a role_name "tableEID" init_value "=  null" class_relation private
	    comment " EID of table in memory 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 244482 // tableEID (<unidirectional association>)
	  b parent class_ref 133378 // EID
      end

      classrelation 244610 // tableBID (<unidirectional association>)
	relation 244610 --->
	  a role_name "tableBID" init_value "=  null" class_relation private
	    comment " BID of table in memory 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 244610 // tableBID (<unidirectional association>)
	  b parent class_ref 138754 // BID
      end

      classrelation 244738 // table (<unidirectional association>)
	relation 244738 --->
	  a role_name "table" init_value "=  null" class_relation private
	    comment " Validity table data 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 244738 // table (<unidirectional association>)
	  b parent class_ref 193794 // RRIDTable
      end

      operation 592258 "RunValidityMapsManager"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Constructor - private, void for singleton use

"
      end

      operation 592386 "getInstance"
	class_operation public return_type class_ref 189186 // RunValidityMapsManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Return single instance of RID manager

@return reference single running instance of graph manager
"
      end

      operation 592514 "initialize"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "database" type class_ref 186242 // Database
	  param inout name "rolesManager" type class_ref 189570 // RolesManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Initialize RID Manager before its first use

@param database
           Instance of database we use
@param rolesManager 
			  Instance of roles manager
"
      end

      operation 592642 "openRRIDTable"
	private explicit_return_type "void"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Private method, used to load validity map for binary aid/eid/bid. If it
was called with previous parameters, it doesn't reload it. (warning!
unless you don't call storeRRIDTable(), changes AREN'T written back to
table on the disk)

@param aid
           AnalysisID
@param eid
           ExperimentID
@param bid
           BinaryID
"
      end

      operation 592770 "storeRRIDTable"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Private method, used to store whole validity table currently cached back
to hard disk.
"
      end

      operation 592898 "generateNewFilename"
	public explicit_return_type "String"
	nparams 9
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	  param in name "tableIndex" explicit_type "int"
	  param in name "totalTables" explicit_type "int"
	  param in name "hostName" explicit_type "String"
	  param in name "roleName" explicit_type "String"
	  param inout name "runValid" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Call this method to generate new filename for run to be stored (relative
to binary core directory), it updates index of valid runs in given
analysis

@param aid
           AnalysisID
@param eid
           ExperimentID
@param bid
           BinaryID
@param rid
           RunID
@param tableIndex 
			  Index of the table
@param totalTables 
			  Total count of tables
@param hostName
			  The name of hosts from which results arrive
@param roleName 
			  The name of the role
@param runValid

@return null in case of error
@throws IOException 
"
      end

      operation 593026 "getRunCount"
	public explicit_return_type "int"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns valid run count of given analysis (not read from metadata, but
from table)

@param aid
           Analysis ID
@param eid
           Experiment ID
@param bid
           Binary ID
@return Actual run count
"
      end

      operation 593154 "isValidRun"
	public explicit_return_type "boolean"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns true if run is in table and is not crashed, don't exchange with
Database.s isValidRunIndex! It is something different

@param aid
           AnalysisID
@param eid
           ExperimentID
@param bid
           BinaryID
@param rid
           RunID
@return True iff run correctly exists
"
      end

      operation 593282 "getRunPaths"
	public explicit_return_type "String"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns position of actual physical file with run data, given aid, eid,
bid and rid, null in the case it doesn't exist. Path is relative to
binary directory.

@param aid
           AnalysisID
@param eid
           ExperimentID
@param bid
           BinaryID
@param rid
           RunID
@return Position of run data in binary directory
"
      end

      operation 593410 "getRunMetadataPath"
	public explicit_return_type "String"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns position of actual physical file with run metadata, given aid,
eid, bid and rid, null in the case it doesn't exist. Path is relative to
binary directory.

@param aid
           AnalysisID
@param eid
           ExperimentID
@param bid
           BinaryID
@param rid
           RunID
@return Position of run data in binary directory
"
      end

      operation 593538 "getRunLoadGraphsPath"
	public explicit_return_type "String"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns position of directory with run load graph table, if
this does not exist, create one, write it to file and call R functions to
generate all the graphs (if possible, i.e. if data are present)

@param aid
           AnalysisID
@param eid
           ExperimentID
@param bid
           BinaryID
@param rid
           RunID
           
@return Position of run data in binary directory

@throws IOException In case of invalid structure
"
      end

      operation 593666 "getRunStatisticsPath"
	public explicit_return_type "String"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns position of actual physical file with run statistics, given aid,
eid, bid and rid, null in the case it doesn't exist. Path is relative to
binary directory.

@param aid
           AnalysisID
@param eid
           ExperimentID
@param bid
           BinaryID
@param rid
           RunID
@return Position of run data in binary directory
"
      end

      operation 593794 "getRunTable"
	public return_type class_ref 193794 // RRIDTable
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the whole table - for optimization and internal database use

@param aid
           AnalysisID
@param eid
           ExperimentID
@param bid
           BinaryID
@return The table containing whole validity map
"
      end

      operation 593922 "readFileList"
	public explicit_return_type "ArrayList<File>"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns list of files with runs data

@param aid
           AnalysisID
@param eid
@param bid
@return List&lt;File&gt; containg list of files representing results of
        run
"
      end

      operation 594050 "deleteItem"
	public explicit_return_type "void"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Deletes item from the validity map

@param aid
           AnalysisId
@param eid
           ExperimentId
@param bid
           BinaryId
@param rid
           RunId
"
      end

      operation 594178 "allHostsUploaded"
	public explicit_return_type "boolean"
	nparams 5
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	  param in name "totalTables" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Checks whether all items for given host are in validity table   

@param aid	Analysis Id
@param eid	Experiment Id
@param bid	Binary Id
@param rid	Run Id
@param totalTables	Total count of tables;

@return	True, if all runs are uploaded, false otherwise
"
      end

      operation 594306 "getRealRunIndex"
	public explicit_return_type "long"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the real index of an item

@param aid	Analysis Id 
@param eid 	Experiment Id
@param bid 	Binary Id
@param rid 	Run Id

@return 	The real index (internal)
"
      end

      operation 594434 "decreaseIndexByOne"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
In table, decrease the true index of run file by one, used for run reindexing
after delete

@param index	The index
"
      end
    end

    class 189314 "LoadCollector"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Simple class for performing of load collection from given Host Runtime and storing results
in database when asked

@author Jakub Lehotsky
"
      classrelation 232194 // loadCollectorInstance (<unidirectional association>)
	relation 232194 --->
	  a role_name "loadCollectorInstance" init_value "=  null" class_relation private
	    comment " Single instance of load collector 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 232194 // loadCollectorInstance (<unidirectional association>)
	  b parent class_ref 189314 // LoadCollector
      end

      classrelation 232322 // database (<unidirectional association>)
	relation 232322 --->
	  a role_name "database" class_relation private
	    comment " Databse that is used for results in Results Repository 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unused\")
"
	    classrelation_ref 232322 // database (<unidirectional association>)
	  b parent class_ref 186242 // Database
      end

      classrelation 232450 // binaryEntityManager (<unidirectional association>)
	relation 232450 --->
	  a role_name "binaryEntityManager" class_relation package
	    comment " Internal binary entity manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 232450 // binaryEntityManager (<unidirectional association>)
	  b parent class_ref 188674 // BinaryEntityManager
      end

      operation 546690 "LoadCollector"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
 Construction, notify load collector about Results Repository database when constructing
"
      end

      operation 546818 "getInstance"
	class_operation public return_type class_ref 189314 // LoadCollector
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the single instance of load collector

@return	Reference to LoadCollector instance 
"
      end

      operation 546946 "initialize"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "database" type class_ref 186242 // Database
	  param inout name "binaryEntityManager" type class_ref 188674 // BinaryEntityManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
Must be called prior to use
	 
@param database	An instance of Results Repository database 
@param binaryEntityManager 	Instance of Results Repository binary entity manager
"
      end

      operation 547074 "initLoadUpload"
	public explicit_return_type "void"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Intializes load upload for a given run, this must called prior to uploading 
load for a given run

@param aid	Analysis Id
@param eid	Experiment Id
@param bid	Binaary Id
@param rid	Run Id
"
      end

      operation 547202 "closeLoadUpload"
	public explicit_return_type "void"
	nparams 5
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	  param inout name "valid" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Closes load upload for a given run. Must be called after load is uploaded. Results
Repository updates its metadata about load and eventually cleans data stored if
load uploaded was marked invalid (error occured during upload, etc.) 

@param aid	Analysis Id
@param eid	Experiment Id
@param bid	Binary Id
@param rid	Run Id
@param valid	True if uploaded load info is valid, false otherwise
"
      end

      operation 547330 "uploadLoadInfo"
	public return_type class_ref 134658 // UploadHandle
	nparams 8
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	  param in name "filename" explicit_type "String"
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "int"
	  param inout name "blocking" explicit_type "boolean"
	nexceptions 3
	  exception class_ref 187522 // ResultsRepositoryBusyException
	  explicit_exception "UnknownHostException"
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Used to start upload of load information file 
The client must open the socket on some port before calling this function. 
Then it calls the <code>uploadFile</code> method.

This method work asynchronously and returns immediately.
Before return it starts a new thread that will receive the file contents
from the socket open on given host and port.

If there is any error when sending the file contents, the socket
is closed. 

Client has an opportunity to check (via the <code>getFileUploadStatus</code> 
method to check the current status of upload (eventually can be error)
 
After the upload finishes, client should close the returned handle
via the <code>endFileUpload</code> method.  

@param aid	Analysis ID
@param eid	Experiment ID
@param bid	Binary ID
@param rid	Run ID for upload
@param filename	Filename
@param host	Hostname, from which file is uploaded
@param port	Open port for network transfer
@param blocking 	Determines, whether transfer will be blockin or non-blocking

@return 	UploadHandle, which you can use later to refer to transfer

@throws UnknownHostException
@throws IOException
@throws RemoteException 
@throws ResultsRepositoryBusyException 
"
      end
    end

    class 189442 "LogCollector"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Simple class for performing of logs collection from Task Manager and storing it
in database

@author Jakub Lehotsky
"
      classrelation 232706 // logCollectorInstance (<unidirectional association>)
	relation 232706 --->
	  a role_name "logCollectorInstance" init_value "=  null" class_relation private
	    comment " Single instance of load collector 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 232706 // logCollectorInstance (<unidirectional association>)
	  b parent class_ref 189442 // LogCollector
      end

      classrelation 232834 // database (<unidirectional association>)
	relation 232834 --->
	  a role_name "database" class_relation private
	    comment " Database that is used for results in Results Repository 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 232834 // database (<unidirectional association>)
	  b parent class_ref 186242 // Database
      end

      operation 549634 "LogCollector"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
 Construction, notify load collector about Results Repository database when constructing
"
      end

      operation 549762 "getInstance"
	class_operation public return_type class_ref 189442 // LogCollector
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the single instance of load collector

@return	Reference to LoadCollector instance 
"
      end

      operation 549890 "initialize"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "database" type class_ref 186242 // Database
	  param inout name "experimentEntityManager" type class_ref 188930 // ExperimentEntityManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
Must be called prior to use
	 
@param database	An instance of Results Repository database 
@param experimentEntityManager 	An instance of Results Repository experiment entity manager
"
      end

      operation 550018 "performLogUpload"
	public explicit_return_type "void"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param in name "contextName" explicit_type "String"
	  param in name "taskName" explicit_type "String"
	nexceptions 1
	  exception class_ref 186882 // ResultsRepositoryException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
This method causes log upload to start. It is syncrhonnous and blocking to ensure that all
logs are uploaded, before work continues on the other side (so that they are not cleaned up)
 
@param aid 			Analysis Id
@param eid 			Experiment Id
@param contextName	Context of task to upload logs from
@param taskName		The name of the task to upload logs from

@throws ResultsRepositoryException
"
      end

      operation 550146 "getExperimentContext"
	public explicit_return_type "String"
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the context of a given experiment, in case it is already registered (unless an error
occurs in BM, it should be registered upon creation)

@param aid	Analysis Id
@param eid	Experiment Id
@return		Context Id
"
      end

      operation 550274 "finishLogUpload"
	public explicit_return_type "void"
	nparams 2
	  param inout name "analysisId" type class_ref 130434 // AID
	  param inout name "experimentId" type class_ref 133378 // EID
	nexceptions 1
	  exception class_ref 186882 // ResultsRepositoryException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Finishes logs upload. This method should be called on the end of the experiments, as it
reads through the list of tasks and uploads logs of all tasks, which weren't uploaded yet.

@param analysisId	Analysis Id
@param experimentId	Experiment Id
@throws ResultsRepositoryException
"
      end

      operation 550402 "registerContextForLogging"
	public explicit_return_type "void"
	nparams 1
	  param in name "contextName" explicit_type "String"
	nexceptions 1
	  exception class_ref 186882 // ResultsRepositoryException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Registers context for logging, must be done prior to start of any logging for a context into
Results Repository

@param contextName		The name of the context to register
@throws ResultsRepositoryException
"
      end
    end

    class 189570 "RolesManager"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
This class is used for managing roles and hosts for each experiment

@author Jakub Lehotsky
"
      attribute 256258 "ROLES_LIST_FILENAME"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"roles\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Extensions of temporary directory for R scripts unpacking 
"
      end

      classrelation 238338 // rMInstance (<unidirectional association>)
	relation 238338 --->
	  a role_name "rMInstance" init_value "=  null" class_relation private
	    comment " Single instance of roles manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 238338 // rMInstance (<unidirectional association>)
	  b parent class_ref 189570 // RolesManager
      end

      classrelation 238466 // database (<unidirectional association>)
	relation 238466 --->
	  a role_name "database" class_relation private
	    comment " Databse that is used for results in Results Repository 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unused\")
"
	    classrelation_ref 238466 // database (<unidirectional association>)
	  b parent class_ref 186242 // Database
      end

      classrelation 238594 // rolesTable (<unidirectional association>)
	relation 238594 --->
	  a role_name "rolesTable" class_relation private
	    comment " Roles table 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 238594 // rolesTable (<unidirectional association>)
	  b parent class_ref 193282 // RoleList
      end

      operation 577666 "RolesManager"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
 Construction, notify load collector about Results Repository database when constructing
"
      end

      operation 577794 "getInstance"
	class_operation public return_type class_ref 189570 // RolesManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the single instance of roles manager

@return	Reference to RolesManager instance 
"
      end

      operation 577922 "initialize"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "database" type class_ref 186242 // Database
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
Must be called prior to use
	 
@param database	An instance of Results Repository database 
"
      end

      operation 578050 "loadRoleList"
	public explicit_return_type "void"
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Loads experiment table of roles on hosts mapping into memory 

@param aid	Analysis Id
@param eid	Experiment Id
"
      end

      operation 578178 "storeRoleList"
	package explicit_return_type "void"
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Stores role list on disk for a given experiment

@param aid	Analysis ID
@param eid	Experiment ID
"
      end

      operation 578306 "makeExperimentTable"
	package explicit_return_type "void"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "roleItems" type class_ref 193154 // RoleItem
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Creates the experiment roles vs. hosts table when creating new experiment

@param aid	Analysis Id
@param eid	Experiment Id
@param roleItems	Array with list of items to be put into array
"
      end

      operation 578434 "getKeyOfHostname"
	package explicit_return_type "long"
	nparams 1
	  param in name "hostname" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the key associated with a given host name for a given experiment (must 
be loaded before use of this merhod (see <code>loadRoleList()</code>)

@param hostname		Hostname to be querried
@return	The key		The key which was associated with him, -1 is it doesn't exist
"
      end

      operation 578562 "getRoleItem"
	package return_type class_ref 193154 // RoleItem
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns one role item identified by index

@param index	The index of the item

@return	The item from role list
"
      end

      operation 578690 "getItemIndex"
	public explicit_return_type "int"
	nparams 1
	  param in name "key" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the index the item, with given key. 

@param key	Key to ask for.
@return		Index of associated item in the table, -1 if it doesn't exist 
"
      end

      operation 578818 "getRoleCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns role count in a table

@return	Role count
"
      end
    end

    class 189698 "RManager"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Class that manages all that can be done with R in Results Repository. It manages handling with
R packages, initialization of R and low-level execution of R scripts. R scripts background thread,
management of R help functionalities and callbacks registering are delegated to the respective 
classes - in order RScriptsRunner, RHelpManager, RCallbacksManagerFactory 

@author Jakub Lehotsky
"
      attribute 254850 "INVALIDATE_SCRIPT_FILENAME"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"scripts\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Name of the file, where invalidate scripts are stored 
"
      end

      classrelation 237442 // rpMInstance (<unidirectional association>)
	relation 237442 --->
	  a role_name "rpMInstance" class_relation private
	    comment " Single instance of R Package Manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 237442 // rpMInstance (<unidirectional association>)
	  b parent class_ref 189698 // RManager
      end

      classrelation 237570 // database (<unidirectional association>)
	relation 237570 --->
	  a role_name "database" class_relation private
	    comment " Internal reference to results repository database 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 237570 // database (<unidirectional association>)
	  b parent class_ref 186242 // Database
      end

      attribute 254978 "rScripts"
	class_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " R scripting functionality 
"
      end

      classrelation 237698 // rCallbacksManagerFactory (<unidirectional association>)
	relation 237698 --->
	  a role_name "rCallbacksManagerFactory" class_relation private
	    comment " Internal Callbacks Manager Factory and holder 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 237698 // rCallbacksManagerFactory (<unidirectional association>)
	  b parent class_ref 192002 // RCallbacksManagerFactory
      end

      classrelation 237826 // rHelpManager (<unidirectional association>)
	relation 237826 --->
	  a role_name "rHelpManager" class_relation private
	    comment " R help manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 237826 // rHelpManager (<unidirectional association>)
	  b parent class_ref 193026 // RHelpManager
      end

      classrelation 237954 // rScriptsRunner (<unidirectional association>)
	relation 237954 --->
	  a role_name "rScriptsRunner" class_relation private
	    comment " R scripts runner - manages background thread for running scripts 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 237954 // rScriptsRunner (<unidirectional association>)
	  b parent class_ref 186754 // RScriptsRunner
      end

      attribute 255106 "rEvaluator"
	class_attribute private explicit_type "REvaluator"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " R evaluator 
"
      end

      attribute 255234 "rInterpreter"
	class_attribute private explicit_type "ROmegahatInterpreter"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SuppressWarnings(\"unused\")
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " R interpreter 
"
      end

      operation 572290 "RManager"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Constructor - private, void for singleton use 
"
      end

      operation 572418 "getInstance"
	class_operation public return_type class_ref 189698 // RManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Return single instance of R manager 

@return	reference single running instance of Graph manager
"
      end

      operation 572546 "initialize"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "database" type class_ref 186242 // Database
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Initialize R Manager before its first use 

@param database	Instance of database we use
"
      end

      operation 572674 "shutdown"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Shutdown of R sub-system. Stops R scripts execution
background thread
"
      end

      operation 572802 "rScriptingEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Informs about status of R scripts execution

@return	True if scripts running is OK
"
      end

      operation 572930 "getRScriptsRunner"
	class_operation public return_type class_ref 186754 // RScriptsRunner
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns internal scripts runner (for enqueuing scripts and callbacks)

@return	The instance of RScriptsRunner
"
      end

      operation 573058 "executeRCommand"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "command" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Executes one R command

@param command	String containing command to be executed in R
"
      end

      operation 573186 "initR"
	class_operation public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Initializes R: load RNetCDF and SJava library in R, set the source for
used R scripts and setup R scripts environment to Results Repository
database.
"
      end

      operation 573314 "sourceRegisteredScripts"
	class_operation public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 186882 // ResultsRepositoryException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Initialize all registered R scripts (sources them, so that functions are stored inside R)

@throws ResultsRepositoryException
"
      end

      operation 573442 "sourceOnePackageScript"
	public explicit_return_type "void"
	nparams 1
	  param in name "packageName" explicit_type "String"
	nexceptions 1
	  exception class_ref 186882 // ResultsRepositoryException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sources one R package, this method should be called after all initialization

@param packageName - the name of the package to source
@throws ResultsRepositoryException	in case something goes wrong
"
      end

      operation 573570 "initRScript"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "pathToScript" explicit_type "String"
	nexceptions 1
	  exception class_ref 186882 // ResultsRepositoryException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Source one script - i.e. load it from file system to be used inside R

@param pathToScript
           path to R scripts
@throws ResultsRepositoryException
            when R scripts are not turned on
"
      end

      operation 573698 "uploadAndRegisterRPackge"
	public return_type class_ref 134658 // UploadHandle
	nparams 3
	  param in name "name" explicit_type "String"
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "int"
	nexceptions 3
	  explicit_exception "UnknownHostException"
	  explicit_exception "IOException"
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Uploads R package and install it inside results repository (through TCP)


@see cz.cuni.mff.been.resultsrepository.Database#uploadFile

@param name
           Name of the package to be uploaded
@param host
           Hostname to connect to for data retrieving
@param port
           Port used in connection with host
@return Handle of network connection

@throws UnknownHostException
            In the case host could not be found
@throws IOException
            In the case of some IO error
@throws ResultsRepositoryBusyException
            In the case of non-blocking upload when Results Repository is
            busy with (down/)uploading files
"
      end

      operation 573826 "isRPackageRegistered"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Checks whether given R scripts package is registered in results
repository

@param name
           Name of the package to check
@return True iff package is registered
"
      end

      operation 573954 "ensureRPackageRegistered"
	public explicit_return_type "void"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Checks that R package is really registered, otherwise throw an
IllegalArgumentException

@param name
           The name of the package
"
      end

      operation 574082 "ensureRPackageNotRegistered"
	public explicit_return_type "void"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Checks that R package is not yet registered, otherwsie throw an
IllegalArgumentException

@param name
           The name of the package
"
      end

      operation 574210 "deleteRPackage"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Deletes (unregister) R package from Results Repository
 
@param name	Name of the package to be deleted

@return	True iff successful
"
      end

      operation 574338 "getRejectedRPackageUploadErrorMessages"
	public explicit_return_type "String"
	nparams 1
	  param inout name "handle" type class_ref 134658 // UploadHandle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns all errors that occured in the case R package was rejected for some reason

@param handle	Handle of upload operation
@return	Array of strings containing error messages
"
      end

      operation 574466 "getRScriptPackages"
	public return_type class_ref 192642 // RScriptPackage
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Gives list of all registered R Script packages 

@return	Array of RScriptPackage, each item contains info about one registered package
"
      end

      operation 574594 "getAnalysisCallbackRScripts"
	public return_type class_ref 135554 // CallbackRScripts
	nparams 1
	  param inout name "aid" type class_ref 130434 // AID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns list of all set anaysis callback R scripts . Analysis scripts serve just as 
a template for experiment scripts, which are really used at finish of run upload

@param aid	Analysis Id
@return		CallbackRScripts object containing callback scripts to be executed 
				on each level of database after upload is done. 
"
      end

      operation 574722 "setAnalysisCallbackRScripts"
	public explicit_return_type "void"
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "callbackRScripts" type class_ref 135554 // CallbackRScripts
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets the list of all callback R scripts for a given analysis. Analysis scripts serve just as 
a template for experiment scripts, which are really used at finish of run upload

@param aid	Analysis Id
@param callbackRScripts		CallbackRScripts object containing callback scripts to 
	be executed on each level of database after upload is done. 
"
      end

      operation 574850 "setExperimentCallbackRScripts"
	public explicit_return_type "void"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "callbackRScripts" type class_ref 135554 // CallbackRScripts
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets the list of all callback R scripts to be executed for a given experiment. 

@param aid	Analysis Id
@param eid 	Experiment Id
@param callbackRScripts		CallbackRScripts object containing callback scripts to be executed 
								on each level of database after upload is done. 
"
      end

      operation 574978 "getRFunctionsHelp"
	public return_type class_ref 192770 // RFunctionHelp
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns help for R Scripts. Used by GUI

@return	Array of RFunctionHelp containing help for all R functions in all packages
"
      end

      operation 575106 "reloadRFunctionsHelp"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Causes R functions help to be reloaded from packages, useful on startup and after package 
deletion, package registration

@throws IOException	In case something goes wrong when loading
"
      end
    end

    class 189826 "LockManager"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Class that is managing arbitrary locking in all database on three entity levels - analyses,
experiments and binaries. For each lock, you just support a name. 


@author Jakub Lehotsky
"
      attribute 248450 "LOCK_DIR"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"locks\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Directory name for storing locks 
"
      end

      classrelation 232578 // lockManagerInstance (<unidirectional association>)
	relation 232578 --->
	  a role_name "lockManagerInstance" init_value "=  null" class_relation private
	    comment " Single instance of lock manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 232578 // lockManagerInstance (<unidirectional association>)
	  b parent class_ref 189826 // LockManager
      end

      attribute 248578 "databasePath"
	class_attribute private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The path to root of the database 
"
      end

      attribute 248706 "eraseLock"
	class_attribute public explicit_type "Object"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Object to refer as erase lock 
"
      end

      attribute 248834 "taskListLock"
	class_attribute public explicit_type "Object"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Object to refer as task list lock 
"
      end

      attribute 248962 "validityMapLock"
	class_attribute public explicit_type "Object"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Object to refer as validity maps lock 
"
      end

      attribute 249090 "columnsLock"
	class_attribute public explicit_type "Object"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Object to refer as table with column names lock 
"
      end

      operation 547458 "LockManager"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
 Private singleton constructor
"
      end

      operation 547586 "getInstance"
	class_operation public return_type class_ref 189826 // LockManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the single instance of lock manager

@return	Reference to LockManager instance 
"
      end

      operation 547714 "initialize"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "database" type class_ref 186242 // Database
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Intialize lock manager, must be called before first use
@param database Database instance to work with
"
      end

      operation 547842 "ensureDirExists"
	private explicit_return_type "void"
	nparams 1
	  param in name "lockDirPath" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
If lock directory doesn't exist, it creates new one

@param lockDirPath	Lock directory
"
      end

      operation 547970 "getLock"
	private explicit_return_type "boolean"
	nparams 2
	  param in name "localPath" explicit_type "String"
	  param in name "lockName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Tries to acquire a lock determined be path (lock dir must exist),
returns true if successful (lock is acquired), otherwise returns 
false (already locked, IO error, etc.)

@param localPath	Path to lock
@param lockName	The name of the lock

@return	True if lock acquired, false if not
"
      end

      operation 548098 "clearLock"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "localPath" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Clears the given lock. It is cleared in any case, owners of locks
are not tracked!

@param localPath	Path to lock

@return	True if lock is cleared, false if it failed (IO error, etc.)
"
      end

      operation 548226 "isLocked"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "localPath" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Tests whether some lock exists.

@param localPath	Path to lock

@return	True if lock exists, false if not
"
      end

      operation 548354 "getLock"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Tries to acquire an analysis lock determined by the lock name.
It returns true if successful (lock is acquired), otherwise returns 
false (already locked, IO error, etc.)

@param aid	Analysis Id
@param name	Name of the lock to ask for

@return	True if lock acquired, false if not
"
      end

      operation 548482 "getLock"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Tries to acquire an experiment lock determined by the lock name.
It returns true if successful (lock is acquired), otherwise returns 
false (already locked, IO error, etc.)

@param aid	Analysis Id
@param eid 	Experiment Id
@param name	Name of the lock to ask for

@return	True if lock acquired, false if not
"
      end

      operation 548610 "getLock"
	public explicit_return_type "boolean"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Tries to acquire a binary lock determined by the lock name.
It returns true if successful (lock is acquired), otherwise returns 
false (already locked, IO error, etc.)

@param aid	Analysis Id
@param eid 	Experiment Id
@param bid 	Binary Id
@param name	Name of the lock to ask for

@return	True if lock acquired, false if not
"
      end

      operation 548738 "isLocked"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Tests whether some analysis lock exists.

@param aid 	Analysis ID
@param name	The name of the lock

@return	True if lock exists, false if not
"
      end

      operation 548866 "isLocked"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Tests whether some experiment lock exists.

@param aid 	Analysis ID
@param eid 	Experiment ID 
@param name	The name of the lock

@return	True if lock exists, false if not
"
      end

      operation 548994 "isLocked"
	public explicit_return_type "boolean"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Tests whether some binary lock exists.

@param aid 	Analysis ID
@param eid 	Experiment ID
@param bid	Binary ID 
@param name	The name of the lock

@return	True if lock exists, false if not
"
      end

      operation 549122 "isAnyLock"
	public explicit_return_type "boolean"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Tests whether there's any lock beginning with name

@param aid 	Analysis ID
@param eid 	Experiment ID
@param bid	Binary ID 
@param name	The name of the lock

@return	True if any lock exists, false if none
"
      end

      operation 549250 "clearLock"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Clears the given lock for analysis. It is cleared in any case, 
owners of locks are not tracked.

@param aid	Analysis ID
@param name	The name of the lock to clear

@return	True if lock is cleared, false if it failed (IO error, etc.)
"
      end

      operation 549378 "clearLock"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Clears the given lock for experiment. It is cleared in any case, 
owners of locks are not tracked.

@param aid	Analysis ID
@param eid	Experiment ID
@param name	The name of the lock to clear

@return	True if lock is cleared, false if it failed (IO error, etc.)
"
      end

      operation 549506 "clearLock"
	public explicit_return_type "boolean"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Clears the given lock for binary. It is cleared in any case, 
owners of locks are not tracked.

@param aid	Analysis ID
@param eid	Experiment ID
@param bid	Binary ID
@param name	The name of the lock to clear

@return	True if lock is cleared, false if it failed (IO error, etc.)
"
      end
    end

    class 189954 "RunEntityManager"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Simple class for performing of logs collection from Task Manager and storing it
in database

@author Jakub Lehotsky
"
      classrelation 240386 // runEntityManager (<unidirectional association>)
	relation 240386 --->
	  a role_name "runEntityManager" init_value "=  null" class_relation private
	    comment " Single instance of load collector 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 240386 // runEntityManager (<unidirectional association>)
	  b parent class_ref 189954 // RunEntityManager
      end

      classrelation 240514 // database (<unidirectional association>)
	relation 240514 --->
	  a role_name "database" private
	    comment " Databse that is used for results in Results Repository 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 240514 // database (<unidirectional association>)
	  b parent class_ref 186242 // Database
      end

      classrelation 240642 // statisticsManager (<unidirectional association>)
	relation 240642 --->
	  a role_name "statisticsManager" private
	    comment " Internal statistics manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 240642 // statisticsManager (<unidirectional association>)
	  b parent class_ref 186498 // StatisticsManager
      end

      classrelation 240770 // taskListManager (<unidirectional association>)
	relation 240770 --->
	  a role_name "taskListManager" private
	    comment " Internal task list manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 240770 // taskListManager (<unidirectional association>)
	  b parent class_ref 188802 // TaskListManager
      end

      classrelation 240898 // graphManager (<unidirectional association>)
	relation 240898 --->
	  a role_name "graphManager" private
	    comment " Internal graph manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 240898 // graphManager (<unidirectional association>)
	  b parent class_ref 186626 // GraphManager
      end

      classrelation 241026 // ridManager (<unidirectional association>)
	relation 241026 --->
	  a role_name "ridManager" class_relation private
	    comment " Internal RID Manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 241026 // ridManager (<unidirectional association>)
	  b parent class_ref 189186 // RunValidityMapsManager
      end

      classrelation 241154 // binaryEntityManager (<unidirectional association>)
	relation 241154 --->
	  a role_name "binaryEntityManager" private
	    comment " Internal binary entity manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 241154 // binaryEntityManager (<unidirectional association>)
	  b parent class_ref 188674 // BinaryEntityManager
      end

      classrelation 241282 // experimentEntityManager (<unidirectional association>)
	relation 241282 --->
	  a role_name "experimentEntityManager" private
	    comment " Internal binary entity manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 241282 // experimentEntityManager (<unidirectional association>)
	  b parent class_ref 188930 // ExperimentEntityManager
      end

      classrelation 241410 // lockManager (<unidirectional association>)
	relation 241410 --->
	  a role_name "lockManager" private
	    comment " Internal lock manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 241410 // lockManager (<unidirectional association>)
	  b parent class_ref 189826 // LockManager
      end

      classrelation 241538 // rScriptsRunner (<unidirectional association>)
	relation 241538 --->
	  a role_name "rScriptsRunner" private
	    comment " Internal scripts runner reference 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 241538 // rScriptsRunner (<unidirectional association>)
	  b parent class_ref 186754 // RScriptsRunner
      end

      operation 586498 "RunEntityManager"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
 Construction, notify load collector about Results Repository database when constructing
"
      end

      operation 586626 "getInstance"
	class_operation public return_type class_ref 189954 // RunEntityManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the single instance of load collector

@return	Reference to LoadCollector instance 
"
      end

      operation 586754 "initialize"
	public explicit_return_type "void"
	nparams 9
	  param inout name "database" type class_ref 186242 // Database
	  param inout name "statisticsManager" type class_ref 186498 // StatisticsManager
	  param inout name "taskListManager" type class_ref 188802 // TaskListManager
	  param inout name "graphManager" type class_ref 186626 // GraphManager
	  param inout name "ridManager" type class_ref 189186 // RunValidityMapsManager
	  param inout name "lockManager" type class_ref 189826 // LockManager
	  param inout name "scriptsRunner" type class_ref 186754 // RScriptsRunner
	  param inout name "binaryEntityManager" type class_ref 188674 // BinaryEntityManager
	  param inout name "experimentEntityManager" type class_ref 188930 // ExperimentEntityManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Use to initialize analysis entity manager 

@param database			Instance of Results Repository database
@param statisticsManager	Instance of Results Repository statistics manager
@param taskListManager 	Instance of Results Repository task list manager
@param graphManager 		Instance of Results Repository graph manager
@param ridManager 		Instance of Results Repository run validity maps manager
@param lockManager		Instance of Results Repository lock manager 
@param scriptsRunner 	Instance of Results Repository scripts runner
@param binaryEntityManager Instance of Results Repository binary entity manager
@param experimentEntityManager	Instance of Results Repository experiment entity manager 

"
      end

      operation 586882 "getRunPaths"
	public explicit_return_type "String"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns position of actual physical file with run data, given aid, eid,
bid and rid, null in the case it doesn't exist. Path is relative to
binary directory.

@param aid
           AnalysisID
@param eid
           ExperimentID
@param bid
           BinaryID
@param rid
           RunID
@return Position of run data in binary directory
"
      end

      operation 587010 "getRunsInBinary"
	public return_type class_ref 187010 // Entity
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}<RID>> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "
Returns the list of runs in a given binary stored in Results Repository

@param aid	Analysis Id 
@param eid 	Experiment Id
@param bid 	Binary Id

@return The list
"
      end

      operation 587138 "isValidRid"
	public explicit_return_type "boolean"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Checks whether RID conforms to some existing run in results
repository

@param aid
           Analysis ID
@param eid
           Experiment ID
@param bid
           Binary ID
@param rid
           Run ID
@return True iff analysis does exist in results repository
"
      end

      operation 587266 "ensureValidRid"
	public explicit_return_type "void"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Ensures that given RID belongs to a valid run in a given binary in results repository,
otherwise throws an IllegalArgumentException

@param aid
		Analysis ID
@param eid
		Experiment Id
@param bid
		Binary Id
@param rid
		Run Id
"
      end

      operation 587394 "isDeletable"
	private explicit_return_type "boolean"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Checks whether run is deletable - i.e. no event is scheduled to perform upon it that
would prevent deletion

@param aid	Analysis Id
@param eid	Experiment Id
@param bid	Binary Id
@param rid	Run Id
@return	True, if no event is blocking run delete
"
      end

      operation 587522 "getRun"
	public return_type class_ref 187010 // Entity
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<RID> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the Entity&lt;RID&gt; object representing run for use in GUI

@param aid	Analysis Id
@param eid	Experiment Id
@param bid	Binary Id 
@param rid 	Run Id

@return	The binary entity
"
      end

      operation 587650 "setRunComment"
	public explicit_return_type "void"
	nparams 5
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	  param in name "comment" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets the comment metadata of a run

@param aid	Analysis Id
@param eid	Experiment Id
@param bid	Binary Id
@param rid	Run Id
@param comment	Comment to set
"
      end

      operation 587778 "eraseRun"
	public explicit_return_type "boolean"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	nexceptions 1
	  exception class_ref 187394 // DeleteLockedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Deletes given run

@param aid
           Analysis ID
@param eid
           Experiment ID
@param bid
           Binary ID
@param rid
           Run ID

@return True iff successful

@throws DeleteLockedException	If run is locked for deleting 
"
      end

      operation 587906 "getRunLoadGraphCount"
	public explicit_return_type "int"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the run load graph count of a given graph type

@param aid	Analysis Id
@param eid	Experiment Id 
@param bid	Binary Id 
@param rid 	Run Id

@return	The count of graphs
"
      end

      operation 588034 "getRunLoadGraphInfo"
	public return_type class_ref 187778 // GraphInfo
	nparams 5
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	  param in name "index" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the run load graph info for a given graph. GraphInfo object returned contains 
width, height and title of the graph

@param aid	Analysis Id
@param eid	Experiment Id 
@param bid	Binary Id 
@param rid 	Run Id

@param index	Index of graph - can be one of 0..getExperimentGraphCount()-1
@return	The graph info

@throws IOException	In case of error of getting metadata
"
      end

      operation 588162 "getRunLoadGraphPath"
	public explicit_return_type "String"
	nparams 5
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	  param in name "index" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the complete path for a given run load graph

@param aid
		Analysis Id
@param eid
		Experiment Id 
@param bid 
		Binary Id
@param rid 
		Run Id
@param index
		Index of graph - can be one of 0..getExperimentGraphCount()-1

@return
		The path to the file with graph image on disk

@throws IOException
		if this info couldn't be retrieved because of I/O problems
@throws IllegalArgumentException 
		if graph doesn't exist
"
      end

      operation 588290 "getContext"
	public explicit_return_type "String"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the context of a given binary

@param aid	Analysis Id
@param eid	Experiment Id
@param bid	Binary Id
@param rid   Run Id
@return	The context Id 
"
      end

      operation 588418 "uploadRunResults"
	public return_type class_ref 134658 // UploadHandle
	nparams 11
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	  param in name "roleName" explicit_type "String"
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "int"
	  param inout name "validRun" explicit_type "boolean"
	  param inout name "blocking" explicit_type "boolean"
	  param in name "tableIndex" explicit_type "int"
	  param in name "totalTables" explicit_type "int"
	nexceptions 3
	  explicit_exception "UnknownHostException"
	  explicit_exception "IOException"
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Uploads binary file containing Run Results (through TCP)

@see cz.cuni.mff.been.resultsrepository.Database#uploadFile

@param aid
           Analysis ID
@param eid
           Experiment ID
@param bid
           Binary ID
@param rid
           Run ID
@param roleName
			  String identifying the results role, from which results arrive
@param host
           Hostname to connect to for data retrieving
@param port
           Port used in connection with host
@param validRun
           Determine, whether run is valid or crashed
@param blocking
           Determine, whether to use blocking transfer
@param tableIndex 
			  Index of the table we're uploading
@param totalTables
			  Total number of tables to be uploaded
 
@return Handle of network connection

@throws UnknownHostException
            In the case host could not be found
@throws IOException
            In the case of some IO error
@throws ResultsRepositoryBusyException
            In the case of non-blocking upload when Results Repository is
            busy with (down/)uploading files
"
      end

      operation 588546 "endRunUpload"
	public explicit_return_type "void"
	nparams 6
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	  param in name "host" explicit_type "String"
	  param inout name "handle" type class_ref 134658 // UploadHandle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Closes the upload handle after uploading the run. Client should call 
this method after the upload status returned by <code>getFileUploadStatus</code> 
has value <code>ACCEPTED</code>, or <code>ERROR</code>.

This method is crucial, so that synchronization and upload callbacks work correctly 

If the client doesn't close the upload handle, Results Repository will leak
a little amount of memory. However, no other resources than memory
(such as open files, locks...) are associated with the upload handle.
 
@param aid	Analysis Id 
@param eid 	Experiment Id
@param bid 	Binary Id
@param rid 	Run Id
@param host 	Host, from which results were uploaded

@param handle upload handle
"
      end
    end

    class 190466 "ExperimentImplementation"
      visibility public 
      nactuals 2
      actual class class_ref 188034 // EntityImplementation
        rank 0 value class_ref 133378 // EID
      actual class class_ref 188162 // EntityInterface
        rank 0 value class_ref 133378 // EID
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 228354 // <realization>
	relation 228354 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 228354 // <realization>
	  b parent class_ref 188034 // EntityImplementation
      end

      classrelation 228482 // <realization>
	relation 228482 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 228482 // <realization>
	  b parent class_ref 148226 // Serializable
      end

      classrelation 228610 // <realization>
	relation 228610 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 228610 // <realization>
	  b parent class_ref 188162 // EntityInterface
      end

      classrelation 228738 // aid (<unidirectional association>)
	relation 228738 --->
	  a role_name "aid" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 228738 // aid (<unidirectional association>)
	  b parent class_ref 130434 // AID
      end

      attribute 247298 "LOAD_FOR_RUNS_ONLY"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"Load graphs are defined for runs only.\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Load graphs defined for runs only error message 
"
      end

      attribute 247426 "RAW_DATA_FOR_RUNS_ONLY"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"Raw data download is avaliable for runs only.\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Raw data download for runs only error message 
"
      end

      classrelation 228866 // experimentEntityManager (<unidirectional association>)
	relation 228866 --->
	  a role_name "experimentEntityManager" private
	    comment " Results repository entity manager for analyses 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 228866 // experimentEntityManager (<unidirectional association>)
	  b parent class_ref 188930 // ExperimentEntityManager
      end

      operation 534786 "ExperimentImplementation"
	public explicit_return_type ""
	nparams 1
	  param inout name "aid" type class_ref 130434 // AID
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Construction of basic Experiment implementation 
@param aid	AnalysisID
@throws RemoteException "
      end

      operation 534914 "getEntity"
	public return_type class_ref 187010 // Entity
	nparams 1
	  param inout name "id" type class_ref 133378 // EID
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<EID> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 535042 "setEntityComment"
	public explicit_return_type "void"
	nparams 2
	  param inout name "id" type class_ref 133378 // EID
	  param in name "comment" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 535170 "getEntities"
	public return_type class_ref 187010 // Entity
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}<EID>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 535298 "getSubentityInterface"
	public return_type class_ref 188162 // EntityInterface
	nparams 1
	  param inout name "id" type class_ref 133378 // EID
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 535426 "getExportFormats"
	public return_type class_ref 188290 // DataFormat
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 535554 "beginExport"
	public return_type class_ref 149762 // DownloadHandle
	nparams 4
	  param inout name "ids" type class_ref 133378 // EID
	  param in name "formatId" explicit_type "String"
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 535682 "getImportFormats"
	public return_type class_ref 188290 // DataFormat
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 535810 "beginImport"
	public return_type class_ref 134658 // UploadHandle
	nparams 3
	  param in name "formatId" explicit_type "String"
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 535938 "deleteEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "id" type class_ref 133378 // EID
	nexceptions 2
	  exception class_ref 187394 // DeleteLockedException
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 536066 "graphCount"
	public explicit_return_type "int"
	nparams 2
	  param inout name "graphType" type class_ref 187650 // GraphType
	  param inout name "id" type class_ref 133378 // EID
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 536194 "getGraphInfo"
	public return_type class_ref 187778 // GraphInfo
	nparams 3
	  param inout name "graphType" type class_ref 187650 // GraphType
	  param inout name "id" type class_ref 133378 // EID
	  param in name "index" explicit_type "int"
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 186882 // ResultsRepositoryException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 536322 "beginGraphDownload"
	public return_type class_ref 149762 // DownloadHandle
	nparams 5
	  param inout name "graphType" type class_ref 187650 // GraphType
	  param inout name "id" type class_ref 133378 // EID
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	  param in name "index" explicit_type "int"
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 536450 "beginRawDataDownload"
	public return_type class_ref 149762 // DownloadHandle
	nparams 3
	  param inout name "id" type class_ref 133378 // EID
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 2
	  exception class_ref 187522 // ResultsRepositoryBusyException
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 536578 "endRawDataDownload"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handle" type class_ref 149762 // DownloadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 536706 "getRawDataDownloadStatus"
	public return_type class_ref 149890 // DownloadStatus
	nparams 1
	  param inout name "handle" type class_ref 149762 // DownloadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 536834 "getContext"
	public explicit_return_type "String"
	nparams 1
	  param inout name "id" type class_ref 133378 // EID
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 536962 "getTasks"
	public explicit_return_type "String"
	nparams 1
	  param inout name "id" type class_ref 133378 // EID
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 537090 "getLogsForTask"
	public return_type class_ref 184194 // LogRecord
	nparams 2
	  param inout name "id" type class_ref 133378 // EID
	  param in name "taskID" explicit_type "String"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 184322 // LogStorageException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "NullPointerException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 190594 "ExportBEEN"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Temporary class for example purposes

@author Jakub Lehotsky

"
      classrelation 228994 // <realization>
	relation 228994 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 228994 // <realization>
	  b parent class_ref 190722 // ExportInterface
      end

      classrelation 229122 // database (<unidirectional association>)
	relation 229122 --->
	  a role_name "database" class_relation private
	    comment " Database instance to use 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 229122 // database (<unidirectional association>)
	  b parent class_ref 186242 // Database
      end

      attribute 247554 "EXPORT_METADATA_FILENAME"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"export.meta\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Export metadata filename 
"
      end

      attribute 247682 "TEMPORARY_ZIP_FILENAME"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"temporary.zip\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Temporary zipfile filename 
"
      end

      operation 537858 "setDatabase"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aDatabase" type class_ref 186242 // Database
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Method for setting up Results Repository database instance

 @param aDatabase Database to set up
"
      end

      operation 537986 "deleteIfExists"
	package explicit_return_type "void"
	nparams 1
	  param in name "filename" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Check if file exists and delete it eventually

@param filename	Filename of file to delete
"
      end

      operation 538114 "beginAnalysesExport"
	public return_type class_ref 149762 // DownloadHandle
	nparams 3
	  param inout name "aids" type class_ref 130434 // AID
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.resultsrepository.ExportInterface#beginAnalysesExport
"
      end

      operation 538242 "beginExperimentsExport"
	public return_type class_ref 149762 // DownloadHandle
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eids" type class_ref 133378 // EID
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.resultsrepository.ExportInterface#beginExperimentsExport
"
      end

      operation 538370 "beginBinariesExport"
	public return_type class_ref 149762 // DownloadHandle
	nparams 5
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bids" type class_ref 138754 // BID
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.resultsrepository.ExportInterface#beginBinariesExport
"
      end

      operation 538498 "beginRunsExport"
	public return_type class_ref 149762 // DownloadHandle
	nparams 6
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "runIndexes" type class_ref 140290 // RID
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.resultsrepository.ExportInterface#beginRunsExport
"
      end
    end

    class 190850 "NumberedTable"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Implements management and loading and storing of general numbered tables

@author Jakub Lehotsky
"
      attribute 250498 "IO_ERROR_LIST_READING_MESSAGE"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"I/O error reading metadata of \""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " I/O error in validity map reading message 
"
      end

      attribute 250626 "IO_ERROR_LIST_STORING_MESSAGE"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"I/O error storing metadata of \""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " I/O error in validity map reading message 
"
      end

      attribute 250754 "ASCII_TAB"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"\\t\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " ASCII of delim. character (TAB) 
"
      end

      classrelation 233730 // numberedTable (<unidirectional association>)
	relation 233730 --->
	  stereotype "ArrayList"
	  a role_name "numberedTable" private
	    comment " Actual metadata 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 233730 // numberedTable (<unidirectional association>)
	  b parent class_ref 191490 // NumberedItem
      end

      attribute 250882 "lastItem"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Last item counter 
"
      end

      operation 555650 "NumberedTable"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Constructor - creates numbered table, void object 
(meant for creating new validity map tables items, initializing them and storing into file)

"
      end

      operation 555778 "getNumberedTable"
	public return_type class_ref 191490 // NumberedItem
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns validity map we store

@return the metadata
"
      end

      operation 555906 "NumberedTable"
	public explicit_return_type ""
	nparams 1
	  param in name "filename" explicit_type "String"
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
Constructor - initializes numbered map in memory and read its contents from the file.

@param filename	Name of file to read validity table from
@throws IOException 
"
      end

      operation 556034 "store"
	public explicit_return_type "void"
	nparams 1
	  param in name "filename" explicit_type "String"
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Stores numbered list we have in our memory to the file.

@param filename	Where to store numbered list.
@throws IOException
"
      end

      operation 556162 "getItemCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the count of numbered items currently loaded in memory

@return	The count of items
"
      end

      operation 556290 "addItem"
	public explicit_return_type "void"
	nparams 2
	  param in name "key" explicit_type "long"
	  param in name "value" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Adding key-value pair to validity map

@param key	Key to added
@param value	Associated value to add
@throws ArrayIndexOutOfBoundsException
"
      end

      operation 556418 "deleteItemByKey"
	public explicit_return_type "void"
	nparams 1
	  param in name "key" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Deleting item by key

@param key	Key of item to be deleted
"
      end

      operation 556546 "getItemKey"
	public explicit_return_type "long"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the key of the item with index.

@param index	Index of they key to give.
@return	int - the key
"
      end

      operation 556674 "getItemValue"
	public explicit_return_type "String"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the value of the item with index.

@param index	Index of the value to give.
@return	String with value.
"
      end

      operation 556802 "getItemByKey"
	public explicit_return_type "String"
	nparams 1
	  param in name "key" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the value of the item, with given int key. 

@param key	Key to ask for.
@return		String - patch to associated run, or null if not found. 
"
      end

      operation 556930 "setItemByKey"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "key" explicit_type "long"
	  param in name "value" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets the value of the table item, with the given long key. 

@param key	Key
@param value	New Value

@return True iff succesful (false if key doesn't exist)4
"
      end
    end

    class 190978 "ImportDumb"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Temporary class for example purposes

@author Jakub Lehotsky

"
      classrelation 231554 // <realization>
	relation 231554 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 231554 // <realization>
	  b parent class_ref 191106 // ImportInterface
      end

      classrelation 231682 // database (<unidirectional association>)
	relation 231682 --->
	  a role_name "database" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 231682 // database (<unidirectional association>)
	  b parent class_ref 186242 // Database
      end

      operation 544130 "setDatabase"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aDatabase" type class_ref 186242 // Database
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 544258 "beginAnalysesImport"
	public return_type class_ref 134658 // UploadHandle
	nparams 2
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 544386 "beginExperimentsImport"
	public return_type class_ref 134658 // UploadHandle
	nparams 2
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 544514 "beginBinariesImport"
	public return_type class_ref 134658 // UploadHandle
	nparams 2
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 544642 "beginRunsImport"
	public return_type class_ref 134658 // UploadHandle
	nparams 2
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 191234 "Logger"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Internal logging instance for Results Reposiotry to hide task's logging interface for 
purposes of standalone (out-of-task) running of Results Repository. They key purpose
is to assure modularity and allow unit testing.


@author Jakub Lehotsky
"
      classrelation 232962 // task (<unidirectional association>)
	relation 232962 --->
	  a role_name "task" class_relation private
	    comment " Task we're attached to 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 232962 // task (<unidirectional association>)
	  b parent class_ref 136578 // Task
      end

      operation 550530 "Logger"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
 Construction, notify load collector about Results Repository database when constructing
"
      end

      operation 550658 "initialize"
	class_operation public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 550786 "logDebug"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Logs a message on the DEBUG debug level
@param message
"
      end

      operation 550914 "logError"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Logs a message on the ERROR debug level
@param message
"
      end

      operation 551042 "logFatal"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Logs a message on the FATAL debug level
@param message
"
      end

      operation 551170 "logInfo"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Logs a message on the INFO debug level
@param message
"
      end

      operation 551298 "logTrace"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Logs a message on the TRACE debug level
@param message
"
      end

      operation 551426 "logWarning"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Logs a message on the WARN debug level
@param message
"
      end
    end

    class 191490 "NumberedItem"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Class containing one single information about one item of the validity maps table

@author Jakub Lehotsky
"
      classrelation 233602 // <realization>
	relation 233602 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 233602 // <realization>
	  b parent class_ref 148226 // Serializable
      end

      attribute 250242 "key"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Item key - numerical index - int 
"
      end

      attribute 250370 "value"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Item value. 
"
      end

      operation 555266 "getKey"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return the key "
      end

      operation 555394 "getValue"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return the value "
      end

      operation 555522 "NumberedItem"
	public explicit_return_type ""
	nparams 2
	  param in name "key" explicit_type "long"
	  param in name "value" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>MetadataItem</code> object.

@param key metadata key
@param value metadta value
"
      end
    end

    class 191618 "RBackgroundThread"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Thread used for execution of R Scripts. It just reads registered R scripts and executes them
one by one

@author J.Lehotsky
"
      classrelation 233858 // <generalisation>
	relation 233858 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 233858 // <generalisation>
	  b parent class_ref 151042 // Thread
      end

      operation 557058 "RBackgroundThread"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Construction of thread
"
      end

      operation 557186 "execNextScript"
	class_operation package explicit_return_type "void"
	nparams 1
	  param in name "scriptCall" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
Execute next script in the queue
"
      end

      operation 557314 "execNextCallback"
	private explicit_return_type "void"
	nparams 2
	  param inout name "callbackInterface" type class_ref 190338 // FileUploadCallbackInterface
	  param inout name "callbackData" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Execute next registered callback from queue

@param callbackInterface
@param callbackData
"
      end

      operation 557442 "run"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see java.lang.Runnable#run()
"
      end
    end

    class 191746 "RCallbackEntity"
      visibility public stereotype "enum"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Results Repository R callback entity

@author Jakub Lehotsky
"
      attribute 251010 "RUN"
	public type class_ref 191746 // RCallbackEntity
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Run 
"
      end

      attribute 251138 "BINARY"
	public type class_ref 191746 // RCallbackEntity
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Binary 
"
      end

      attribute 251266 "EXPERIMENT"
	public type class_ref 191746 // RCallbackEntity
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Experiment 
"
      end

      attribute 251394 "ANALYSIS"
	public type class_ref 191746 // RCallbackEntity
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Analysis "
      end

      operation 557570 "RCallbackEntity"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 557698 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns short string (one word) describing entity

@return short status string 
"
      end
    end

    class 191874 "RCallbacksManager"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Class that manages callbacks, for a given analysis or experiment, one instance must be running

@author Jakub Lehotsky
"
      attribute 251522 "RUN_SCRIPTS_FILE"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"run-scripts\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " File to store run scripts selection 
"
      end

      attribute 251650 "BINARY_SCRIPTS_FILE"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"binary-scripts\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " File to store binary scripts selection 
"
      end

      attribute 251778 "EXPERIMENT_SCRIPTS_FILE"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"experiment-scripts\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " File to store experiment scripts selection 
"
      end

      attribute 251906 "BINARY_NONCOMPLETE_SCRIPTS_FILE"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"binary-noncomplete-scripts\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " File to store noncomplete binary scripts selection 
"
      end

      attribute 252034 "EXPERIMENT_NONCOMPLETE_SCRIPTS_FILE"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"experiment-noncomplete-scripts\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " File to store noncomplete experiment scripts selection 
"
      end

      attribute 252162 "registeredRunCallbacks"
	class_attribute private explicit_type "String"
	stereotype "ArrayList"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Registered run callbacks for given analysis 
"
      end

      attribute 252290 "registeredBinaryCallbacks"
	class_attribute private explicit_type "String"
	stereotype "ArrayList"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Registered binary callbacks for given analysis 
"
      end

      attribute 252418 "registeredNoncompleteBinaryCallbacks"
	class_attribute private explicit_type "String"
	stereotype "ArrayList"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Registered binary callbacks for given analysis 
"
      end

      attribute 252546 "registeredExperimentCallbacks"
	class_attribute private explicit_type "String"
	stereotype "ArrayList"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Registered experiment callbacks for given analysis 
"
      end

      attribute 252674 "registeredNoncompleteExperimentCallbacks"
	class_attribute private explicit_type "String"
	stereotype "ArrayList"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Registered experiment callbacks for given analysis 
"
      end

      classrelation 233986 // aid (<unidirectional association>)
	relation 233986 --->
	  a role_name "aid" private
	    comment " Analysis Id, which callbacks manager is tied to 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 233986 // aid (<unidirectional association>)
	  b parent class_ref 130434 // AID
      end

      classrelation 234114 // eid (<unidirectional association>)
	relation 234114 --->
	  a role_name "eid" private
	    comment " Experiment Id, which callbacks manager is tied to 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 234114 // eid (<unidirectional association>)
	  b parent class_ref 133378 // EID
      end

      attribute 252802 "analysisScript"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Indicates whether we're manager for analysis, or experiment 
"
      end

      operation 557826 "RCallbacksManager"
	public explicit_return_type ""
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "analysisScript" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Initializes callbacks manager for a given analysis or experiment

@param aid	Analysis Id
@param eid	Experiment Id 
@param analysisScript 	True if script for analysis, false for experiment
"
      end

      operation 557954 "getAID"
	package return_type class_ref 130434 // AID
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns Analysis Id, callback manager is tied to
@return	The AID
"
      end

      operation 558082 "getEID"
	package return_type class_ref 133378 // EID
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns Experiment Id, callback manager is tied to
@return	The EID
"
      end

      operation 558210 "isAnalysis"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Indication analysis vs. experiment callbacks manager
@return	True if we're analyses manager, false if we're epxeriments manager
"
      end

      operation 558338 "clearRegisteredRunCallbacks"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " **************************************************************** 
 ***************************** RUNS ***************************** 
 **************************************************************** 
 Methods for callback setup 

Clears all registered run callbacks
"
      end

      operation 558466 "registerRunCallback"
	package explicit_return_type "void"
	nparams 1
	  param in name "runCallback" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Registers new callback (parameters must be set) for runs 

@param runCallback	Callback to register
"
      end

      operation 558594 "getRegisteredRunCallbackCount"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the count of registered run callbacks. These are all executed after each run is 
uploaded into results repository

@return	The count of run callbacks
"
      end

      operation 558722 "getRegisteredRunFunction"
	package explicit_return_type "String"
	nparams 1
	  param in name "functionNumber" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Methods for run callback execution 

Returns registered run callback function name (based on index)

@param functionNumber	The index of callback function in registered run callbacks 
@return			The <code>String</code> containing name of function to use as callback
"
      end

      operation 558850 "clearRegisteredBinaryCallbacks"
	package explicit_return_type "void"
	nparams 1
	  param inout name "completeness" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ******************************************************************** 
 ***************************** BINARIES ***************************** 
 ******************************************************************** 
 Methods for binary callback setup 

Clears all registered binary callbacks

@param completeness If true, add callback to queue to be executed after entity contains all
						subentities 
"
      end

      operation 558978 "registerBinaryCallback"
	package explicit_return_type "void"
	nparams 2
	  param in name "binaryCallback" explicit_type "String"
	  param inout name "completeness" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Registers new callback (parameters must be set) for binaries 

@param binaryCallback	Callback to register
@param completeness If true, add callback to queue to be executed after entity contains all
						subentities	 
"
      end

      operation 559106 "getRegisteredBinaryCallbackCount"
	package explicit_return_type "int"
	nparams 1
	  param inout name "completeness" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the count of registered binary callbacks. These are all executed after each binary is 
uploaded into results repository

@return	The count of binary callbacks
"
      end

      operation 559234 "getRegisteredBinaryFunction"
	package explicit_return_type "String"
	nparams 2
	  param in name "functionNumber" explicit_type "int"
	  param inout name "completeness" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Methods for binary callback execution 

Returns registered binary callback function name (based on index)

@param functionNumber	The index of callback function in registered binary callbacks
@param completeness If true, add callback to queue to be executed after entity contains all
						subentities  
@return			The <code>String</code> containing name of function to use as callback
"
      end

      operation 559362 "clearRegisteredExperimentCallbacks"
	package explicit_return_type "void"
	nparams 1
	  param inout name "completeness" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ********************************************************************* 
 ***************************** EXPERIMENTS *************************** 
 ********************************************************************* 
 Methods for experiment callback setup 

Clears all registered experiment callbacks

@param completeness If true, add callback to queue to be executed after entity contains all
						subentities  	
"
      end

      operation 559490 "registerExperimentCallback"
	package explicit_return_type "void"
	nparams 2
	  param in name "experimentCallback" explicit_type "String"
	  param inout name "completeness" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Registers new callback (parameters must be set) for experiments 

@param experimentCallback	Callback to register
@param completeness If true, add callback to queue to be executed after entity contains all
						subentities  	
"
      end

      operation 559618 "getRegisteredExperimentCallbackCount"
	package explicit_return_type "int"
	nparams 1
	  param inout name "completeness" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the count of registered experiment callbacks. These are all executed after each 
experiment is uploaded into results repository
@param completeness If true, add callback to queue to be executed after entity contains all
						subentities  	
@return	The count of experiment callbacks
"
      end

      operation 559746 "getRegisteredExperimentFunction"
	package explicit_return_type "String"
	nparams 2
	  param in name "functionNumber" explicit_type "int"
	  param inout name "completeness" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Methods for experiment callback execution 

Returns registered experiment callback function name (based on index)

@param functionNumber	The index of callback function in registered experiment callbacks 
@param completeness If true, add callback to queue to be executed after entity contains all
						subentities  	
@return			The <code>String</code> containing name of function to use as callback
"
      end

      operation 559874 "getCallbacks"
	public return_type class_ref 135554 // CallbackRScripts
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns callbacks actually loaded in memory

@return	CallbackRScripts object describing callbacks
"
      end

      operation 560002 "setCallbacks"
	public explicit_return_type "void"
	nparams 1
	  param inout name "scripts" type class_ref 135554 // CallbackRScripts
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets the R script callbacks and store them into database 

@param scripts	Scripts to be set

@throws IOException	if i/o error occured during storing
"
      end

      operation 560130 "loadFileIntoArray"
	private explicit_return_type "void"
	nparams 2
	  param inout name "scriptsFile" explicit_type "File"
	  param inout name "registeredCallbacks" explicit_type "ArrayList<String>"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Internal method used to load registered callbacks from file into String array

@param scriptsFile		File to load scripts from
@param registeredCallbacks	Class, where to store loaded file
"
      end

      operation 560258 "storeArrayIntoFile"
	private explicit_return_type "void"
	nparams 2
	  param inout name "registeredCallbacks" explicit_type "ArrayList<String>"
	  param in name "scriptsFile" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Internal method used to store registered callbacks from String array into file

@param scriptsFile		File to store scripts to
@param registeredCallbacks	Array of Strings to store
"
      end

      operation 560386 "load"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Loads registered R scripts callbacks from database into memory 

@throws IOException
"
      end

      operation 560514 "store"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Stores registered callback scripts into database

@throws IOException
"
      end
    end

    class 192002 "RCallbacksManagerFactory"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
This class handles storage of all possible callbacks managers - for analyses and for experiments.
Its single and through static access, you can transparently get given callback manager for any 
experiment or analysis (it is automatically created, if it doesn't yet exist)  

@author Jakub Lehotsky
"
      classrelation 234242 // rcmfInstance (<unidirectional association>)
	relation 234242 --->
	  a role_name "rcmfInstance" init_value "=  null" class_relation private
	    comment " Single instance of callbacks manager factory 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 234242 // rcmfInstance (<unidirectional association>)
	  b parent class_ref 192002 // RCallbacksManagerFactory
      end

      class 192130 "IDPair"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 234370 // aid (<unidirectional association>)
	  relation 234370 --->
	    a role_name "aid" private
	      comment " Analysis Id 
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 234370 // aid (<unidirectional association>)
	    b parent class_ref 130434 // AID
	end

	classrelation 234498 // eid (<unidirectional association>)
	  relation 234498 --->
	    a role_name "eid" private
	      comment " Experiment Id 
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 234498 // eid (<unidirectional association>)
	    b parent class_ref 133378 // EID
	end

	operation 560642 "getAid"
	  public return_type class_ref 130434 // AID
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @return Analysis Id "
	end

	operation 560770 "getEid"
	  public return_type class_ref 133378 // EID
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @return Experiment Id "
	end

	operation 560898 "IDPair"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "aid" type class_ref 130434 // AID
	    param inout name "eid" type class_ref 133378 // EID
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " 
Constructs AID-EID pair
 
@param aid	Analysis Id 
@param eid 	Experiment Id
"
	end

	operation 561026 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" explicit_type "Object"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 561154 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 234626 // callbacksManagers (<unidirectional association>)
	relation 234626 --->
	  stereotype "Map"
	  a role_name "callbacksManagers" init_value "=  Collections
			.synchronizedMap(new HashMap<IDPair, RCallbacksManager>())" class_relation private
	    comment " Download statuses. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, RCallbacksManager> ${name}${value};
"
	    classrelation_ref 234626 // callbacksManagers (<unidirectional association>)
	  b parent class_ref 192130 // IDPair
      end

      operation 561282 "RCallbacksManagerFactory"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Constructor - private, void for singleton use 
"
      end

      operation 561410 "getInstance"
	class_operation public return_type class_ref 192002 // RCallbacksManagerFactory
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Return single instance of R Callbacks Manager Factory 

@return	reference single running instance of R Callbacks Manager Factory
"
      end

      operation 561538 "initialize"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Intializes R callbacks manager - call before first usage
"
      end

      operation 561666 "getRCallbacksManager"
	class_operation public return_type class_ref 191874 // RCallbacksManager
	nparams 1
	  param inout name "aid" type class_ref 130434 // AID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns callbacks manager for a given analysis. If it doesn't exist, it is created 

@param aid	Analysis Id
@return		RCallbacksManager instance tied with given analysis.
"
      end

      operation 561794 "getRCallbacksManager"
	class_operation public return_type class_ref 191874 // RCallbacksManager
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns callbacks manager for a given experiment. If it doesn't exist, it is created 

@param aid	Analysis Id
@param eid	Experiment Id
@return		RCallbacksManager instance tied with given experiment.
"
      end
    end

    class 192386 "ResultsRepositoryImplementation"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Implementation of Results Repository. It implements two RMI interfaces:
  <code>ResultsRepositoryInterface</code> - communication with BEEN, results collection
  <code>gui.ResultsRepositoryInterface</code> - communication with user, data browsing,
 			processing, etc. everything needed for GUI 
   
This class function (single instance allowed) is an encapsulation for all the other 
parts of Results Repository, through implemented interfaces it passes all
work to the respective parts (to LoadCollector, LogCollector, Database, RManager, etc.) 
It acts as wrapper for all other parts of the system, it is first the main class that delegates
execution of all calls from RMI interfaces into other classes that form ResultsRepository. 

@author Jakub Lehotsky
"
      classrelation 235010 // <generalisation>
	relation 235010 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 235010 // <generalisation>
	  b parent class_ref 130178 // UnicastRemoteObject
      end

      classrelation 235266 // <realization>
	relation 235266 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 235266 // <realization>
	  b parent class_ref 142722 // ResultsRepositoryInterface
      end

      classrelation 235522 // <realization>
	relation 235522 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 235522 // <realization>
	  b parent class_ref 192514 // ResultsRepositoryInterface
      end

      classrelation 235650 // <realization>
	relation 235650 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 235650 // <realization>
	  b parent class_ref 192258 // ResultsRepositoryDebugInterface
      end

      classrelation 235778 // resultsRepositoryInstance (<unidirectional association>)
	relation 235778 --->
	  a role_name "resultsRepositoryInstance" init_value "=  null" class_relation private
	    comment " Single instance of Results Repository implementation 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 235778 // resultsRepositoryInstance (<unidirectional association>)
	  b parent class_ref 192386 // ResultsRepositoryImplementation
      end

      classrelation 235906 // database (<unidirectional association>)
	relation 235906 --->
	  a role_name "database" class_relation private
	    comment " Internal Database instance to work with 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 235906 // database (<unidirectional association>)
	  b parent class_ref 186242 // Database
      end

      classrelation 236034 // loadCollector (<unidirectional association>)
	relation 236034 --->
	  a role_name "loadCollector" class_relation private
	    comment " Internal load collecor of database 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unused\")
"
	    classrelation_ref 236034 // loadCollector (<unidirectional association>)
	  b parent class_ref 189314 // LoadCollector
      end

      classrelation 236162 // logCollector (<unidirectional association>)
	relation 236162 --->
	  a role_name "logCollector" class_relation private
	    comment " Internal log collector of database 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 236162 // logCollector (<unidirectional association>)
	  b parent class_ref 189442 // LogCollector
      end

      classrelation 236290 // rManager (<unidirectional association>)
	relation 236290 --->
	  a role_name "rManager" class_relation private
	    comment " Internal R manager (packages, scripts, help, etc.) 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 236290 // rManager (<unidirectional association>)
	  b parent class_ref 189698 // RManager
      end

      classrelation 236418 // analysisEntityManager (<unidirectional association>)
	relation 236418 --->
	  a role_name "analysisEntityManager" package
	    comment " Internal analysis entity manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 236418 // analysisEntityManager (<unidirectional association>)
	  b parent class_ref 186114 // AnalysisEntityManager
      end

      classrelation 236546 // experimentEntityManager (<unidirectional association>)
	relation 236546 --->
	  a role_name "experimentEntityManager" package
	    comment " Internal experiment entity manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 236546 // experimentEntityManager (<unidirectional association>)
	  b parent class_ref 188930 // ExperimentEntityManager
      end

      classrelation 236674 // binaryEntityManager (<unidirectional association>)
	relation 236674 --->
	  a role_name "binaryEntityManager" package
	    comment " Internal experiment entity manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 236674 // binaryEntityManager (<unidirectional association>)
	  b parent class_ref 188674 // BinaryEntityManager
      end

      classrelation 236802 // runEntityManager (<unidirectional association>)
	relation 236802 --->
	  a role_name "runEntityManager" package
	    comment " Internal run entity manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 236802 // runEntityManager (<unidirectional association>)
	  b parent class_ref 189954 // RunEntityManager
      end

      operation 566146 "ResultsRepositoryImplementation"
	private explicit_return_type ""
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Empty singleton constructor 

@throws RemoteException
"
      end

      operation 566274 "initialize"
	public explicit_return_type "void"
	nparams 2
	  param in name "dbaseDir" explicit_type "String"
	  param in name "tempDir" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
Initialization of Results Repository - loads configuration, sets up all parts of res. 
rep - database at first for data storage and retrieval, then setup all other necessary 
parts and connect them with database 

@param dbaseDir	Directory with database
@param tempDir	Temporary directory to use
"
      end

      operation 566402 "shutdown"
	class_operation public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Shutdown of results repositoy - database shutdown
"
      end

      operation 566530 "getInstance"
	class_operation public return_type class_ref 192386 // ResultsRepositoryImplementation
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the single instance of Results Repository implementation

@return	reference to working instance of Results Repository implementation
@throws RemoteException 
"
      end

      operation 566658 "rScriptingEnabled"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns notification about whether R scripts are enabled

@return true, if scripts are enabled
 
@throws RemoteException	In case that something goes wrong in RMI comunication 
"
      end

      operation 566786 "addAnalysis"
	public explicit_return_type "void"
	nparams 1
	  param inout name "description" type class_ref 131202 // AnalysisEntity
	nexceptions 2
	  exception class_ref 186882 // ResultsRepositoryException
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -----------------------------------------
ResultsRepositoryInterface implementation
-----------------------------------------

Adds new analysis into results repository, so it can be filled with entities and results,
it must not exist before.

@param description Description of analysis - all metadata for creation

@throws ResultsRepositoryException	In case something went wrong (analysis already exists,
										 i/o error)
@throws RemoteException	In case of RMI network connection malfunction
"
      end

      operation 566914 "addAnalysisMetadata"
	public explicit_return_type "void"
	nparams 3
	  param inout name "analysisId" type class_ref 130434 // AID
	  param in name "key" explicit_type "String"
	  param in name "value" explicit_type "String"
	nexceptions 2
	  exception class_ref 186882 // ResultsRepositoryException
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allows adding new custom analysis metadata. 

@param analysisId	Analysis Id
@param key			Key of metadata item
@param value			Value of metadata item
@throws ResultsRepositoryException	In case you attempt to overwrite existing metadata item
@throws RemoteException 
"
      end

      operation 567042 "addExperiment"
	public explicit_return_type "void"
	nparams 1
	  param inout name "description" type class_ref 135426 // ExperimentEntity
	nexceptions 2
	  exception class_ref 186882 // ResultsRepositoryException
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Adds new experiment into given analysis of results repository, so it can be filled 
with entities and results, it must not exist before. 
 
@param description 	Object describing the experiment
@throws ResultsRepositoryException 
@throws RemoteException 
@see cz.cuni.mff.been.resultsrepository.ResultsRepositoryInterface#addExperiment
"
      end

      operation 567170 "addExperimentMetadata"
	public explicit_return_type "void"
	nparams 4
	  param inout name "analysisId" type class_ref 130434 // AID
	  param inout name "experimentId" type class_ref 133378 // EID
	  param in name "key" explicit_type "String"
	  param in name "value" explicit_type "String"
	nexceptions 2
	  exception class_ref 186882 // ResultsRepositoryException
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allows adding new custom experiment metadata. 

@param analysisId	Analysis Id
@param experimentId	Experiment Id
@param key			Key of metadata item
@param value			Value of metadata item
@throws RemoteException
@throws ResultsRepositoryException	In case you attempt to overwrite existing metadata item
"
      end

      operation 567298 "addBinary"
	public explicit_return_type "void"
	nparams 1
	  param inout name "description" type class_ref 139266 // BinaryEntity
	nexceptions 2
	  exception class_ref 186882 // ResultsRepositoryException
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Adds new binary into given analysis and experiment of results repository, so it can 
be filled with entities and results, it must not exist before. 
 
@param description 	Object describing binary being entered into Results Repository

@throws ResultsRepositoryException 
@throws RemoteException
@see cz.cuni.mff.been.resultsrepository.ResultsRepositoryInterface#addBinary
"
      end

      operation 567426 "addBinaryMetadata"
	public explicit_return_type "void"
	nparams 5
	  param inout name "analysisId" type class_ref 130434 // AID
	  param inout name "experimentId" type class_ref 133378 // EID
	  param inout name "binaryId" type class_ref 138754 // BID
	  param in name "key" explicit_type "String"
	  param in name "value" explicit_type "String"
	nexceptions 2
	  exception class_ref 186882 // ResultsRepositoryException
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allows adding new custom binarydata. 

@param analysisId	Analysis Id
@param experimentId	Experiment Id
@param binaryId		Binary Id
@param key			Key of metadata item
@param value			Value of metadata item
@throws RemoteException
@throws ResultsRepositoryException	In case you attempt to overwrite existing metadata item
"
      end

      operation 567554 "initLoadUpload"
	public explicit_return_type "void"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 567682 "closeLoadUpload"
	public explicit_return_type "void"
	nparams 5
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	  param inout name "valid" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 567810 "uploadLoadInfo"
	public return_type class_ref 134658 // UploadHandle
	nparams 8
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	  param in name "filename" explicit_type "String"
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "int"
	  param inout name "blocking" explicit_type "boolean"
	nexceptions 4
	  explicit_exception "UnknownHostException"
	  explicit_exception "IOException"
	  exception class_ref 187522 // ResultsRepositoryBusyException
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 567938 "uploadRunResults"
	public return_type class_ref 134658 // UploadHandle
	nparams 11
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	  param in name "roleName" explicit_type "String"
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "int"
	  param inout name "runValid" explicit_type "boolean"
	  param inout name "blocking" explicit_type "boolean"
	  param in name "tableIndex" explicit_type "int"
	  param in name "totalTables" explicit_type "int"
	nexceptions 4
	  explicit_exception "UnknownHostException"
	  explicit_exception "IOException"
	  exception class_ref 187522 // ResultsRepositoryBusyException
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.resultsrepository.ResultsRepositoryInterface#uploadRunResults
"
      end

      operation 568066 "getFileUploadStatus"
	public return_type class_ref 134786 // UploadStatus
	nparams 1
	  param inout name "handle" type class_ref 134658 // UploadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.resultsrepository.ResultsRepositoryInterface#getFileUploadStatus
"
      end

      operation 568194 "endRunUpload"
	public explicit_return_type "void"
	nparams 6
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	  param in name "host" explicit_type "String"
	  param inout name "handle" type class_ref 134658 // UploadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.resultsrepository.ResultsRepositoryInterface#endFileUpload
"
      end

      operation 568322 "endFileUpload"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handle" type class_ref 134658 // UploadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.resultsrepository.ResultsRepositoryInterface#endFileUpload
"
      end

      operation 568450 "getAnalysisInterface"
	public return_type class_ref 188162 // EntityInterface
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<AID> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ---------------------------------------------
gui.ResultsRepositoryInterface implementation
---------------------------------------------
(see cz.cuni.mff.been.resultsrepository.ResultsRepositoryUserInterface for
comments upon methods) 
"
      end

      operation 568578 "beginRScriptPackageUpload"
	public return_type class_ref 134658 // UploadHandle
	nparams 3
	  param in name "name" explicit_type "String"
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 568706 "deleteRScriptPackage"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Deletes (unregister) R package from Results Repository
 
@param name	Name of the package to be deleted

@return	True iff successful
@throws RemoteException 
"
      end

      operation 568834 "endRScriptPackageUpload"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handle" type class_ref 134658 // UploadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Closes the upload handle. Client should call this method after the upload
status returned by <code>getFileUploadStatus</code> has value
<code>ACCEPTED</code>, or <code>ERROR</code>.

If the client doesn't close the upload handle, Results Repository will leak
a little amount of memory. However, no other resources than memory
(such as open files, locks...) are associated with the upload handle. 

@param handle upload handle
@throws RemoteException when something in RMI goes bad
"
      end

      operation 568962 "getAnalysisCallbackRScripts"
	public return_type class_ref 135554 // CallbackRScripts
	nparams 1
	  param inout name "aid" type class_ref 130434 // AID
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns list of all set anaysis callback R scripts . Analysis scripts serve just as 
a template for experiment scripts, which are really used at finish of run upload

@param aid	Analysis Id
@return		CallbackRScripts object containing callback scripts to be executed 
				on each level of database after upload is done. 
@throws RemoteException 
"
      end

      operation 569090 "getRFunctionsHelp"
	public return_type class_ref 192770 // RFunctionHelp
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns help for R Scripts. Used by GUI

@return	Array of RFunctionHelp containing help for all R functions in all packages
@throws RemoteException 
"
      end

      operation 569218 "getRScriptPackageUploadStatus"
	public return_type class_ref 134786 // UploadStatus
	nparams 1
	  param inout name "handle" type class_ref 134658 // UploadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the status of the file upload. Result is one
of the values listed in the <code>UploadStatus</code> enumeration.

Values <code>INITIALIZING</code> and <code>UPLOADING</code> mean that
Results Repository still works on the file upload. Values
<code>ACCEPTED</code>, <code>REJECTED</code> and <code>ERROR</code> mean that 
Results Repository has finished its work (either successfully or unsuccessfully) 
and the download handle is ready to be closed by the <code>endRScriptPackageUpload</code> method.   

@param handle file upload handle
@return upload status
@throws RemoteException when something in RMI goes bad
"
      end

      operation 569346 "getRScriptPackages"
	public return_type class_ref 192642 // RScriptPackage
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Gives list of all registered R Script packages 

@return	Array of RScriptPackage, each item contains info about one registered package
@throws RemoteException 
"
      end

      operation 569474 "getRejectedRScriptPackageUploadErrorMessages"
	public explicit_return_type "String"
	nparams 1
	  param inout name "handle" type class_ref 134658 // UploadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns all errors that occured in the case R package was rejected for some reason

@param handle	Handle of upload operation
@return	Array of strings containing error messages
@throws RemoteException 
"
      end

      operation 569602 "setAnalysisCallbackRScripts"
	public explicit_return_type "void"
	nparams 2
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "callbackRScripts" type class_ref 135554 // CallbackRScripts
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets the list of all callback R scripts for a given analysis. Analysis scripts serve just as 
a template for experiment scripts, which are really used at finish of run upload

@param aid	Analysis Id
@param callbackRScripts		CallbackRScripts object containing callback scripts to 
	be executed on each level of database after upload is done. 
@throws RemoteException 
"
      end

      operation 569730 "setExperimentCallbackRScripts"
	public explicit_return_type "void"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "callbackRScripts" type class_ref 135554 // CallbackRScripts
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets the list of all callback R scripts to be executed for a given experiment. 

@param aid	Analysis Id
@param eid 	Experiment Id
@param callbackRScripts		CallbackRScripts object containing callback scripts to be executed 
								on each level of database after upload is done. 
@throws RemoteException 
"
      end

      operation 569858 "finishLogUpload"
	public explicit_return_type "void"
	nparams 2
	  param inout name "analysisId" type class_ref 130434 // AID
	  param inout name "experimentId" type class_ref 133378 // EID
	nexceptions 2
	  exception class_ref 186882 // ResultsRepositoryException
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Finishes logs upload. This method should be called on the end of the experiments, as it
reads through the list of tasks and uploads logs of all tasks, which weren't uploaded yet.

@param analysisId	Analysis Id
@param experimentId	Experiment Id
@throws ResultsRepositoryException
@throws RemoteException 
"
      end

      operation 569986 "performLogUpload"
	public explicit_return_type "void"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param in name "contextName" explicit_type "String"
	  param in name "taskName" explicit_type "String"
	nexceptions 2
	  exception class_ref 186882 // ResultsRepositoryException
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
This method causes log upload to start. It is syncrhonnous and blocking to ensure that all
logs are uploaded, before work continues on the other side (so that they are not cleaned up) 

@param aid		AnalysisId
@param eid		ExperimentId
@param contextName	Context of task to upload logs from
@param taskName		The name of the task to upload logs from
@throws ResultsRepositoryException
@throws RemoteException 
"
      end

      operation 570114 "enqueueScriptExecution"
	public explicit_return_type "void"
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param in name "functionToRun" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ********************************************** 
 ResultsRepositoryDebugInterface implementation 
 ********************************************** 

Adds new function execution into the background queue of R scripts execution

@param 	aid	Analysis ID
@param	eid Experiment ID
@param	functionToRun	the string containing function to be executed in R
@throws RemoteException 
"
      end

      operation 570242 "enqueueScriptExecution"
	public explicit_return_type "void"
	nparams 4
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param in name "functionToRun" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Adds new function execution into the background queue of R scripts execution

@param 	aid	Analysis ID
@param	eid Experiment ID
@param	bid	Binary ID
@param	functionToRun	the string containing function to be executed in R
@throws RemoteException 
"
      end

      operation 570370 "enqueueScriptExecution"
	public explicit_return_type "void"
	nparams 5
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	  param in name "functionToRun" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Adds new function execution into the background queue of R scripts execution

@param 	aid	Analysis ID
@param	eid Experiment ID
@param	bid Binary ID
@param rid 
@param	functionToRun	the string containing function to be executed in R
@throws RemoteException 
"
      end

      operation 570498 "resourceRScripts"
	public explicit_return_type "void"
	nparams 0
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 186882 // ResultsRepositoryException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Causes R scripts (in working directory) to be reloaded into R 

@throws RemoteException 
@throws ResultsRepositoryException 
"
      end

      operation 570626 "reportExperimentColumnNames"
	public explicit_return_type "void"
	nparams 3
	  param inout name "analysisId" type class_ref 130434 // AID
	  param inout name "experimentId" type class_ref 133378 // EID
	  param inout name "columnNames" explicit_type "ArrayList<String>"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Reports column names for experiment

@param analysisId	Analysis Id
@param experimentId	Experiment Id
@param columnNames	<code>ArrayList&lt;String&gt;</code> containing list of column names 
@throws RemoteException
"
      end
    end

    class 192898 "ResultsRepositoryService"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 236930 // <generalisation>
	relation 236930 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 236930 // <generalisation>
	  b parent class_ref 136962 // Service
      end

      attribute 254210 "SERVICE_NAME"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"resultsrepository\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Name of the service. 
"
      end

      attribute 254338 "SERVICE_HUMAN_NAME"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"Results Repository\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Human-readable name of the service (displayed in the web interface). 
"
      end

      classrelation 237058 // resultsRepositoryInstance (<unidirectional association>)
	relation 237058 --->
	  a role_name "resultsRepositoryInstance" class_relation private
	    comment " Main ResultsRepository instance, which handles all RMI interfaces 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 237058 // resultsRepositoryInstance (<unidirectional association>)
	  b parent class_ref 192386 // ResultsRepositoryImplementation
      end

      attribute 254466 "DBASE_DIRECTORY"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"dbase_dir\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Command line argument name for the file to be copied 
"
      end

      attribute 254594 "dbaseDirectory"
	class_attribute private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The path to database of results 
"
      end

      attribute 254722 "tempDirectory"
	class_attribute private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The path to the task temporary working directory 
"
      end

      operation 570754 "ResultsRepositoryService"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 137218 // TaskInitializationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>ResultsRepositoryService</code> object. It is here
only to shut up the compiler.

@throws TaskInitializationException if something fails during the task
         creation
"
      end

      operation 570882 "checkDirectory"
	private explicit_return_type "void"
	nparams 1
	  param in name "directoryName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Check whether valid directory directoryName exists. In case of failure, exit task 
(this is method intended for necessary directories testing)

@param directoryName	Name of directory to test
"
      end

      operation 571010 "getAndCheckDirectories"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get parameters of task (directories) and check their existence

@param args	Arguments from command line
"
      end

      operation 571138 "createInstance"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 137218 // TaskInitializationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Creates instance of results repository implementation, which are initialized with 
all directories

@throws TaskInitializationException
"
      end

      operation 571266 "getName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.task.Service#getName()
"
      end

      operation 571394 "start"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 137346 // TaskException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.task.Service#start()
"
      end

      operation 571522 "stop"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 137346 // TaskException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@see cz.cuni.mff.been.task.Service#stop()
"
      end
    end

    class 193026 "RHelpManager"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Class implementing manipulation with help for R scripts


@author Jakub Lehotsky
"
      classrelation 237186 // rhMInstance (<unidirectional association>)
	relation 237186 --->
	  a role_name "rhMInstance" init_value "=  null" class_relation private
	    comment " The single existing intance of RID Manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 237186 // rhMInstance (<unidirectional association>)
	  b parent class_ref 193026 // RHelpManager
      end

      classrelation 237314 // functionsHelp (<unidirectional association>)
	relation 237314 --->
	  a role_name "functionsHelp" multiplicity "[]" private
	    comment " Here, we store function helps 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 237314 // functionsHelp (<unidirectional association>)
	  b parent class_ref 192770 // RFunctionHelp
      end

      operation 571650 "RHelpManager"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Constructor - private, void for singleton use 
"
      end

      operation 571778 "getInstance"
	class_operation public return_type class_ref 193026 // RHelpManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Return single instance of R Scripts help manager 

@return	reference single running instance of Graph manager
"
      end

      operation 571906 "initialize"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 572034 "getRFunctionsHelp"
	public return_type class_ref 192770 // RFunctionHelp
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the functions help stored in memory

@return	The functions help
"
      end

      operation 572162 "reloadRFunctionsHelp"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
Loads help data from disk into memory 
@throws IOException 
"
      end
    end

    class 193154 "RoleItem"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Class containing one single information about hosts <-> role mapping

@author Jakub Lehotsky
"
      classrelation 238082 // <realization>
	relation 238082 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 238082 // <realization>
	  b parent class_ref 148226 // Serializable
      end

      attribute 255362 "key"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Item key - numerical index - int 
"
      end

      attribute 255490 "roleName"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Item value. 
"
      end

      attribute 255618 "hostName"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Item value. 
"
      end

      operation 575234 "getKey"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return the index "
      end

      operation 575362 "getRoleName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return the role name "
      end

      operation 575490 "getHostName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return the host name "
      end

      operation 575618 "RoleItem"
	public explicit_return_type ""
	nparams 3
	  param in name "key" explicit_type "long"
	  param in name "roleName" explicit_type "String"
	  param in name "hostName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>RoleItem</code> object.

@param  key		key
@param  roleName	the name of the role
@param  hostName	the name of the host
"
      end
    end

    class 193282 "RoleList"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Implements management and loading and storing of roles and hostname mapping table

@author Jakub Lehotsky
"
      attribute 255746 "IO_ERROR_LIST_READING_MESSAGE"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"I/O error reading role list of \""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " I/O error in validity map reading message 
"
      end

      attribute 255874 "IO_ERROR_LIST_STORING_MESSAGE"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"I/O error storing role list of \""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " I/O error in validity map reading message 
"
      end

      attribute 256002 "ASCII_TAB"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"\\t\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " ASCII of delim. character (TAB) 
"
      end

      classrelation 238210 // roleTable (<unidirectional association>)
	relation 238210 --->
	  stereotype "ArrayList"
	  a role_name "roleTable" private
	    comment " Actual metadata 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 238210 // roleTable (<unidirectional association>)
	  b parent class_ref 193154 // RoleItem
      end

      attribute 256130 "lastItem"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Last item counter 
"
      end

      operation 575746 "RoleList"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Constructor - creates numbered table, void object 
(meant for creating new validity map tables items, initializing them and storing into file)

"
      end

      operation 575874 "getRolesTable"
	public return_type class_ref 193154 // RoleItem
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the roles and host names mapping table we store

@return the metadata
"
      end

      operation 576002 "RoleList"
	public explicit_return_type ""
	nparams 1
	  param in name "filename" explicit_type "String"
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
Constructor - initializes numbered map in memory and read its contents from the file.

@param filename	Name of file to read validity table from
@throws IOException 
"
      end

      operation 576130 "store"
	public explicit_return_type "void"
	nparams 1
	  param in name "filename" explicit_type "String"
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Stores numbered list we have in our memory to the file.

@param filename	Where to store numbered list.
@throws IOException
"
      end

      operation 576258 "getItemCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the count of numbered items currently loaded in memory

@return	The count of items
"
      end

      operation 576386 "addItem"
	public explicit_return_type "void"
	nparams 3
	  param in name "index" explicit_type "long"
	  param in name "roleName" explicit_type "String"
	  param in name "hostName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Adding item to role list map

@param index	Key of new item
@param roleName	Name of the role
@param hostName	Assocciated hostname
@throws ArrayIndexOutOfBoundsException
"
      end

      operation 576514 "addItem"
	public explicit_return_type "void"
	nparams 1
	  param inout name "item" type class_ref 193154 // RoleItem
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Adding item to role list map using a RoleItem object

@param item	Item to add
 
@throws ArrayIndexOutOfBoundsException
"
      end

      operation 576642 "getItem"
	package return_type class_ref 193154 // RoleItem
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns one item of roles table identified by index

@param index	Index of the item to get

@return	The item
"
      end

      operation 576770 "deleteItemByKey"
	public explicit_return_type "void"
	nparams 1
	  param in name "key" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Deleting item by key

@param key	Key of item to be deleted
"
      end

      operation 576898 "getItemKey"
	public explicit_return_type "long"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the key of the item with index.

@param index	Index of they key to give.
@return	int - the key
"
      end

      operation 577026 "getItemRoleName"
	public explicit_return_type "String"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the role name of the item with index.

@param index	Index of the value to give.
@return	String with value.
"
      end

      operation 577154 "getItemHostName"
	public explicit_return_type "String"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the role name of the item with index.

@param index	Index of the value to give.
@return	String with value.
"
      end

      operation 577282 "getItemIndex"
	public explicit_return_type "int"
	nparams 1
	  param in name "key" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the index the item, with given key. (can be used by <code>getItemRoleName()</code>
or <code>getItemHostName</code> 

@param key	Key to ask for.
@return		Index of associated item in the table, -1 if it doesn't exist 
"
      end

      operation 577410 "getItemIndexByHostname"
	public explicit_return_type "int"
	nparams 1
	  param in name "hostName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the index the item, with given hostName. (can be used by <code>getItemRoleName()</code>
or <code>getItemHostName</code> 

@param hostName	Hostname by which to search for item in the table
@return		Index of associated item in the table, -1 if it doesn't exist 
"
      end

      operation 577538 "setItemByKey"
	public explicit_return_type "boolean"
	nparams 3
	  param in name "key" explicit_type "long"
	  param in name "roleName" explicit_type "String"
	  param in name "hostName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets the value of the table item, with the given long key. 

@param key	Key
@param roleName	The name of role
@param hostName 	The name of the host

@return True iff succesful (false if key doesn't exist)
"
      end
    end

    class 193538 "RREvent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Data class, that holds information about one event to be executed on Results Repository
background thread. It holds information about R script to run or run upload callback
to be executed.

@author Jakub Lehotsky
"
      classrelation 238850 // aid (<unidirectional association>)
	relation 238850 --->
	  a role_name "aid" private
	    comment " Analysis event is tied to 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 238850 // aid (<unidirectional association>)
	  b parent class_ref 130434 // AID
      end

      classrelation 238978 // eid (<unidirectional association>)
	relation 238978 --->
	  a role_name "eid" private
	    comment " Experiment event is tied to 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 238978 // eid (<unidirectional association>)
	  b parent class_ref 133378 // EID
      end

      classrelation 239106 // bid (<unidirectional association>)
	relation 239106 --->
	  a role_name "bid" private
	    comment " Binary event is tied to 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 239106 // bid (<unidirectional association>)
	  b parent class_ref 138754 // BID
      end

      classrelation 239234 // rid (<unidirectional association>)
	relation 239234 --->
	  a role_name "rid" private
	    comment " Run event is tied to 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 239234 // rid (<unidirectional association>)
	  b parent class_ref 140290 // RID
      end

      attribute 256514 "isScript"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " True if R script, false if callback 
"
      end

      attribute 256642 "scriptToRun"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " R call in case of R script 
"
      end

      classrelation 239362 // callbackInterface (<unidirectional association>)
	relation 239362 --->
	  a role_name "callbackInterface" private
	    comment " Callback object in case of callback 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 239362 // callbackInterface (<unidirectional association>)
	  b parent class_ref 190338 // FileUploadCallbackInterface
      end

      attribute 256770 "callbackData"
	private explicit_type "Object"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Callback object data in case of callback 
"
      end

      operation 579202 "RREvent"
	public explicit_return_type ""
	nparams 8
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	  param inout name "isScript" explicit_type "boolean"
	  param in name "scriptToRun" explicit_type "String"
	  param inout name "callbackInterface" type class_ref 190338 // FileUploadCallbackInterface
	  param inout name "callbackData" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Constructs the event

@param aid	Associated analysis Id
@param eid	Associated experiment Id
@param bid	Associated binary Id
@param rid	Associated run Id
@param isScript	
@param scriptToRun
@param callbackInterface
@param callbackData
"
      end

      operation 579330 "getAid"
	public return_type class_ref 130434 // AID
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return the aid
"
      end

      operation 579458 "getEid"
	public return_type class_ref 133378 // EID
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return the eid
"
      end

      operation 579586 "getBid"
	public return_type class_ref 138754 // BID
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return the bid
"
      end

      operation 579714 "getRid"
	public return_type class_ref 140290 // RID
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return the rid
"
      end

      operation 579842 "getIsScript"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return the rScript
"
      end

      operation 579970 "getScriptToRun"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return the scriptToRun
"
      end

      operation 580098 "getCallbackInterface"
	public return_type class_ref 190338 // FileUploadCallbackInterface
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return the callbackInterface
"
      end

      operation 580226 "getCallbackData"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return the callbackData
"
      end
    end

    class 193666 "RRIDItem"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Class containing one single information about one item of the validity maps table

@author Jakub Lehotsky
"
      classrelation 239490 // <realization>
	relation 239490 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 239490 // <realization>
	  b parent class_ref 148226 // Serializable
      end

      classrelation 239618 // key (<unidirectional association>)
	relation 239618 --->
	  a role_name "key" private
	    comment " Item key - numerical index - RID 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 239618 // key (<unidirectional association>)
	  b parent class_ref 140290 // RID
      end

      attribute 256898 "fileName"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " File names 
"
      end

      attribute 257026 "valid"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Indicates validity of given run 
"
      end

      attribute 257154 "hostIndex"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Host index 
"
      end

      operation 580354 "RRIDItem"
	public explicit_return_type ""
	nparams 4
	  param inout name "key" type class_ref 140290 // RID
	  param inout name "validity" explicit_type "boolean"
	  param in name "fileName" explicit_type "String"
	  param in name "hostIndex" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>MetadataItem</code> object.

@param key metadata key
@param validity validity of run
@param fileName The name of the file to store data in
@param hostIndex	Index of the host
"
      end

      operation 580482 "getKey"
	public return_type class_ref 140290 // RID
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return the key "
      end

      operation 580610 "getTableName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return the name of all tables "
      end

      operation 580738 "getValid"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return validity of run "
      end

      operation 580866 "getHostIndex"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return index of the host "
      end

      operation 580994 "setTableName"
	public explicit_return_type "void"
	nparams 1
	  param in name "filename" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets the filename of the file

@param filename
"
      end

      operation 581122 "getIndexOfTable"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns just the run index of the filename of table

@return	The run index
"
      end
    end

    class 193794 "RRIDTable"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Implements management and loading and storing of validity maps to the file

@author Jakub Lehotsky
"
      attribute 257282 "IO_ERROR_VALIDITY_READING_MESSAGE"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"I/O error reading validity map of \""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " I/O error in validity map reading message 
"
      end

      attribute 257410 "IO_ERROR_VALIDITY_STORING_MESSAGE"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"I/O error storing validity map of \""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " I/O error in validity map reading message 
"
      end

      attribute 257538 "ASCII_TAB"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"\\t\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " ASCII of delim. character (TAB) 
"
      end

      classrelation 239746 // rridTable (<unidirectional association>)
	relation 239746 --->
	  stereotype "ArrayList"
	  a role_name "rridTable" private
	    comment " Actual metadata 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 239746 // rridTable (<unidirectional association>)
	  b parent class_ref 193666 // RRIDItem
      end

      attribute 257666 "lastItem"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Last item counter 
"
      end

      operation 581250 "RRIDTable"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Constructor - creates rrid Table, void object 
(meant for creating new validity map tables items, initializing them and storing into file)

"
      end

      operation 581378 "getRridTable"
	public return_type class_ref 193666 // RRIDItem
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns validity map we store

@return the metadata
"
      end

      operation 581506 "RRIDTable"
	public explicit_return_type ""
	nparams 1
	  param in name "filename" explicit_type "String"
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
Constructor - initializes vliadity map in memory and read its contents from the file.

@param filename	Name of file to read validity table from
@throws IOException 
"
      end

      operation 581634 "store"
	public explicit_return_type "void"
	nparams 1
	  param in name "filename" explicit_type "String"
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Stores validity map we have in our memory to the file.

@param filename	Where to store validity map.
@throws IOException
"
      end

      operation 581762 "getItemCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the count of items currently loaded in memory

@return	The count of items
"
      end

      operation 581890 "addItem"
	public explicit_return_type "void"
	nparams 1
	  param inout name "anItem" type class_ref 193666 // RRIDItem
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Adding key-value pair to validity map

@param anItem	an item to be inserted to the array
@throws ArrayIndexOutOfBoundsException
"
      end

      operation 582018 "deleteItemByKey"
	public explicit_return_type "void"
	nparams 1
	  param inout name "key" type class_ref 140290 // RID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Deleting item by key

@param key	Key of item to be deleted
"
      end

      operation 582146 "getItemKey"
	public return_type class_ref 140290 // RID
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the key of the item with index.

@param index	Index of they key to give.
@return	RID - the key
"
      end

      operation 582274 "getItemValidity"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the value of the item with index.

@param index	Index of the value to give.
@return	String with value.

public String getItemValue(int index) {
return rridTable.get(index).getFileName();
}

Returns the value of the item with index.

@param index	Index of the value to give.
@return	String with value.
"
      end

      operation 582402 "getItemByKey"
	public return_type class_ref 193666 // RRIDItem
	nparams 1
	  param inout name "key" type class_ref 140290 // RID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the value of the item, with given RID key. 

@param key	Key to ask for.
@return		String - patch to associated run, or null if not found. 
"
      end

      operation 582530 "getItemIndexByKey"
	public explicit_return_type "int"
	nparams 1
	  param inout name "key" type class_ref 140290 // RID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the index in array of the item, with given RID key. 

@param key	Key to ask for.
@return		index in the array 
"
      end

      operation 582658 "isValueInTable"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "value" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Check wether validity map contains given run.
This function serves as support for duplicities testing

@param value	Key to ask for.
@return		String - patch to associated run, or null if not found. 
"
      end

      operation 582786 "getValidityByKey"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" type class_ref 140290 // RID
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the value of the item, with given RID key. 

@param key	Key to ask for.
@return		Validity of given run 
"
      end

      operation 582914 "getItemTablename"
	public explicit_return_type "String"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the table name of a given item

@param index	Index of the item
@return	A table name
"
      end

      operation 583042 "splitFirstNumber"
	private explicit_return_type "String"
	nparams 1
	  param in name "input" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Splits the first number from runs data filename (denoted by either '-' or '.'), returns
array of two strings - first containing the beginning number, second the rest of the
filename

@param input	The filename
@return	Array of two strings containing the info mentioned above
"
      end

      operation 583170 "getAllIndexesEqualTo"
	public explicit_return_type "Integer"
	nparams 1
	  param in name "key" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns list of all integer indexes, which items number is equal to a given key 

@param key	The key
@return	The list
"
      end

      operation 583298 "getRealRunIndex"
	public explicit_return_type "long"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the real index of an item

@param index	The index

@return 	The real index (internal)
"
      end

      operation 583426 "decreaseIndexByOne"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
In table, decrease the true index of run file by one

@param index	The index
"
      end

      operation 583554 "getItemDecreasedTablename"
	public explicit_return_type "String"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the table name of a given item

@param index	Index of the item
@return	A table name
"
      end
    end

    class 193922 "RunImplementation"
      visibility public 
      nactuals 2
      actual class class_ref 188034 // EntityImplementation
        rank 0 value class_ref 140290 // RID
      actual class class_ref 188162 // EntityInterface
        rank 0 value class_ref 140290 // RID
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 241666 // <realization>
	relation 241666 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 241666 // <realization>
	  b parent class_ref 188034 // EntityImplementation
      end

      classrelation 241794 // <realization>
	relation 241794 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 241794 // <realization>
	  b parent class_ref 148226 // Serializable
      end

      classrelation 241922 // <realization>
	relation 241922 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 241922 // <realization>
	  b parent class_ref 188162 // EntityInterface
      end

      classrelation 242050 // aid (<unidirectional association>)
	relation 242050 --->
	  a role_name "aid" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 242050 // aid (<unidirectional association>)
	  b parent class_ref 130434 // AID
      end

      classrelation 242178 // eid (<unidirectional association>)
	relation 242178 --->
	  a role_name "eid" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 242178 // eid (<unidirectional association>)
	  b parent class_ref 133378 // EID
      end

      classrelation 242306 // bid (<unidirectional association>)
	relation 242306 --->
	  a role_name "bid" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 242306 // bid (<unidirectional association>)
	  b parent class_ref 138754 // BID
      end

      attribute 258050 "NO_RUN_GRAPHS"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"No results graphs for runs.\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " No graphs suppported for binaries 
"
      end

      classrelation 242434 // binaryEntityManager (<unidirectional association>)
	relation 242434 --->
	  a role_name "binaryEntityManager" private
	    comment " Results repository entity manager for analyses 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 242434 // binaryEntityManager (<unidirectional association>)
	  b parent class_ref 188674 // BinaryEntityManager
      end

      classrelation 242562 // runEntityManager (<unidirectional association>)
	relation 242562 --->
	  a role_name "runEntityManager" private
	    comment " Results repository entity manager for analyses 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 242562 // runEntityManager (<unidirectional association>)
	  b parent class_ref 189954 // RunEntityManager
      end

      operation 588674 "RunImplementation"
	public explicit_return_type ""
	nparams 3
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Construction of basic run implementation 
@param aid	AnalysisID
@param eid 	ExperimentID
@param bid 	BinaryID
@throws RemoteException "
      end

      operation 588802 "getEntity"
	public return_type class_ref 187010 // Entity
	nparams 1
	  param inout name "id" type class_ref 140290 // RID
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<RID> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 588930 "setEntityComment"
	public explicit_return_type "void"
	nparams 2
	  param inout name "id" type class_ref 140290 // RID
	  param in name "comment" explicit_type "String"
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 589058 "getEntities"
	public return_type class_ref 187010 // Entity
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}<RID>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 589186 "getSubentityInterface"
	public return_type class_ref 188162 // EntityInterface
	nparams 1
	  param inout name "id" type class_ref 140290 // RID
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 589314 "getExportFormats"
	public return_type class_ref 188290 // DataFormat
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 589442 "beginExport"
	public return_type class_ref 149762 // DownloadHandle
	nparams 4
	  param inout name "ids" type class_ref 140290 // RID
	  param in name "formatId" explicit_type "String"
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 589570 "getImportFormats"
	public return_type class_ref 188290 // DataFormat
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 589698 "beginImport"
	public return_type class_ref 134658 // UploadHandle
	nparams 3
	  param in name "formatId" explicit_type "String"
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 187522 // ResultsRepositoryBusyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 589826 "deleteEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "id" type class_ref 140290 // RID
	nexceptions 2
	  exception class_ref 187394 // DeleteLockedException
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 589954 "graphCount"
	public explicit_return_type "int"
	nparams 2
	  param inout name "graphType" type class_ref 187650 // GraphType
	  param inout name "id" type class_ref 140290 // RID
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 590082 "getGraphInfo"
	public return_type class_ref 187778 // GraphInfo
	nparams 3
	  param inout name "graphType" type class_ref 187650 // GraphType
	  param inout name "id" type class_ref 140290 // RID
	  param in name "index" explicit_type "int"
	nexceptions 2
	  explicit_exception "RemoteException"
	  exception class_ref 186882 // ResultsRepositoryException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 590210 "beginGraphDownload"
	public return_type class_ref 149762 // DownloadHandle
	nparams 5
	  param inout name "graphType" type class_ref 187650 // GraphType
	  param inout name "id" type class_ref 140290 // RID
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	  param in name "index" explicit_type "int"
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 187522 // ResultsRepositoryBusyException
	  exception class_ref 186882 // ResultsRepositoryException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 590338 "beginRawDataDownload"
	public return_type class_ref 149762 // DownloadHandle
	nparams 3
	  param inout name "id" type class_ref 140290 // RID
	  param inout name "ip" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	nexceptions 3
	  exception class_ref 187522 // ResultsRepositoryBusyException
	  explicit_exception "RemoteException"
	  exception class_ref 186882 // ResultsRepositoryException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 590466 "endRawDataDownload"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handle" type class_ref 149762 // DownloadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 590594 "getRawDataDownloadStatus"
	public return_type class_ref 149890 // DownloadStatus
	nparams 1
	  param inout name "handle" type class_ref 149762 // DownloadHandle
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 590722 "getContext"
	public explicit_return_type "String"
	nparams 1
	  param inout name "id" type class_ref 140290 // RID
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 590850 "getTasks"
	public explicit_return_type "String"
	nparams 1
	  param inout name "id" type class_ref 140290 // RID
	nexceptions 1
	  explicit_exception "RemoteException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 590978 "getLogsForTask"
	public return_type class_ref 184194 // LogRecord
	nparams 2
	  param inout name "id" type class_ref 140290 // RID
	  param in name "taskID" explicit_type "String"
	nexceptions 4
	  explicit_exception "RemoteException"
	  exception class_ref 184322 // LogStorageException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "NullPointerException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 194050 "RunUploadCallback"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
This class provides callback function to register after succesful finish of file callback. 
This one is specific for one run results upload and calls 

@author Jakub Lehotsky
"
      classrelation 242690 // <realization>
	relation 242690 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 242690 // <realization>
	  b parent class_ref 190338 // FileUploadCallbackInterface
      end

      classrelation 242818 // rScriptsRunner (<unidirectional association>)
	relation 242818 --->
	  a role_name "rScriptsRunner" private
	    comment " R script tunner managing background scripts 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 242818 // rScriptsRunner (<unidirectional association>)
	  b parent class_ref 186754 // RScriptsRunner
      end

      classrelation 242946 // aid (<unidirectional association>)
	relation 242946 --->
	  a role_name "aid" private
	    comment " Analysis ID upon which to run callback 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 242946 // aid (<unidirectional association>)
	  b parent class_ref 130434 // AID
      end

      classrelation 243074 // eid (<unidirectional association>)
	relation 243074 --->
	  a role_name "eid" private
	    comment " Experiment ID upon which to run callback 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 243074 // eid (<unidirectional association>)
	  b parent class_ref 133378 // EID
      end

      classrelation 243202 // bid (<unidirectional association>)
	relation 243202 --->
	  a role_name "bid" private
	    comment " Binary ID upon which to run callback 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 243202 // bid (<unidirectional association>)
	  b parent class_ref 138754 // BID
      end

      classrelation 243330 // rid (<unidirectional association>)
	relation 243330 --->
	  a role_name "rid" private
	    comment " Run ID upon which to run callback 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 243330 // rid (<unidirectional association>)
	  b parent class_ref 140290 // RID
      end

      attribute 258178 "totalTables"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Total table count 
"
      end

      attribute 258306 "validRun"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Indicate whether run is valid or not 
"
      end

      classrelation 243458 // callbacks (<unidirectional association>)
	relation 243458 --->
	  a role_name "callbacks" private
	    comment " Callback manager to use 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 243458 // callbacks (<unidirectional association>)
	  b parent class_ref 191874 // RCallbacksManager
      end

      classrelation 243586 // runEntityManager (<unidirectional association>)
	relation 243586 --->
	  a role_name "runEntityManager" private
	    comment " Internal run entity manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 243586 // runEntityManager (<unidirectional association>)
	  b parent class_ref 189954 // RunEntityManager
      end

      classrelation 243714 // rridManager (<unidirectional association>)
	relation 243714 --->
	  a role_name "rridManager" private
	    comment " Internal runs validity map manager 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 243714 // rridManager (<unidirectional association>)
	  b parent class_ref 189186 // RunValidityMapsManager
      end

      classrelation 243842 // lockManager (<unidirectional association>)
	relation 243842 --->
	  a role_name "lockManager" private
	    comment " Internal lock manager instance 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 243842 // lockManager (<unidirectional association>)
	  b parent class_ref 189826 // LockManager
      end

      operation 591106 "RunUploadCallback"
	public explicit_return_type ""
	nparams 7
	  param inout name "database" type class_ref 186242 // Database
	  param inout name "aid" type class_ref 130434 // AID
	  param inout name "eid" type class_ref 133378 // EID
	  param inout name "bid" type class_ref 138754 // BID
	  param inout name "rid" type class_ref 140290 // RID
	  param inout name "validRun" explicit_type "boolean"
	  param in name "totalTables" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Constructor - initialization of callback object

@param database	Instance of Results Repository database
@param aid	Analysis ID
@param eid	Experiment ID
@param bid	Binary ID
@param rid 	Run ID
@param validRun	True, if run is not crashed 
@param totalTables Total tables count
"
      end

      operation 591234 "getAid"
	public return_type class_ref 130434 // AID
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return Analysis Id "
      end

      operation 591362 "getEid"
	public return_type class_ref 133378 // EID
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return Experiment Id "
      end

      operation 591490 "getBid"
	public return_type class_ref 138754 // BID
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return Binary Id "
      end

      operation 591618 "getRid"
	public return_type class_ref 140290 // RID
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return Run Id "
      end

      operation 591746 "enqueueRunScripts"
	private explicit_return_type "void"
	nparams 1
	  param inout name "runValidity" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Enqueues all registered scripts for runs onto background queue

@param runValidity	validity of run, that caused script execution
"
      end

      operation 591874 "enqueueBinaryScripts"
	private explicit_return_type "void"
	nparams 2
	  param inout name "complete" explicit_type "boolean"
	  param inout name "runValidity" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Enqueues all registered scripts for binaries onto background queue

@param complete	True for complete binary callbacks, false for incomplete
@param runValidity	Validity of run, that invoked script execution
"
      end

      operation 592002 "enqueueExperimentScripts"
	private explicit_return_type "void"
	nparams 2
	  param inout name "complete" explicit_type "boolean"
	  param inout name "runValidity" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Enqueues all registered scripts for experiments onto background queue

@param complete	True for complete experiment callbacks, false for incomplete
@param runValidity	Validity of run, that invoked script execution
"
      end

      operation 592130 "callbackFunction"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 
Callback function - to be called after run is uploaded, mandatory function, performs 
metadata update and calls all hang-ups for R functions 
@param data 	Eventualy registered data for callback
"
      end
    end

    class 194306 "Zipper"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
This class conatin helper functions for zipping and unzipping useful work

@author Jakub Lehotsky      
"
      operation 598018 "Zipper"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 598146 "putDirectoryZipEntry"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "zos" explicit_type "ZipOutputStream"
	  param in name "dirName" explicit_type "String"
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " this is small support function - useful also for external use (see relativePath note above) "
      end

      operation 598274 "zipFile"
	class_operation public explicit_return_type "boolean"
	nparams 4
	  param inout name "zipOutputStream" explicit_type "ZipOutputStream"
	  param inout name "bufOutputStream" explicit_type "BufferedOutputStream"
	  param inout name "fileToZip" explicit_type "File"
	  param in name "relativePath" explicit_type "String"
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Zips one file

Please do this before callbefore call:
		
	BufferedOutputStream bufOutputStream = new BufferedOutputStream(zipOutputStream)

  this is because I need access to both streams (no way to get inner stream from 
  filter stream in code) and pass out and zipOutputStream as parameters of this method

@param fileToZip	file to zip
@param relativePath	path in resulting zip file, it will consist of 
     (warning: you should manually add ZipEntries for all subdirectories, if you want to 
     use this - use with care)   
@param zipOutputStream	see above
@param bufOutputStream	see above
	
@return	True iff succesful
@throws IOException
"
      end

      operation 598402 "zipDirectoryRecursively"
	class_operation public explicit_return_type "boolean"
	nparams 4
	  param inout name "zipOutputStream" explicit_type "ZipOutputStream"
	  param inout name "bufOutputStream" explicit_type "BufferedOutputStream"
	  param inout name "fileToZip" explicit_type "File"
	  param in name "relativePath" explicit_type "String"
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Zips directory into file

Please do this before callbefore call:
		
	BufferedOutputStream bufOutputStream = new BufferedOutputStream(zipOutputStream)

  this is because I need access to both streams (no way to get inner stream from 
  filter stream in code) and pass out and zipOutputStream as parameters of this method

@param fileToZip	directory (must be directory!) to compress
@param relativePath	path in resulting zip file, it will consist of 
     (warning: you should manually add ZipEntries for all subdirectories, if you want to 
     use this - use with care)   
@param zipOutputStream	see above
@param bufOutputStream	see above
	
@return	True iff succesful
@throws IOException
"
      end

      operation 598530 "copyInputStream"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "in" explicit_type "InputStream"
	  param inout name "out" explicit_type "OutputStream"
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Helper method - copies whole input stream (while not EOF) into output stream

@param in	Input Stream
@param out	Output Stream
@throws IOException
"
      end

      operation 598658 "unzipFile"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "inputFile" explicit_type "String"
	  param in name "outputDirectory" explicit_type "String"
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Unzips file into a given directory

@param inputFile	File to be unzipped
@param outputDirectory
			Directory, where file will be unzipped
@throws IOException
"
      end
    end

    class 186882 "ResultsRepositoryException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
This class is a base class for all user exceptions thrown in Results Repository package.

@author David Majda
"
      classrelation 226818 // <generalisation>
	relation 226818 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 226818 // <generalisation>
	  b parent class_ref 128130 // BeenException
      end

      operation 530818 "ResultsRepositoryException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>resultsrepositoryException</code> object.
"
      end

      operation 530946 "ResultsRepositoryException"
	public explicit_return_type ""
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>resultsrepositoryException</code> object
with specified message.

@param message exception message
"
      end

      operation 531074 "ResultsRepositoryException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" explicit_type "Throwable"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>resultsrepositoryException</code> object
with specified cause.

@param cause exception cause
"
      end

      operation 531202 "ResultsRepositoryException"
	public explicit_return_type ""
	nparams 2
	  param in name "message" explicit_type "String"
	  param inout name "cause" explicit_type "Throwable"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>resultsrepositoryException</code> object
with specified message and cause.

@param message exception message
@param cause exception cause
"
      end
    end

    class 187394 "DeleteLockedException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 226946 // <generalisation>
	relation 226946 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 226946 // <generalisation>
	  b parent class_ref 186882 // ResultsRepositoryException
      end

      operation 531330 "DeleteLockedException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>ResultsRepositoryBusyException</code> object.
"
      end

      operation 531458 "DeleteLockedException"
	public explicit_return_type ""
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>ResultsRepositoryBusyException</code> object
with specified message.

@param message exception message
"
      end

      operation 531586 "DeleteLockedException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" explicit_type "Throwable"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>ResultsRepositoryBusyException</code> object
with specified cause.

@param cause exception cause
"
      end

      operation 531714 "DeleteLockedException"
	public explicit_return_type ""
	nparams 2
	  param in name "message" explicit_type "String"
	  param inout name "cause" explicit_type "Throwable"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>ResultsRepositoryBusyException</code> object
with specified message and cause.

@param message exception message
@param cause exception cause
"
      end
    end

    class 187522 "ResultsRepositoryBusyException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 234754 // <generalisation>
	relation 234754 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 234754 // <generalisation>
	  b parent class_ref 186882 // ResultsRepositoryException
      end

      operation 561922 "ResultsRepositoryBusyException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>ResultsRepositoryBusyException</code> object.
"
      end

      operation 562050 "ResultsRepositoryBusyException"
	public explicit_return_type ""
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>ResultsRepositoryBusyException</code> object
with specified message.

@param message exception message
"
      end

      operation 562178 "ResultsRepositoryBusyException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" explicit_type "Throwable"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>ResultsRepositoryBusyException</code> object
with specified cause.

@param cause exception cause
"
      end

      operation 562306 "ResultsRepositoryBusyException"
	public explicit_return_type ""
	nparams 2
	  param in name "message" explicit_type "String"
	  param inout name "cause" explicit_type "Throwable"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>ResultsRepositoryBusyException</code> object
with specified message and cause.

@param message exception message
@param cause exception cause
"
      end
    end

    class 193410 "RPackageUploadException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
 BEEN: Benchmarking Environment
 ==============================

 File author: Jakub Lehotsky

 GNU Lesser General Public License Version 2.1
 ---------------------------------------------
 Copyright (C) 2004-2006 Distributed Systems Research Group,
 Faculty of Mathematics and Physics, Charles University in Prague

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License version 2.1, as published by the Free Software Foundation.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 MA  02111-1307  USA
"
      classrelation 238722 // <generalisation>
	relation 238722 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 238722 // <generalisation>
	  b parent class_ref 186882 // ResultsRepositoryException
      end

      attribute 256386 "errorMessages"
	private explicit_type "String"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Detailed error messages describing the error in the package upload. 
"
      end

      operation 578946 "getErrorMessages"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return detailed error messages "
      end

      operation 579074 "RPackageUploadException"
	public explicit_return_type ""
	nparams 2
	  param in name "message" explicit_type "String"
	  param in name "errorMessages" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>PackageUploadException</code> object
with specified message and detailed error messages.

@param message exception message
@param errorMessages detailed error messages
"
      end
    end
  end

  deploymentview 131074 "resultsrepository"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 166146 "AnalysisEntityManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.IOException;
import java.net.UnknownHostException;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import cz.cuni.mff.been.apps.benchmarkmanager.AnalysisEntity;
import cz.cuni.mff.been.apps.benchmarkmanager.BenchmarkManagerException;
import cz.cuni.mff.been.apps.benchmarkmanager.BenchmarkManagerGUIInterface;
import cz.cuni.mff.been.apps.benchmarkmanager.EntityStatus;
import cz.cuni.mff.been.common.DownloadHandle;
import cz.cuni.mff.been.common.UploadHandle;
import cz.cuni.mff.been.common.id.AID;
import cz.cuni.mff.been.resultsrepository.api.AnalysisType;
import cz.cuni.mff.been.resultsrepository.gui.Entity;
import cz.cuni.mff.been.resultsrepository.gui.GraphInfo;
import cz.cuni.mff.been.resultsrepository.gui.GraphType;
import cz.cuni.mff.been.resultsrepository.gui.Statistics;
${definition}"
      associated_classes
	class_ref 186114 // AnalysisEntityManager
      end
    end

    artifact 166402 "EntityImplementation"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.net.InetAddress;
import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;
import java.util.List;
import cz.cuni.mff.been.common.DownloadHandle;
import cz.cuni.mff.been.common.DownloadStatus;
import cz.cuni.mff.been.common.UploadHandle;
import cz.cuni.mff.been.common.UploadStatus;
import cz.cuni.mff.been.common.id.ID;
import cz.cuni.mff.been.resultsrepository.gui.DataFormat;
import cz.cuni.mff.been.resultsrepository.gui.Entity;
import cz.cuni.mff.been.resultsrepository.gui.EntityInterface;
import cz.cuni.mff.been.resultsrepository.gui.GraphType;
${definition}"
      associated_classes
	class_ref 188034 // EntityImplementation
      end
    end

    artifact 166530 "AnalysisImplementation"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.Serializable;
import java.net.InetAddress;
import java.rmi.RemoteException;
import java.util.List;
import cz.cuni.mff.been.common.DownloadHandle;
import cz.cuni.mff.been.common.DownloadStatus;
import cz.cuni.mff.been.common.UploadHandle;
import cz.cuni.mff.been.common.id.AID;
import cz.cuni.mff.been.logging.LogRecord;
import cz.cuni.mff.been.logging.LogStorageException;
import cz.cuni.mff.been.resultsrepository.gui.DataFormat;
import cz.cuni.mff.been.resultsrepository.gui.Entity;
import cz.cuni.mff.been.resultsrepository.gui.EntityInterface;
import cz.cuni.mff.been.resultsrepository.gui.GraphInfo;
import cz.cuni.mff.been.resultsrepository.gui.GraphType;
${definition}"
      associated_classes
	class_ref 187906 // AnalysisImplementation
      end
    end

    artifact 166658 "BinaryEntityManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.net.UnknownHostException;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import cz.cuni.mff.been.apps.benchmarkmanager.BenchmarkManagerGUIInterface;
import cz.cuni.mff.been.apps.benchmarkmanager.BinaryEntity;
import cz.cuni.mff.been.apps.benchmarkmanager.EntityStatus;
import cz.cuni.mff.been.common.BeenUtils;
import cz.cuni.mff.been.common.DownloadHandle;
import cz.cuni.mff.been.common.UploadHandle;
import cz.cuni.mff.been.common.id.AID;
import cz.cuni.mff.been.common.id.BID;
import cz.cuni.mff.been.common.id.EID;
import cz.cuni.mff.been.resultsrepository.gui.Entity;
import cz.cuni.mff.been.resultsrepository.gui.Statistics;
${definition}"
      associated_classes
	class_ref 188674 // BinaryEntityManager
      end
    end

    artifact 166786 "BinaryImplementation"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.net.InetAddress;
import java.rmi.RemoteException;
import java.util.List;
import cz.cuni.mff.been.common.DownloadHandle;
import cz.cuni.mff.been.common.DownloadStatus;
import cz.cuni.mff.been.common.UploadHandle;
import cz.cuni.mff.been.common.id.AID;
import cz.cuni.mff.been.common.id.BID;
import cz.cuni.mff.been.common.id.EID;
import cz.cuni.mff.been.logging.LogRecord;
import cz.cuni.mff.been.logging.LogStorageException;
import cz.cuni.mff.been.resultsrepository.gui.DataFormat;
import cz.cuni.mff.been.resultsrepository.gui.Entity;
import cz.cuni.mff.been.resultsrepository.gui.EntityInterface;
import cz.cuni.mff.been.resultsrepository.gui.GraphInfo;
import cz.cuni.mff.been.resultsrepository.gui.GraphType;
${definition}"
      associated_classes
	class_ref 189058 // BinaryImplementation
      end
    end

    artifact 166914 "Database"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.Socket;
import java.net.UnknownHostException;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.Semaphore;
import cz.cuni.mff.been.apps.benchmarkmanager.BenchmarkManagerGUIInterface;
import cz.cuni.mff.been.apps.benchmarkmanager.BenchmarkManagerService;
import cz.cuni.mff.been.common.DownloadHandle;
import cz.cuni.mff.been.common.DownloadStatus;
import cz.cuni.mff.been.common.UploadHandle;
import cz.cuni.mff.been.common.UploadStatus;
import cz.cuni.mff.been.common.id.AID;
import cz.cuni.mff.been.common.id.BID;
import cz.cuni.mff.been.common.id.EID;
import cz.cuni.mff.been.common.id.RID;
import cz.cuni.mff.been.logging.FilesystemLogStorage;
import cz.cuni.mff.been.logging.LogStorageException;
import cz.cuni.mff.been.task.Task;
${definition}"
      associated_classes
	class_ref 186242 // Database
      end
    end

    artifact 167042 "ResultsRepositoryException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import cz.cuni.mff.been.common.BeenException;
${definition}"
      associated_classes
	class_ref 186882 // ResultsRepositoryException
      end
    end

    artifact 167170 "DeleteLockedException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 187394 // DeleteLockedException
      end
    end

    artifact 167298 "ExperimentEntityManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.UnknownHostException;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import cz.cuni.mff.been.apps.benchmarkmanager.BenchmarkManagerGUIInterface;
import cz.cuni.mff.been.apps.benchmarkmanager.EntityStatus;
import cz.cuni.mff.been.apps.benchmarkmanager.ExperimentEntity;
import cz.cuni.mff.been.common.BeenUtils;
import cz.cuni.mff.been.common.DownloadHandle;
import cz.cuni.mff.been.common.Pair;
import cz.cuni.mff.been.common.UploadHandle;
import cz.cuni.mff.been.common.id.AID;
import cz.cuni.mff.been.common.id.EID;
import cz.cuni.mff.been.resultsrepository.gui.Entity;
import cz.cuni.mff.been.resultsrepository.gui.GraphInfo;
import cz.cuni.mff.been.resultsrepository.gui.GraphType;
import cz.cuni.mff.been.resultsrepository.gui.Statistics;
${definition}"
      associated_classes
	class_ref 188930 // ExperimentEntityManager
      end
    end

    artifact 167426 "ExperimentImplementation"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.Serializable;
import java.net.InetAddress;
import java.rmi.RemoteException;
import java.util.List;
import cz.cuni.mff.been.common.DownloadHandle;
import cz.cuni.mff.been.common.DownloadStatus;
import cz.cuni.mff.been.common.UploadHandle;
import cz.cuni.mff.been.common.id.AID;
import cz.cuni.mff.been.common.id.EID;
import cz.cuni.mff.been.logging.LogRecord;
import cz.cuni.mff.been.logging.LogStorageException;
import cz.cuni.mff.been.resultsrepository.gui.DataFormat;
import cz.cuni.mff.been.resultsrepository.gui.Entity;
import cz.cuni.mff.been.resultsrepository.gui.EntityInterface;
import cz.cuni.mff.been.resultsrepository.gui.GraphInfo;
import cz.cuni.mff.been.resultsrepository.gui.GraphType;
${definition}"
      associated_classes
	class_ref 190466 // ExperimentImplementation
      end
    end

    artifact 167554 "ExportInterface"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.net.InetAddress;
import cz.cuni.mff.been.common.DownloadHandle;
import cz.cuni.mff.been.common.id.AID;
import cz.cuni.mff.been.common.id.BID;
import cz.cuni.mff.been.common.id.EID;
import cz.cuni.mff.been.common.id.RID;
${definition}"
      associated_classes
	class_ref 190722 // ExportInterface
      end
    end

    artifact 167682 "ExportBEEN"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.InetAddress;
import java.util.zip.ZipOutputStream;
import cz.cuni.mff.been.common.DownloadHandle;
import cz.cuni.mff.been.common.id.AID;
import cz.cuni.mff.been.common.id.BID;
import cz.cuni.mff.been.common.id.EID;
import cz.cuni.mff.been.common.id.RID;
${definition}"
      associated_classes
	class_ref 190594 // ExportBEEN
      end
    end

    artifact 167810 "Exporter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.net.InetAddress;
import cz.cuni.mff.been.common.DownloadHandle;
import cz.cuni.mff.been.common.DownloadStatus;
import cz.cuni.mff.been.common.id.AID;
import cz.cuni.mff.been.common.id.BID;
import cz.cuni.mff.been.common.id.EID;
import cz.cuni.mff.been.common.id.RID;
import cz.cuni.mff.been.hostmanager.InvalidArgumentException;
import cz.cuni.mff.been.resultsrepository.gui.DataFormat;
${definition}"
      associated_classes
	class_ref 188418 // Exporter
      end
    end

    artifact 167938 "FileUploadCallbackInterface"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import cz.cuni.mff.been.common.id.AID;
import cz.cuni.mff.been.common.id.BID;
import cz.cuni.mff.been.common.id.EID;
import cz.cuni.mff.been.common.id.RID;
${definition}"
      associated_classes
	class_ref 190338 // FileUploadCallbackInterface
      end
    end

    artifact 168066 "GraphManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.IOException;
import cz.cuni.mff.been.common.id.AID;
import cz.cuni.mff.been.common.id.BID;
import cz.cuni.mff.been.common.id.EID;
import cz.cuni.mff.been.common.id.RID;
import cz.cuni.mff.been.resultsrepository.gui.GraphInfo;
import cz.cuni.mff.been.resultsrepository.gui.GraphType;
${definition}"
      associated_classes
	class_ref 186626 // GraphManager
      end
    end

    artifact 168194 "ImportInterface"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.net.InetAddress;
import cz.cuni.mff.been.common.UploadHandle;
${definition}"
      associated_classes
	class_ref 191106 // ImportInterface
      end
    end

    artifact 168322 "ImportDumb"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.IOException;
import java.net.InetAddress;
import cz.cuni.mff.been.common.UploadHandle;
${definition}"
      associated_classes
	class_ref 190978 // ImportDumb
      end
    end

    artifact 168450 "Importer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.net.InetAddress;
import cz.cuni.mff.been.common.UploadHandle;
import cz.cuni.mff.been.common.UploadStatus;
import cz.cuni.mff.been.resultsrepository.gui.DataFormat;
${definition}"
      associated_classes
	class_ref 188546 // Importer
      end
    end

    artifact 168578 "LoadCollector"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.IOException;
import java.net.UnknownHostException;
import java.rmi.RemoteException;
import cz.cuni.mff.been.common.UploadHandle;
import cz.cuni.mff.been.common.id.AID;
import cz.cuni.mff.been.common.id.BID;
import cz.cuni.mff.been.common.id.EID;
import cz.cuni.mff.been.common.id.RID;
${definition}"
      associated_classes
	class_ref 189314 // LoadCollector
      end
    end

    artifact 168706 "LockManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.IOException;
import cz.cuni.mff.been.common.id.AID;
import cz.cuni.mff.been.common.id.BID;
import cz.cuni.mff.been.common.id.EID;
${definition}"
      associated_classes
	class_ref 189826 // LockManager
      end
    end

    artifact 168834 "LogCollector"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.rmi.RemoteException;
import cz.cuni.mff.been.common.id.AID;
import cz.cuni.mff.been.common.id.EID;
import cz.cuni.mff.been.hostruntime.TasksPortInterface;
import cz.cuni.mff.been.logging.FilesystemLogStorage;
import cz.cuni.mff.been.logging.LogRecord;
import cz.cuni.mff.been.logging.LogStorageException;
import cz.cuni.mff.been.task.Task;
${definition}"
      associated_classes
	class_ref 189442 // LogCollector
      end
    end

    artifact 168962 "Logger"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import cz.cuni.mff.been.task.Task;
${definition}"
      associated_classes
	class_ref 191234 // Logger
      end
    end

    artifact 169090 "Metadata"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import cz.cuni.mff.been.resultsrepository.gui.MetadataItem;
${definition}"
      associated_classes
	class_ref 187266 // Metadata
      end
    end

    artifact 169218 "MetadataManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.IOException;
import cz.cuni.mff.been.common.id.AID;
import cz.cuni.mff.been.common.id.BID;
import cz.cuni.mff.been.common.id.EID;
${definition}"
      associated_classes
	class_ref 186370 // MetadataManager
      end
    end

    artifact 169346 "MetadataRef"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 187138 // MetadataRef
      end
    end

    artifact 169474 "NumberedItem"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 191490 // NumberedItem
      end
    end

    artifact 169602 "NumberedTable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 190850 // NumberedTable
      end
    end

    artifact 169730 "RBackgroundThread"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 191618 // RBackgroundThread
      end
    end

    artifact 169858 "RCallbackEntity"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 191746 // RCallbackEntity
      end
    end

    artifact 169986 "RCallbacksManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import cz.cuni.mff.been.common.id.AID;
import cz.cuni.mff.been.common.id.EID;
import cz.cuni.mff.been.resultsrepository.gui.CallbackRScripts;
${definition}"
      associated_classes
	class_ref 191874 // RCallbacksManager
      end
    end

    artifact 170114 "RCallbacksManagerFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import cz.cuni.mff.been.common.id.AID;
import cz.cuni.mff.been.common.id.EID;
${definition}"
      associated_classes
	class_ref 192002 // RCallbacksManagerFactory
      end
    end

    artifact 170242 "ResultsRepositoryBusyException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 187522 // ResultsRepositoryBusyException
      end
    end

    artifact 170370 "ResultsRepositoryDebugInterface"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.rmi.Remote;
import java.rmi.RemoteException;
import cz.cuni.mff.been.common.id.AID;
import cz.cuni.mff.been.common.id.BID;
import cz.cuni.mff.been.common.id.EID;
import cz.cuni.mff.been.common.id.RID;
${definition}"
      associated_classes
	class_ref 192258 // ResultsRepositoryDebugInterface
      end
    end

    artifact 170498 "ResultsRepositoryInterface"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.net.UnknownHostException;
import java.rmi.Remote;
import java.rmi.RemoteException;
import java.util.ArrayList;
import cz.cuni.mff.been.apps.benchmarkmanager.AnalysisEntity;
import cz.cuni.mff.been.apps.benchmarkmanager.BinaryEntity;
import cz.cuni.mff.been.apps.benchmarkmanager.ExperimentEntity;
import cz.cuni.mff.been.common.UploadHandle;
import cz.cuni.mff.been.common.UploadStatus;
import cz.cuni.mff.been.common.id.AID;
import cz.cuni.mff.been.common.id.BID;
import cz.cuni.mff.been.common.id.EID;
import cz.cuni.mff.been.common.id.RID;
import cz.cuni.mff.been.resultsrepository.gui.CallbackRScripts;
${definition}"
      associated_classes
	class_ref 142722 // ResultsRepositoryInterface
      end
    end

    artifact 170754 "ResultsRepositoryImplementation"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import cz.cuni.mff.been.apps.benchmarkmanager.AnalysisEntity;
import cz.cuni.mff.been.apps.benchmarkmanager.BinaryEntity;
import cz.cuni.mff.been.apps.benchmarkmanager.ExperimentEntity;
import cz.cuni.mff.been.common.UploadHandle;
import cz.cuni.mff.been.common.UploadStatus;
import cz.cuni.mff.been.common.id.AID;
import cz.cuni.mff.been.common.id.BID;
import cz.cuni.mff.been.common.id.EID;
import cz.cuni.mff.been.common.id.RID;
import cz.cuni.mff.been.resultsrepository.gui.CallbackRScripts;
import cz.cuni.mff.been.resultsrepository.gui.EntityInterface;
import cz.cuni.mff.been.resultsrepository.gui.RFunctionHelp;
import cz.cuni.mff.been.resultsrepository.gui.RScriptPackage;
${definition}"
      associated_classes
	class_ref 192386 // ResultsRepositoryImplementation
      end
    end

    artifact 170882 "ResultsRepositoryService"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.IOException;
import cz.cuni.mff.been.task.Service;
import cz.cuni.mff.been.task.Task;
import cz.cuni.mff.been.task.TaskException;
import cz.cuni.mff.been.task.TaskInitializationException;
${definition}"
      associated_classes
	class_ref 192898 // ResultsRepositoryService
      end
    end

    artifact 171010 "RHelpManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FilenameFilter;
import java.io.IOException;
import java.util.ArrayList;
import cz.cuni.mff.been.resultsrepository.gui.RFunctionHelp;
${definition}"
      associated_classes
	class_ref 193026 // RHelpManager
      end
    end

    artifact 171138 "RManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FilenameFilter;
import java.io.IOException;
import java.net.UnknownHostException;
import java.util.ArrayList;
import org.omegahat.R.Java.REvaluator;
import org.omegahat.R.Java.ROmegahatInterpreter;
import cz.cuni.mff.been.common.UploadHandle;
import cz.cuni.mff.been.common.id.AID;
import cz.cuni.mff.been.common.id.EID;
import cz.cuni.mff.been.resultsrepository.gui.CallbackRScripts;
import cz.cuni.mff.been.resultsrepository.gui.RFunctionHelp;
import cz.cuni.mff.been.resultsrepository.gui.RScriptPackage;
${definition}"
      associated_classes
	class_ref 189698 // RManager
      end
    end

    artifact 171266 "RoleItem"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 193154 // RoleItem
      end
    end

    artifact 171394 "RoleList"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 193282 // RoleList
      end
    end

    artifact 171522 "RolesManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import cz.cuni.mff.been.common.id.AID;
import cz.cuni.mff.been.common.id.EID;
${definition}"
      associated_classes
	class_ref 189570 // RolesManager
      end
    end

    artifact 171650 "RPackageUploadException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 193410 // RPackageUploadException
      end
    end

    artifact 171778 "RREvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import cz.cuni.mff.been.common.id.AID;
import cz.cuni.mff.been.common.id.BID;
import cz.cuni.mff.been.common.id.EID;
import cz.cuni.mff.been.common.id.RID;
${definition}"
      associated_classes
	class_ref 193538 // RREvent
      end
    end

    artifact 171906 "RRIDItem"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import cz.cuni.mff.been.common.id.RID;
${definition}"
      associated_classes
	class_ref 193666 // RRIDItem
      end
    end

    artifact 172034 "RRIDTable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import cz.cuni.mff.been.common.id.RID;
${definition}"
      associated_classes
	class_ref 193794 // RRIDTable
      end
    end

    artifact 172162 "RScriptsRunner"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.LinkedList;
import java.util.Queue;
import java.util.concurrent.Semaphore;
import cz.cuni.mff.been.common.id.AID;
import cz.cuni.mff.been.common.id.BID;
import cz.cuni.mff.been.common.id.EID;
import cz.cuni.mff.been.common.id.RID;
${definition}"
      associated_classes
	class_ref 186754 // RScriptsRunner
      end
    end

    artifact 172290 "RunEntityManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.net.UnknownHostException;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.List;
import cz.cuni.mff.been.apps.benchmarkmanager.BenchmarkManagerGUIInterface;
import cz.cuni.mff.been.common.UploadHandle;
import cz.cuni.mff.been.common.id.AID;
import cz.cuni.mff.been.common.id.BID;
import cz.cuni.mff.been.common.id.EID;
import cz.cuni.mff.been.common.id.RID;
import cz.cuni.mff.been.resultsrepository.gui.Entity;
import cz.cuni.mff.been.resultsrepository.gui.GraphInfo;
import cz.cuni.mff.been.resultsrepository.gui.Statistics;
import cz.cuni.mff.been.taskmanager.TaskDescriptor;
${definition}"
      associated_classes
	class_ref 189954 // RunEntityManager
      end
    end

    artifact 172418 "RunImplementation"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.IOException;
import java.io.Serializable;
import java.net.InetAddress;
import java.rmi.RemoteException;
import java.util.List;
import cz.cuni.mff.been.common.DownloadHandle;
import cz.cuni.mff.been.common.DownloadStatus;
import cz.cuni.mff.been.common.UploadHandle;
import cz.cuni.mff.been.common.id.AID;
import cz.cuni.mff.been.common.id.BID;
import cz.cuni.mff.been.common.id.EID;
import cz.cuni.mff.been.common.id.RID;
import cz.cuni.mff.been.logging.LogRecord;
import cz.cuni.mff.been.logging.LogStorageException;
import cz.cuni.mff.been.resultsrepository.gui.DataFormat;
import cz.cuni.mff.been.resultsrepository.gui.Entity;
import cz.cuni.mff.been.resultsrepository.gui.EntityInterface;
import cz.cuni.mff.been.resultsrepository.gui.GraphInfo;
import cz.cuni.mff.been.resultsrepository.gui.GraphType;
${definition}"
      associated_classes
	class_ref 193922 // RunImplementation
      end
    end

    artifact 172546 "RunUploadCallback"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import cz.cuni.mff.been.common.id.AID;
import cz.cuni.mff.been.common.id.BID;
import cz.cuni.mff.been.common.id.EID;
import cz.cuni.mff.been.common.id.RID;
${definition}"
      associated_classes
	class_ref 194050 // RunUploadCallback
      end
    end

    artifact 172674 "RunValidityMapsManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import cz.cuni.mff.been.common.id.AID;
import cz.cuni.mff.been.common.id.BID;
import cz.cuni.mff.been.common.id.EID;
import cz.cuni.mff.been.common.id.RID;
${definition}"
      associated_classes
	class_ref 189186 // RunValidityMapsManager
      end
    end

    artifact 172802 "StatisticsManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import cz.cuni.mff.been.common.id.AID;
import cz.cuni.mff.been.common.id.BID;
import cz.cuni.mff.been.common.id.EID;
import cz.cuni.mff.been.common.id.RID;
import cz.cuni.mff.been.resultsrepository.gui.Statistics;
${definition}"
      associated_classes
	class_ref 186498 // StatisticsManager
      end
    end

    artifact 172930 "TaskListManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import cz.cuni.mff.been.common.id.AID;
import cz.cuni.mff.been.common.id.BID;
import cz.cuni.mff.been.common.id.EID;
import cz.cuni.mff.been.common.id.RID;
${definition}"
      associated_classes
	class_ref 188802 // TaskListManager
      end
    end

    artifact 173058 "Zipper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Enumeration;
import java.util.zip.ZipEntry;
import java.util.zip.ZipFile;
import java.util.zip.ZipOutputStream;
${definition}"
      associated_classes
	class_ref 194306 // Zipper
      end
    end
  end

  package_ref 133890 // api

  package_ref 134018 // test
end
