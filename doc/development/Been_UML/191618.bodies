class RBackgroundThread
!!!557186.java!!!	execNextScript(in scriptCall : String) : void
	    
		RManager rManager;
		
		rManager = RManager.getInstance();
		
	    boolean rScripting = rManager.rScriptingEnabled();
	    
	    Logger.logDebug(
		    (rScripting ? "Running R function: " : "Would run R function:") 
		    + scriptCall);				

	    /* Call evaluating R function */
		try {
			if (rScripting) {
				RManager.executeRCommand("write(try(" + scriptCall.trim() + ", silent = TRUE), file=stderr())");
			}						
		} catch (Exception e) {
			Logger.logError("Exception when executing R:" 
					+ scriptCall + ", printing stackstrace.");
			e.printStackTrace();
		}
		
		RScriptsRunner.getInstance().clearActualEventRecord();

		Logger.logTrace(scriptCall + " finished.");	    
!!!557314.java!!!	execNextCallback(inout callbackInterface : FileUploadCallbackInterface, inout callbackData : Object) : void
		
		Logger.logTrace("Running callback.");

		if (callbackInterface != null) {
			callbackInterface.callbackFunction(callbackData);
		} else {
			Logger.logError("Null function scheduled");
		}
		
		RScriptsRunner.getInstance().clearActualEventRecord();

!!!557442.java!!!	run() : void
	    while (RScriptsRunner.getInstance().getRunBackroundThread()) {
			try {
				Logger.logTrace("Calling semahore acquire...");
			    RScriptsRunner.scriptsSemaphore.acquire();
			} catch (InterruptedException e) {
			    Logger.logError("Error acquiring semaphore - interrupted : " 
			    		+ e.getMessage() + ".");
			}
			RREvent functionToRun = RScriptsRunner.getInstance().getNextEventFromQueue();			
			if (functionToRun != null) {
				Logger.logTrace(RScriptsRunner.getInstance().getEventCount() 
						+ " more events in the queue.");
				if (functionToRun.getIsScript()) {
					execNextScript(functionToRun.getScriptToRun());
				} else {
					execNextCallback(functionToRun.getCallbackInterface(), 
							functionToRun.getCallbackData());
				}
			} else {
				Logger.logWarning("\"null\" event scheduled to execute by R.");
			}
	    }	
