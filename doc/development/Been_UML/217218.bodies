class MatchesConditionTest
!!!821762.java!!!	testLongWithUnitParse() : void
		assertEquals(
			new MatchesCondition<LongWithUnit>("a", new LongWithUnit(42, 'k', "Hz")),
			ParserWrapper.parseString("a =~ 42kHz")
		);
!!!821890.java!!!	testStringParse() : void
		assertEquals(
			new MatchesCondition<String>("a", "42"),
			ParserWrapper.parseString("a =~ \"42\"")
		);
!!!822018.java!!!	testVersionParse() : void
		assertEquals(
			new MatchesCondition<Version>("a", new Version("42")),
			ParserWrapper.parseString("a =~ 42.0")
		);
!!!822146.java!!!	testDateParse() : void
		Calendar calendar = Calendar.getInstance();
		calendar.setTimeZone(TimeZone.getTimeZone("GMT"));
		calendar.set(2006, 4, 17, 23, 30, 42);
		calendar.setTimeInMillis((calendar.getTimeInMillis() / 1000) * 1000);
		assertEquals(
			new MatchesCondition<Date>("a", calendar.getTime()),
			ParserWrapper.parseString("a =~ 2006-05-17T23:30:42Z")
		);
!!!822274.java!!!	testPackageTypeParse() : void
		assertEquals(
			new MatchesCondition<PackageType>("a", PackageType.realValueOf("source")),
			ParserWrapper.parseString("a =~ source")
		);
!!!822402.java!!!	testPatternParse() : void
		/* Pattern class doesn't override equals method, so we have to compare
		 * manually.
		 */
		Condition expected = new MatchesCondition<Pattern>("a",
			Pattern.compile("pattern"));
		Condition actual = ParserWrapper.parseString("a =~ /pattern/");
		
		Pattern expectedPattern = (Pattern) ((SimpleCondition) expected).value;
		Pattern actualPattern = (Pattern) ((SimpleCondition) actual).value;
		
		assertTrue(
			expectedPattern.pattern().equals(actualPattern.pattern())
			&& expectedPattern.flags() == actualPattern.flags()
		);
!!!822530.java!!!	testLongWithUnitLongWithUnit() : void
		try {
			Utils.eval("longProperty =~ 42", context);
			fail();
		} catch (InvalidOperatorException e) {
			/* Eat it. */
		}
!!!822658.java!!!	testLongWithUnitString() : void
		try {
			Utils.eval("longProperty =~ \"42\"", context);
			fail();
		} catch (InvalidOperatorException e) {
			/* Eat it. */
		}
!!!822786.java!!!	testLongWithUnitVersion() : void
		try {
			Utils.eval("longProperty =~ 42.0", context);
			fail();
		} catch (InvalidOperatorException e) {
			/* Eat it. */
		}
!!!822914.java!!!	testLongWithUnitDate() : void
		try {
			Utils.eval("longProperty =~ 2006-05-17T23:30:42.1Z", context);
			fail();
		} catch (InvalidOperatorException e) {
			/* Eat it. */
		}
!!!823042.java!!!	testLongWithUnitPackageType() : void
		try {
			Utils.eval("longProperty =~ source", context);
			fail();
		} catch (InvalidOperatorException e) {
			/* Eat it. */
		}
!!!823170.java!!!	testLongWithUnitPattern() : void
		try {
			Utils.eval("longProperty =~ /pattern/", context);
			fail();
		} catch (InvalidOperatorException e) {
			/* Eat it. */
		}
!!!823298.java!!!	testStringLongWithUnit() : void
		try {
			Utils.eval("stringProperty =~ 42", context);
			fail();
		} catch (InvalidValueTypeException e) {
			/* Eat it. */
		}
!!!823426.java!!!	testStringString() : void
		try {
			Utils.eval("stringProperty =~ \"42\"", context);
			fail();
		} catch (InvalidValueTypeException e) {
			/* Eat it. */
		}
!!!823554.java!!!	testStringVersion() : void
		try {
			Utils.eval("stringProperty =~ 42.0", context);
			fail();
		} catch (InvalidValueTypeException e) {
			/* Eat it. */
		}
!!!823682.java!!!	testStringDate() : void
		try {
			Utils.eval("stringProperty =~ 2006-05-17T23:30:42.1Z", context);
			fail();
		} catch (InvalidValueTypeException e) {
			/* Eat it. */
		}
!!!823810.java!!!	testStringPackageType() : void
		try {
			Utils.eval("stringProperty =~ source", context);
			fail();
		} catch (InvalidValueTypeException e) {
			/* Eat it. */
		}
!!!823938.java!!!	testStringPatternCaseSensitiveTrue() : void
		assertTrue(Utils.eval("stringForPatternProperty =~ /StRiNg/", context));
!!!824066.java!!!	testStringPatternCaseSensitiveFalse1() : void
		assertFalse(Utils.eval("stringForPatternProperty =~ /STRING/", context));
!!!824194.java!!!	testStringPatternCaseSensitiveFalse2() : void
		assertFalse(Utils.eval("stringForPatternProperty =~ /string/", context));
!!!824322.java!!!	testStringPatternCaseSensitiveFalse3() : void
		assertFalse(Utils.eval("stringForPatternProperty =~ /no-match/", context));
!!!824450.java!!!	testStringPatternCaseInsensitiveTrue1() : void
		assertTrue(Utils.eval("stringForPatternProperty =~ /StRiNg/i", context));
!!!824578.java!!!	testStringPatternCaseInsensitiveTrue2() : void
		assertTrue(Utils.eval("stringForPatternProperty =~ /STRING/i", context));
!!!824706.java!!!	testStringPatternCaseInsensitiveTrue3() : void
		assertTrue(Utils.eval("stringForPatternProperty =~ /string/i", context));
!!!824834.java!!!	testStringPatternCaseInsensitiveFalse() : void
		assertFalse(Utils.eval("stringForPatternProperty =~ /no-match/i", context));
!!!824962.java!!!	testVersionLongWithUnit() : void
		try {
			Utils.eval("versionProperty =~ 42", context);
			fail();
		} catch (InvalidOperatorException e) {
			/* Eat it. */
		}
!!!825090.java!!!	testVersionString() : void
		try {
			Utils.eval("versionProperty =~ \"42\"", context);
			fail();
		} catch (InvalidOperatorException e) {
			/* Eat it. */
		}
!!!825218.java!!!	testVersionVersion() : void
		try {
			Utils.eval("versionProperty =~ 42.0", context);
			fail();
		} catch (InvalidOperatorException e) {
			/* Eat it. */
		}
!!!825346.java!!!	testVersionDate() : void
		try {
			Utils.eval("versionProperty =~ 2006-05-17T23:30:42.1Z", context);
			fail();
		} catch (InvalidOperatorException e) {
			/* Eat it. */
		}
!!!825474.java!!!	testVersionPackageType() : void
		try {
			Utils.eval("versionProperty =~ source", context);
			fail();
		} catch (InvalidOperatorException e) {
			/* Eat it. */
		}
!!!825602.java!!!	testVersionPattern() : void
		try {
			Utils.eval("versionProperty =~ /pattern/", context);
			fail();
		} catch (InvalidOperatorException e) {
			/* Eat it. */
		}
!!!825730.java!!!	testDateLongWithUnit() : void
		try {
			Utils.eval("dateProperty =~ 42", context);
			fail();
		} catch (InvalidOperatorException e) {
			/* Eat it. */
		}
!!!825858.java!!!	testDateString() : void
		try {
			Utils.eval("dateProperty =~ \"42\"", context);
			fail();
		} catch (InvalidOperatorException e) {
			/* Eat it. */
		}
!!!825986.java!!!	testDateVersion() : void
		try {
			Utils.eval("dateProperty =~ 42.0", context);
			fail();
		} catch (InvalidOperatorException e) {
			/* Eat it. */
		}
!!!826114.java!!!	testDateDate() : void
		try {
			Utils.eval("dateProperty =~ 2006-05-17T23:30:42.1Z", context);
			fail();
		} catch (InvalidOperatorException e) {
			/* Eat it. */
		}
!!!826242.java!!!	testDatePackageType() : void
		try {
			Utils.eval("dateProperty =~ source", context);
			fail();
		} catch (InvalidOperatorException e) {
			/* Eat it. */
		}
!!!826370.java!!!	testDatePattern() : void
		try {
			Utils.eval("dateProperty =~ /pattern/", context);
			fail();
		} catch (InvalidOperatorException e) {
			/* Eat it. */
		}
!!!826498.java!!!	testPackageTypeLongWithUnit() : void
		try {
			Utils.eval("packageTypeProperty =~ 42", context);
			fail();
		} catch (InvalidOperatorException e) {
			/* Eat it. */
		}
!!!826626.java!!!	testPackageTypeString() : void
		try {
			Utils.eval("packageTypeProperty =~ \"42\"", context);
			fail();
		} catch (InvalidOperatorException e) {
			/* Eat it. */
		}
!!!826754.java!!!	testPackageTypeVersion() : void
		try {
			Utils.eval("packageTypeProperty =~ 42.0", context);
			fail();
		} catch (InvalidOperatorException e) {
			/* Eat it. */
		}
!!!826882.java!!!	testPackageTypeDate() : void
		try {
			Utils.eval("packageTypeProperty =~ 2006-05-17T23:30:42.1Z", context);
			fail();
		} catch (InvalidOperatorException e) {
			/* Eat it. */
		}
!!!827010.java!!!	testPackageTypePackageType() : void
		try {
			Utils.eval("packageTypeProperty =~ source", context);
			fail();
		} catch (InvalidOperatorException e) {
			/* Eat it. */
		}
!!!827138.java!!!	testPackageTypePattern() : void
		try {
			Utils.eval("packageTypeProperty =~ /pattern/", context);
			fail();
		} catch (InvalidOperatorException e) {
			/* Eat it. */
		}
!!!827266.java!!!	testListLongWithUnit() : void
		try {
			Utils.eval("listProperty =~ 42", context);
			fail();
		} catch (InvalidOperatorException e) {
			/* Eat it. */
		}
!!!827394.java!!!	testListStringTrue() : void
		try {
			Utils.eval("listProperty =~ \"42\"", context);
			fail();
		} catch (InvalidOperatorException e) {
			/* Eat it. */
		}
!!!827522.java!!!	testListVersion() : void
		try {
			Utils.eval("listProperty =~ 42.0", context);
			fail();
		} catch (InvalidOperatorException e) {
			/* Eat it. */
		}
!!!827650.java!!!	testListDate() : void
		try {
			Utils.eval("listProperty =~ 2006-05-17T23:30:42.1Z", context);
			fail();
		} catch (InvalidOperatorException e) {
			/* Eat it. */
		}
!!!827778.java!!!	testListPackageType() : void
		try {
			Utils.eval("listProperty =~ source", context);
			fail();
		} catch (InvalidOperatorException e) {
			/* Eat it. */
		}
!!!827906.java!!!	testListPattern() : void
		try {
			Utils.eval("listProperty =~ /pattern/", context);
			fail();
		} catch (InvalidOperatorException e) {
			/* Eat it. */
		}
!!!828034.java!!!	testToString() : void
		assertEquals(
			"a =~ 42",
			ParserWrapper.parseString("a =~ 42").toString()
		);
