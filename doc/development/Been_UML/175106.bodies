class ActivityMonitorCache
!!!396546.java!!!	ActivityMonitorCache()
		
		data = new ConcurrentHashMap< String, CacheElement >();
!!!396674.java!!!	clear() : void
		
		data.clear();
!!!396802.java!!!	isCached(in hostName : String) : boolean
		
		MiscUtils.verifyStringParameterBoth(hostName, "hostName");
		
		return data.contains(hostName);
!!!396930.java!!!	addCacheElement(in hostName : String, inout loadMonitor : LoadMonitorInterface) : void

		MiscUtils.verifyStringParameterBoth(hostName, "hostName");

		data.put(hostName, new CacheElement(hostName, loadMonitor));
!!!397058.java!!!	getCacheElement(in hostName : String) : CacheElement
		
		MiscUtils.verifyStringParameterBoth(hostName, "hostName");
		
		return data.get(hostName);
!!!397186.java!!!	getLoadMonitor(in hostName : String) : LoadMonitorInterface
		
		MiscUtils.verifyStringParameterBoth(hostName, "hostName");
		
		synchronized (data) {
			CacheElement x = data.get(hostName);
			
			if (x != null) {
				return x.getLoadMonitor();
			} else {
				throw new ValueNotFoundException("Host \"" + hostName + "\" is not in cache.");
			}
		}
!!!397314.java!!!	getHostStatus(in hostName : String) : HostStatus
		
		MiscUtils.verifyStringParameterBoth(hostName, "hostName");
		
		synchronized (data) {
			CacheElement x = data.get(hostName);
			
			if (x != null) {
				return x.getStatus();
			} else {
				throw new ValueNotFoundException("Host \"" + hostName + "\" is not in cache.");
			}
		}
!!!397442.java!!!	removeCacheElement(in hostName : String) : CacheElement
		
		MiscUtils.verifyStringParameterBoth(hostName, "hostName");
		
		synchronized (data) {
			CacheElement result = data.get(hostName);
			
			if (result != null) {
				return result;
			} else {
				throw new ValueNotFoundException("Host \"" + hostName + "\" is not in cache.");
			}
		}
!!!397570.java!!!	getLastChangeTime(in hostName : String) : long
		
		MiscUtils.verifyStringParameterBoth(hostName, "hostName");
		
		synchronized (data) {
			CacheElement result = data.get(hostName);
			
			if (result != null) {
				return result.getLastChangeTime();
			} else {
				throw new ValueNotFoundException("Host \"" + hostName + "\" is not in cache.");
			}
		}
!!!397698.java!!!	getHostNameIterator() : Iterator< String >
		
		return data.keySet().iterator();
!!!397826.java!!!	store(inout event : LoadMonitorEvent) : boolean
		
		synchronized (data) {
			CacheElement elem = data.get(event.getHostName());
			
			if (elem == null) {
				// Host is not in cache
				return false;
			}
			
			elem.reportEvent(event);
			
			return true;
		}
