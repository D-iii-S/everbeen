class CreatePackageMetadata
!!!665986.java!!!	CreatePackageMetadata()
		super();
!!!666114.java!!!	init() : void
		packageName = getTaskProperty(PACKAGE_NAME);
		if (packageName != null) {
			logInfo("Package name: " + packageName);
		}
		packageHumanName = getTaskProperty(PACKAGE_HUMAN_NAME);
		if (packageHumanName != null) {
			logInfo("Human readable package name: " + packageHumanName);
		}
		String versionString = null;
		if ((versionString = getTaskProperty(VERSION)) != null) {
			version = new Version(versionString);
			logInfo("Version: " + versionString);
		}
		String typeString = getTaskProperty(TYPE);
		if (typeString != null) {
			logInfo("Type: " + typeString);
			type = PackageType.realValueOf(typeString);
		}
		
		String hwPlatforms = getTaskProperty(HARDWARE_PLATFORMS);
		if (hwPlatforms != null) {
			logInfo("Hardware platforms: " + hwPlatforms);
			hardwarePlatforms = new ArrayList<String>();
			StringTokenizer tokenizer = 
				new StringTokenizer(hwPlatforms, " ");
			while (tokenizer.hasMoreTokens()) {
				hardwarePlatforms.add(tokenizer.nextToken());
			}
		}

		String swPlatforms = getTaskProperty(SOFTWARE_PLATFORMS);
		if (swPlatforms != null) {
			logInfo("Software platforms: " + swPlatforms);
			softwarePlatforms = new ArrayList<String>();
			StringTokenizer tokenizer = 
				new StringTokenizer(swPlatforms, " ");
			while (tokenizer.hasMoreTokens()) {
				softwarePlatforms.add(tokenizer.nextToken());
			}
		}
		
		String binaryId = getTaskProperty(BINARY_IDENTIFIER);
		if (binaryId != null) {
			logInfo("Binary identifier:" + binaryId);
			binaryIdentifier = binaryId;
		}
!!!666242.java!!!	run() : void
		init();
		
		PackageMetadata metadata = new PackageMetadata(
				null,
				0,
				packageName,
				version,
				hardwarePlatforms,
				softwarePlatforms,
				type,
				packageHumanName,
				null,
				null,
				null,
				binaryIdentifier,
				null);
		
		String path = getWorkingDirectory() + File.separator + "metadata.xml";
		try {
			metadata.saveToFile(path);
		} catch (Exception e) {
			throw new TaskException("Cannot save metadata to file: " + path, e);
		}
		
		checkPointReached("finish", "1");
!!!666370.java!!!	checkRequiredProperties() : void
		// all properties are optional
