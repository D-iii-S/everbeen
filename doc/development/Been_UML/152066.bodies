class StringUtils
!!!249730.java!!!	isEmpty(in s : String) : boolean
    	return s == null || s.length() == 0;
!!!249858.java!!!	isTrimedEmpty(in s : String) : boolean
    	return s == null || s.trim().length() == 0;
!!!249986.java!!!	toString(inout value : Object) : String
        return value != null ? value.toString() : "null";
!!!250114.java!!!	toNullString(inout value : Object) : String
        return value != null ? value.toString() : null;
!!!250242.java!!!	toNotNullString(inout value : Object) : String
        return value != null ? value.toString() : "";
!!!250370.java!!!	streamToString(inout is : InputStream) : String
    	try {
    		BufferedReader rd = new BufferedReader(new InputStreamReader(is));
    		StringBuffer sb = new StringBuffer(is.available());
    		while (rd.ready()) {
    			sb.append(rd.readLine());
    		}
    		return sb.toString();
    	} catch (IOException e) {
    		return null;
    	}
!!!250498.java!!!	stripPathSeparator(in path : String) : String
    	
    	// empty string
    	if (isEmpty(path)) {
    		return path;
    	}
    	
    	// unix-style 
    	if (path.charAt(0) == '/') {
    		if (path.length() == 1) {
    			return "";
    		} else {
    			return path.substring(1);
    		}
    	}
    	
    	if (path.charAt(0) == '\\') {
    		if (path.length() == 1) {
    			return "";
    		} else {
    			return path.substring(1);
    		}
    	}
    	
    	// no path separator found
    	return path;
    	
!!!250626.java!!!	firstCharToUpper(in s : String) : String
    	if (isEmpty(s)) {
    		return s;
    	}
    	String rest = s.length() > 1 ? s.substring(1) : "";
    	return Character.toUpperCase(s.charAt(0)) + rest;
!!!250754.java!!!	split(in s : String, in regex : String) : String
		return isEmpty(s) ?  new String[] {} : s.split(regex);
!!!250882.java!!!	quote(in stringToQuote : String) : String
    	return "\"" + stringToQuote + "\"";
