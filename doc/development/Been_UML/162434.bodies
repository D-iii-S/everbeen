class PropertyDescriptionTable
!!!380034.java!!!	PropertyDescriptionTable(in fileName : String)
		
		descriptions = new HashMap< String, PropertyDescription >();

		DocumentBuilder builder = null;

		try {
			builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
		} catch (ParserConfigurationException e) {
			throw new RuntimeException(e);
		}
		
		File input = new File(fileName);
		
		if (!input.exists()) {
			throw new FileNotFoundException("File + \"" + fileName + "\" not found.");
		}
		
		Document document = null;
		
		try {
			document = builder.parse(input);
		} catch (Exception e) {
			throw new InputParseException("Unable to parse description file.", e);
		}
		
		Node descNode = XMLHelper.getSubNodeByName("descriptions", document);
		
		ArrayList< Node > childNodes = XMLHelper.getChildNodesByName("property", descNode);
		
		for (Iterator< Node > it = childNodes.iterator(); it.hasNext(); ) {
			
			PropertyDescription pd = new PropertyDescription(it.next());
			
			descriptions.put(pd.getPropertyPath(), pd);
		}
!!!380162.java!!!	getDescription(in path : String) : PropertyDescription
		
		String typeNamePath = PropertyTreeFactory.extractTypePathFromPath(path);
		
		if (descriptions.containsKey(typeNamePath)) {
			return descriptions.get(typeNamePath);
		} else {
			throw new ValueNotFoundException("No description found for \"" + path + "\".");
		}
!!!380290.java!!!	getAllDescriptions() : PropertyDescription
		
		ArrayList< PropertyDescription > result = new ArrayList< PropertyDescription >();
		
		result.addAll(descriptions.values());
		
		Collections.sort(result, new PropertyDescriptionComparator());
		
		return result;
