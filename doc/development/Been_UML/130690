format 70
"task" // been::src::cz::cuni::mff::been::task
  revision 3
  modified_by 8 "BoRiS"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "cz/cuni/mff/been/task"
  java_package "cz.cuni.mff.been.task"
  classview 129794 "task"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    classdiagram 134274 "task"
      draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A0-Landscape
    end

    class 136578 "Task"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Class representing a Task, which is the entity executed by BEEN

@author Michal Tomcanyi
"
      classrelation 134658 // DEFAULT_LOG_LEVEL (<unidirectional association>)
	relation 134658 --->
	  a role_name "DEFAULT_LOG_LEVEL" init_value "=  LogLevel.INFO" class_relation const_relation public
	    comment "
Default log level.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 134658 // DEFAULT_LOG_LEVEL (<unidirectional association>)
	  b parent class_ref 129666 // LogLevel
      end

      attribute 132994 "PROP_DIR_TASK"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"hostruntime.directory.task\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " ----------------------- CONSTANTS -------------------------------
 Property name: directory with task package's content 
"
      end

      attribute 133122 "PROP_DIR_WORK"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"hostruntime.directory.working\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Property name: working directory of a task, it IS NOT deleted immediately after task's end
"
      end

      attribute 133250 "PROP_DIR_TEMP"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"hostruntime.directory.temporary\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Property name: temporary directory of a task, it IS deleted immediately after task's end 
"
      end

      attribute 133378 "STDOUT_LOG_FORMAT"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"%d %p [%c{1}]  %m\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Logging format 
"
      end

      attribute 133506 "EXIT_CODE_SUCCESS"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Task exit code: success 
"
      end

      attribute 133634 "EXIT_CODE_ERROR"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Task exit code: error 
"
      end

      attribute 133762 "CHECKPOINT_NAME_STARTED"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"task started\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Name of the checkpoint used to signal task start. 
"
      end

      attribute 133890 "CHECKPOINT_NAME_FINISHED"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"task finished\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Name of the checkpoint used to signal task finish. 
"
      end

      classrelation 134786 // taskHandle (<unidirectional association>)
	relation 134786 --->
	  a role_name "taskHandle" init_value "=  null" class_relation private
	    comment " ------------------------ ATTRIBUTES -------------------------------
 Static reference to the current running task.  You can use it e.g. for logging. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 134786 // taskHandle (<unidirectional association>)
	  b parent class_ref 136578 // Task
      end

      classrelation 134914 // tasksPort (<unidirectional association>)
	relation 134914 --->
	  a role_name "tasksPort" init_value "=  null" private
	    comment " Task monitoring and logging facility 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 134914 // tasksPort (<unidirectional association>)
	  b parent class_ref 137090 // TasksPortInterface
      end

      classrelation 135042 // taskDescriptor (<unidirectional association>)
	relation 135042 --->
	  a role_name "taskDescriptor" init_value "=  null" private
	    comment " Task descriptor of this task. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 135042 // taskDescriptor (<unidirectional association>)
	  b parent class_ref 131074 // TaskDescriptor
      end

      attribute 134018 "taskDirectory"
	private explicit_type "String"
	init_value "=  System.getProperty(Task.PROP_DIR_TASK)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Directory specified by Host Runtime which contains the task package's content 
"
      end

      attribute 134146 "workingDirectory"
	private explicit_type "String"
	init_value "=  System.getProperty(Task.PROP_DIR_WORK)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Working directory specified by Host Runtime for this task, it IS NOT deleted
immediately after task's end

"
      end

      attribute 134274 "tempDirectory"
	private explicit_type "String"
	init_value "=  System.getProperty(Task.PROP_DIR_TEMP)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Temporary directory for this task specified by Host Runtime, it IS deleted
immediately after task's end

"
      end

      attribute 134402 "taskProperties"
	private explicit_type "Properties"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Task properties that can be used instead of command line arguments 
"
      end

      attribute 134530 "taskPropertyObjects"
	private explicit_type "String, Serializable"
	stereotype "Map"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Task properties with objects as values. 
"
      end

      attribute 134658 "logger"
	private explicit_type "Logger"
	init_value "=  Logger.getLogger(\"task.\" + this.getClass().getCanonicalName())"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 157826 "Task"
	protected explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 137218 // TaskInitializationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 157954 "getTaskHandle"
	class_operation public return_type class_ref 136578 // Task
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Return a reference to the task which is running this code
@return task, null if the current code isn't executed in a task
"
      end

      operation 158082 "getTasksPort"
	public return_type class_ref 137090 // TasksPortInterface
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the tasksPort
@return the tasksPort
"
      end

      operation 158210 "getWorkingDirectory"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the directory  where task can store its results (permanently)
@return directory name
"
      end

      operation 158338 "getTempDirectory"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the temporary working directory for the task
@return directory name
"
      end

      operation 158466 "getTaskDirectory"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the directory with the task package's content
@return directory name
"
      end

      operation 158594 "setLogLevel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "level" type class_ref 129666 // LogLevel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Sets the log level for logging to stdout
@param level 
"
      end

      operation 158722 "getLogLevel"
	public return_type class_ref 129666 // LogLevel
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return log level for logging to stdout
"
      end

      operation 158850 "logDebug"
	public explicit_return_type "void"
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Logs a message on the DEBUG debug level
@param message
"
      end

      operation 158978 "logError"
	public explicit_return_type "void"
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Logs a message on the ERROR debug level
@param message
"
      end

      operation 159106 "logFatal"
	public explicit_return_type "void"
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Logs a message on the FATAL debug level
@param message
"
      end

      operation 159234 "logInfo"
	public explicit_return_type "void"
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Logs a message on the INFO debug level
@param message
"
      end

      operation 159362 "logTrace"
	public explicit_return_type "void"
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Logs a message on the TRACE debug level
@param message
"
      end

      operation 159490 "logWarning"
	public explicit_return_type "void"
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Logs a message on the WARN debug level
@param message
"
      end

      operation 159618 "getLogger"
	public explicit_return_type "Logger"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Retrieve logger that is used by the task.

@return logger used by the task.
"
      end

      operation 159746 "checkPointReached"
	public explicit_return_type "void"
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "value" explicit_type "Serializable"
	nexceptions 1
	  exception class_ref 137346 // TaskException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Signals that a checkpoint was reached by the task.

@param name name of the checkpoint
@param value value of the checkpoint
@throws TaskException if anything goes wrong.
"
      end

      operation 159874 "checkPointWait"
	public explicit_return_type "Serializable"
	nparams 4
	  param in name "contextID" explicit_type "String"
	  param in name "taskID" explicit_type "String"
	  param in name "name" explicit_type "String"
	  param in name "timeout" explicit_type "long"
	nexceptions 1
	  exception class_ref 137346 // TaskException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Waits until a task reaches a checkpoint of specified type and returns its
value.
       
@param contextID context ID, if null then the context of the calling task
will be used.
@param taskID task ID
@param name checkpoint name
@param timeout number of milliseconds to wait for a checkpoint;
        <code>0</code> means that the call will not block and returns
        immediately
@return value of the checkpoint.
@throws TaskException if anything goes wrong.
"
      end

      operation 160002 "isPropertyNull"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Test if given property is null or not. This can be used to test presence of a property, however cannot be used
in all cases since null may be valid property value.

@param name Name of the property to test.

@return true if property is null, false if property is not null.
"
      end

      operation 160130 "getTaskProperties"
	public explicit_return_type "Properties"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get all properties of the task.

@return all properties of the task.
"
      end

      operation 160258 "getTaskProperty"
	public explicit_return_type "String"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the value of a task's property

@param name name of the task's property
@return value of the task's property or <code>null</code>
if the specified property is not found
"
      end

      operation 160386 "getTaskProperty"
	public explicit_return_type "String"
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "defaultValue" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get value of the Task's property.

@param name Name of the property to retrieve.
@param defaultValue Default value which will be used when property is not set (if it is null).

@return Value of the property of default value.
"
      end

      operation 160514 "getBooleanTaskProperty"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the value of a task property that can have boolean
values, e.g. \"yes\", \"true\" etc.
@param name name of the task property.
@return true if the value of the task property is was \"yes\" or \"true\".
"
      end

      operation 160642 "getTaskPropertyObject"
	public explicit_return_type "Serializable"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@param name name of the task property.
@return the object value of the task property.
"
      end

      operation 160770 "exitSuccess"
	class_operation public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Exits the task which successfully finished.
"
      end

      operation 160898 "exitError"
	class_operation public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Exits the task that finished with an error.

"
      end

      operation 161026 "getTaskDescriptor"
	public return_type class_ref 131074 // TaskDescriptor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return the task descriptor of this task.
"
      end

      operation 161154 "isRunningInWindows"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "

@return true if the task is running in Windows.
"
      end

      operation 161282 "isRunningInLinux"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "

@return true if the task is running in Linux.
"
      end
    end

    class 136962 "Service"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
A task that runs like a service, that means it runs for a long time and
provides some remote interfaces with some functionality.
This task binds one or several remote interfaces in the RMI registry and
in the BEEN's naming service. The service has
a remote control interface which can be used to stop or restart it. 

@author Jaroslav Urban
@author David Majda
"
      classrelation 135170 // <generalisation>
	relation 135170 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 135170 // <generalisation>
	  b parent class_ref 136578 // Task
      end

      attribute 134786 "RMI_BEEN_PREFIX"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"been\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
RMI references to BEENs services are in the form
rmi://hostname:1099/RMI_BEEN_PREFIX/service-name/interface-name

"
      end

      attribute 134914 "RMI_CONTROL_IFACE"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"control\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Name of the ServiceControlInterface interface reference in the RMI URL.

"
      end

      attribute 135042 "RMI_MAIN_IFACE"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"main\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Name of the service's main interface reference in the RMI URL.

"
      end

      attribute 135170 "STATUS_CHECKPOINT"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"service status\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Name of the checkpoint that signals the state of the service.

"
      end

      attribute 135298 "STATUS_STARTING"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"starting\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Value of the {@value #STATUS_CHECKPOINT} checkpoint which
signals that the service is starting.

"
      end

      attribute 135426 "STATUS_RUNNING"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"running\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Value of the {@value #STATUS_CHECKPOINT} checkpoint which
signals that the service is running.

"
      end

      attribute 135554 "STATUS_STOPPING"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"stopping\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Value of the {@value #STATUS_CHECKPOINT} checkpoint which
signals that the service is stopping.

"
      end

      attribute 135682 "STATUS_RESTARTING"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"restarting\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Value of the {@value #STATUS_CHECKPOINT} checkpoint which
signals that the service is restarting.

"
      end

      attribute 135810 "EXIT_DELAY_TIME"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  500"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
The JVM needs to be exited after the service stops. But we can't call the 
System.exit() method in a method that is invoked remotely, because
that would throw an exception on the client's side. Thus, in the stopService 
method we start a Thread that calls System.exit() after this time (in milliseconds).
The method returns before the thread can exit the JVM. 

"
      end

      attribute 135938 "COPY_FILE_BUFFER_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  4096"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Buffer size used in the <code>copyFile</code> method. 
"
      end

      classrelation 135298 // status (<unidirectional association>)
	relation 135298 --->
	  a role_name "status" private
	    comment " Run status of the service *
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 135298 // status (<unidirectional association>)
	  b parent class_ref 137602 // Status
      end

      attribute 136066 "rmiInterfaces"
	private explicit_type "String, Remote"
	init_value "=  new HashMap<String, Remote>()"
	stereotype "HashMap"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
 Remote interfaces of the service
 
 String - rmi reference
 Remote - remote interface bound in rmi

"
      end

      attribute 136194 "interfaceNames"
	private explicit_type "String, String"
	init_value "=  new HashMap<String, String>()"
	stereotype "HashMap"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Interface names

 String - rmi reference
 String - interface name

"
      end

      attribute 136322 "lock"
	private explicit_type "Object"
	init_value "=  new Object()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Lock object that is used to lock stopping/restarting sections

"
      end

      class 137730 "ServiceControlImplementation"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 135426 // <generalisation>
	  relation 135426 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 135426 // <generalisation>
	    b parent class_ref 130178 // UnicastRemoteObject
	end

	classrelation 135682 // <realization>
	  relation 135682 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 135682 // <realization>
	    b parent class_ref 137858 // ServiceControlInterface
	end

	operation 161794 "ServiceControlImplementation"
	  public explicit_return_type ""
	  nparams 0
	  nexceptions 1
	    explicit_exception "RemoteException"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
Allocates a new StatusHandle object

@throws RemoteException
"
	end

	operation 161922 "getStatus"
	  public return_type class_ref 137602 // Status
	  nparams 0
	  nexceptions 1
	    explicit_exception "RemoteException"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
Determines the current status of the service, e.g. if it's running, or if it's
just starting up etc.

@return status of the service
@throws RemoteException 
"
	end

	operation 162050 "stopService"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 3
	    explicit_exception "RemoteException"
	    exception class_ref 137986 // InvalidServiceStateException
	    exception class_ref 137346 // TaskException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
Stops the service, then unbinds it's RMI interfaces and exits the JVM

NOTE Urban: the JVM is exited only while we use the 1 JVM per 1 task model
@throws RemoteException 
@throws InvalidServiceStateException if the service is in such state
	that doesn't allow restarting. For example if it's just starting up. 
@throws TaskException if stopping of the service fails
"
	end

	operation 162178 "ping"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
Does nothing, but can be used to test validity of a remote reference
to the service.
"
	end
      end

      operation 162306 "Service"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 137218 // TaskInitializationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "

Allocates a new <code>Service</code> object.

@throws TaskInitializationException
"
      end

      operation 162434 "getName"
	abstract public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Determines the service's name.

@return service's name
"
      end

      operation 162562 "start"
	abstract protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 137346 // TaskException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Starts the service. That means it performs all the initialization work 
needed for the remote interfaces of the service to function properly.
 
@throws TaskException if starting of the service fails
"
      end

      operation 162690 "stop"
	abstract protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 137346 // TaskException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Stops the service. That means it does all the clean-up needed for a clean
stop of the service.
 
@throws TaskException if stopping of the service fails
"
      end

      operation 162818 "startService"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 137346 // TaskException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Starts the service and then binds it's RMI interfaces. This method should be 
called after creating the services instance in the main method of
a descendant of the Service class.

This is not a part of the remote control interface! Services cannot be 
started by the control interface, they are automatically started when their
task starts.
 
@throws TaskException if starting of the service fails
"
      end

      operation 162946 "getControlInterface"
	public return_type class_ref 137858 // ServiceControlInterface
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get control interface of the service. Used when need to access
control interface of the service for a local instance (not through RMI)

@return Control interface of the service.
"
      end

      operation 163074 "addRemoteInterface"
	protected explicit_return_type "void"
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "iface" explicit_type "Remote"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Adds an interface to the list of this service's implemented
remote interfaces. If an interface with this name was already 
in the list, it will be replaced with the new interface.

@param name name of the interface
@param iface the remote interface
"
      end

      operation 163202 "removeRemoteInterface"
	protected explicit_return_type "void"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Removes an interface from the list of this service's implemented
remote interfaces

@param name
"
      end

      operation 163330 "exitSuccessDelayed"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Exits the service that finished successfully. It exits after a short
delay, so a service's remote method can return correctly. 

"
      end

      operation 163458 "exitErrorDelayed"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Exits the service that finished with an error. It exits after a short
delay, so a service's remote method can return correctly. 

"
      end

      operation 163586 "exitDelayed"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "success" explicit_type "boolean"
	  param in name "time" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Exits the task's JVM

@param success if <code>true</code>, then exits with a success return value,
otherwise exists with an error return value. 
@param time time in milliseconds after which the service will exit
"
      end

      operation 163714 "bindInterfaces"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Binds the service's remote interface to the rmiregistry and the lookup
service
"
      end

      operation 163842 "unbindInterfaces"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Unbinds the service's remote interfaces from the rmiregistry and the lookup
service 
"
      end

      operation 163970 "bindError"
	private return_type class_ref 137346 // TaskException
	nparams 1
	  param inout name "e" explicit_type "Exception"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Reacts to an error that occurred during service registration or 
unregistration from the naming service

@param e exception that was thrown by the error, the exception should
contain a user readable error message because the message will be logged
@return a new TaskException that should be thrown to the user
"
      end

      operation 164098 "stateChangeError"
	private explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 137346 // TaskException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Reacts to an error that occurred during change of state of the service, 
e.g. during starting
 
@param e exception that was thrown by the error
"
      end

      operation 164226 "copyFile"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "src" explicit_type "File"
	  param inout name "dest" explicit_type "File"
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Helper method to copy a file.

@param src source file
@param dest destination file
@throws IOException if some I/O operation fails
"
      end

      operation 164354 "copyDirectoryContentsRecursive"
	private explicit_return_type "void"
	nparams 2
	  param inout name "srcDir" explicit_type "File"
	  param inout name "destDir" explicit_type "File"
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Copy directory contents to another directory. Function is recursive and
will not create the destination directory.

@param srcDir source directory
@param destDir destination directory
@throws IOException if some I/O operation fails
"
      end

      operation 164482 "tryCopyExampleData"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Copies example data (if it exists) to the working directory.

The example data files are copied from two places:

<ol>
  <li><tt>data</tt> sub-directory of the task directory</li> 
  <li><tt>$BEEN_HOME/data/<em>serviceName</em></tt> directory</li>
</ol> 

@throws IOException if some I/O operation fails
"
      end

      operation 164610 "tryCopyExampleData"
	protected explicit_return_type "void"
	nparams 1
	  param in name "targetDir" explicit_type "String"
	nexceptions 1
	  explicit_exception "IOException"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Copy example data (if present) from the task's directory to the specified sub-directory
of the working directory of the task. Source is assumed to be in the <tt>data</tt>
sub-directory of the task's directory.

@param targetDir Name of the target directory. This name is relative to the task's working
       directory.
       
@throws IOException If I/O error occurred during file transfer. 
"
      end
    end

    class 197250 "Job"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
A task representing a job. This kind of task does some work, and then ends.

@author Jaroslav Urban
"
      classrelation 253826 // <generalisation>
	relation 253826 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 253826 // <generalisation>
	  b parent class_ref 136578 // Task
      end

      operation 626178 "Job"
	protected explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 137218 // TaskInitializationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>Job</code> object.

@throws TaskInitializationException
"
      end

      operation 626306 "run"
	abstract protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 137346 // TaskException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Does the job's work, the task ends when this method returns.

@throws TaskException if the Job failed to do its work.
"
      end

      operation 626434 "runJob"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 137346 // TaskException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Checks required job properties, starts job afterwards.
When the work is done exits the JVM

NOTE Urban: it exits the JVM only while we use the 1 JVM per 1 task model 
@throws TaskException if the Job failed to do its work.
"
      end

      operation 626562 "checkRequiredProperties"
	protected explicit_return_type "void"
	nparams 1
	  param in name "requiredProperties" explicit_type "String"
	nexceptions 1
	  exception class_ref 137346 // TaskException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Checks if all properties from <code>requiredProperties</code>
are set (not <code>null</code>) 
@param requiredProperties list of properties to check
@throws TaskException when any of required properties is not set
"
      end

      operation 626690 "checkRequiredProperty"
	protected explicit_return_type "void"
	nparams 1
	  param in name "property" explicit_type "String"
	nexceptions 1
	  exception class_ref 137346 // TaskException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Check if required property is present.

@param property name of the property to test.

@throws TaskException if the property is not present (set to null).
"
      end

      operation 626818 "checkRequiredProperties"
	abstract protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 137346 // TaskException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Checks if all required properties are present. This method is called automatically before
the Job is started and has to be implemented by the Job.

@throws TaskException if some of the required properties are not set. All properties are 
        reported in one go in the message.
"
      end
    end

    class 137858 "ServiceControlInterface"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Interface used to remotely control a service task.

@author Jaroslav Urban
"
      classrelation 135554 // <generalisation>
	relation 135554 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 135554 // <generalisation>
	  b parent class_ref 130818 // Remote
      end

      operation 161410 "stopService"
	public explicit_return_type "void"
	nparams 0
	nexceptions 3
	  explicit_exception "RemoteException"
	  exception class_ref 137986 // InvalidServiceStateException
	  exception class_ref 137346 // TaskException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Stops the service

@throws RemoteException
@throws InvalidServiceStateException if the service is in such state
	that doesn't allow restarting. For example if it's just starting up. 
@throws TaskException if starting of the service fails
"
      end

      operation 161538 "getStatus"
	public return_type class_ref 137602 // Status
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Determines the service's status

@return service's status
@throws RemoteException
"
      end

      operation 161666 "ping"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "RemoteException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Does nothing, but it can be used to test whether a remote reference 
is valid (that is whether it still references a valid remote object).

@throws RemoteException
"
      end
    end

    class 137218 "TaskInitializationException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Thrown when a task cannot initialize itself.

@author Jaroslav Urban
"
      classrelation 253954 // <generalisation>
	relation 253954 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 253954 // <generalisation>
	  b parent class_ref 128130 // BeenException
      end

      operation 626946 "TaskInitializationException"
	public explicit_return_type ""
	nparams 1
	  param inout name "e" explicit_type "Exception"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "

Allocates a new <code>TaskInitializationException</code> object.

@param e cause of the error.
"
      end

      operation 627074 "TaskInitializationException"
	public explicit_return_type ""
	nparams 1
	  param in name "errorMessage" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "

Allocates a new <code>TaskInitializationException</code> object.

@param errorMessage error message.
"
      end
    end

    class 137346 "TaskException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Base class for all user exceptions thrown by tasks.

@author Antonin Tomecek
@author David Majda
"
      classrelation 253570 // <generalisation>
	relation 253570 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 253570 // <generalisation>
	  b parent class_ref 128130 // BeenException
      end

      operation 625154 "TaskException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>HostRuntimeException</code> object.
"
      end

      operation 625282 "TaskException"
	public explicit_return_type ""
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>HostRuntimeException</code> object
with specified message.

@param message exception message
"
      end

      operation 625410 "TaskException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" explicit_type "Throwable"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>HostRuntimeException</code> object
with specified cause.

@param cause exception cause
"
      end

      operation 625538 "TaskException"
	public explicit_return_type ""
	nparams 2
	  param in name "message" explicit_type "String"
	  param inout name "cause" explicit_type "Throwable"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>SoftwareRepositoryException</code> object
with specified message and cause.

@param message exception message
@param cause exception cause
"
      end
    end

    class 137986 "InvalidServiceStateException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Service is in a state that doesn't allow some requested operation.

@author Jaroslav Urban
"
      classrelation 253698 // <generalisation>
	relation 253698 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 253698 // <generalisation>
	  b parent class_ref 137346 // TaskException
      end

      operation 625666 "InvalidServiceStateException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>InvalidServiceStateException</code> object.
"
      end

      operation 625794 "InvalidServiceStateException"
	public explicit_return_type ""
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>InvalidServiceStateException</code> object
with specified message.

@param message exception message
"
      end

      operation 625922 "InvalidServiceStateException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" explicit_type "Throwable"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>InvalidServiceStateException</code> object
with specified cause.

@param cause exception cause
"
      end

      operation 626050 "InvalidServiceStateException"
	public explicit_return_type ""
	nparams 2
	  param in name "message" explicit_type "String"
	  param inout name "cause" explicit_type "Throwable"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allocates a new <code>InvalidServiceStateException</code> object
with specified message and cause.

@param message exception message
@param cause exception cause
"
      end
    end

    class 193800 "JythonScriptJob"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>
Executes Jython script using JythonInterpreter.
</p>

@author Jan Tattermusch"
      classrelation 239112 // <generalisation>
	relation 239112 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 239112 // <generalisation>
	  b parent class_ref 197250 // Job
      end

      attribute 282632 "scriptFileName"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 282760 "JYTHON_TASK_CONTEXT_NAME"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"TASK\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Name of the context variable which will be injected in the script's
namespace "
      end

      attribute 282888 "SCRIPT_PROPERTY_NAME"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"SCRIPT\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "property containing the script to execute 
"
      end

      attribute 283016 "JYTHON_CACHEDIR_NAME"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"jython_cachedir\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "jython cachedir 
"
      end

      operation 536712 "JythonScriptJob"
	public explicit_return_type ""
	nparams 1
	  param in name "scriptFileName" explicit_type "String"
	nexceptions 1
	  exception class_ref 137218 // TaskInitializationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new <code>JythonScript</code> object.

@throws TaskInitializationException"
      end

      operation 536840 "JythonScriptJob"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 137218 // TaskInitializationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new <code>JythonScript</code> object.

@throws TaskInitializationException"
      end

      operation 536968 "checkRequiredProperties"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 137346 // TaskException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 537096 "run"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 137346 // TaskException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 193928 "JythonTaskContext"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Represents task context for Python script. Acts as an adapter to task's interface.</p>

At the time, the adapter only forwards request to the associated task class.

@author Jan Tattermusch"
      operation 537224 "JythonTaskContext"
	public explicit_return_type ""
	nparams 1
	  param inout name "task" type class_ref 136578 // Task
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new adapter object for given task
@param task the adapted task object"
      end

      classrelation 239240 // task (<unidirectional association>)
	relation 239240 --->
	  a role_name "task" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 239240 // task (<unidirectional association>)
	  b parent class_ref 136578 // Task
      end

      operation 537352 "getTasksPort"
	public return_type class_ref 137090 // TasksPortInterface
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the tasksPort
@return the tasksPort"
      end

      operation 537480 "getWorkingDirectory"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the directory  where task can store its results (permanently)
@return directory name"
      end

      operation 537608 "getTempDirectory"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the temporary working directory for the task
@return directory name"
      end

      operation 537736 "getTaskDirectory"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the directory with the task package's content
@return directory name"
      end

      operation 537864 "setLogLevel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "level" type class_ref 129666 // LogLevel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the log level for logging to stdout
@param level "
      end

      operation 537992 "getLogLevel"
	public return_type class_ref 129666 // LogLevel
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return log level for logging to stdout"
      end

      operation 538120 "logDebug"
	public explicit_return_type "void"
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Logs a message on the DEBUG debug level
@param message"
      end

      operation 538248 "logError"
	public explicit_return_type "void"
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Logs a message on the ERROR debug level
@param message"
      end

      operation 538376 "logFatal"
	public explicit_return_type "void"
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Logs a message on the FATAL debug level
@param message"
      end

      operation 538504 "logInfo"
	public explicit_return_type "void"
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Logs a message on the INFO debug level
@param message"
      end

      operation 538632 "logTrace"
	public explicit_return_type "void"
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Logs a message on the TRACE debug level
@param message"
      end

      operation 538760 "logWarning"
	public explicit_return_type "void"
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Logs a message on the WARN debug level
@param message"
      end

      operation 538888 "getLogger"
	public explicit_return_type "Logger"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve logger that is used by the task.

@return logger used by the task."
      end

      operation 539016 "checkPointReached"
	public explicit_return_type "void"
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "value" type class_ref 148226 // Serializable
	nexceptions 1
	  exception class_ref 137346 // TaskException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Signals that a checkpoint was reached by the task.

@param name name of the checkpoint
@param value value of the checkpoint
@throws TaskException if anything goes wrong."
      end

      operation 539144 "checkPointWait"
	public return_type class_ref 148226 // Serializable
	nparams 4
	  param in name "contextID" explicit_type "String"
	  param in name "taskID" explicit_type "String"
	  param in name "name" explicit_type "String"
	  param in name "timeout" explicit_type "long"
	nexceptions 1
	  exception class_ref 137346 // TaskException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Waits until a task reaches a checkpoint of specified type and returns its
value.
       
@param contextID context ID, if null then the context of the calling task
will be used.
@param taskID task ID
@param name checkpoint name
@param timeout number of milliseconds to wait for a checkpoint;
        <code>0</code> means that the call will not block and returns
        immediately
@return value of the checkpoint.
@throws TaskException if anything goes wrong."
      end

      operation 539272 "isPropertyNull"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Test if given property is null or not. This can be used to test presence of a property, however cannot be used
in all cases since null may be valid property value.

@param name Name of the property to test.

@return true if property is null, false if property is not null."
      end

      operation 539400 "getTaskProperties"
	public explicit_return_type "Properties"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get all properties of the task.

@return all properties of the task."
      end

      operation 539528 "getTaskProperty"
	public explicit_return_type "String"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of a task's property

@param name name of the task's property
@return value of the task's property or <code>null</code>
if the specified property is not found"
      end

      operation 539656 "getTaskProperty"
	public explicit_return_type "String"
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "defaultValue" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get value of the Task's property.

@param name Name of the property to retrieve.
@param defaultValue Default value which will be used when property is not set (if it is null).

@return Value of the property of default value."
      end

      operation 539784 "getBooleanTaskProperty"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of a task property that can have boolean
values, e.g. \"yes\", \"true\" etc.
@param name name of the task property.
@return true if the value of the task property is was \"yes\" or \"true\"."
      end

      operation 539912 "getTaskPropertyObject"
	public return_type class_ref 148226 // Serializable
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param name name of the task property.
@return the object value of the task property."
      end

      operation 540040 "exitSuccess"
	class_operation public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Exits the task which successfully finished."
      end

      operation 540168 "exitError"
	class_operation public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Exits the task that finished with an error.
"
      end

      operation 540296 "getTaskDescriptor"
	public return_type class_ref 129544 // TaskDescriptor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the task descriptor of this task."
      end

      operation 540424 "isRunningInWindows"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return true if the task is running in Windows."
      end

      operation 540552 "isRunningInLinux"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@return true if the task is running in Linux."
      end
    end

    class 194056 "ShellScriptJob"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>
Executes shell script.
</p>

@author Jan Tattermusch"
      classrelation 239368 // <generalisation>
	relation 239368 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 239368 // <generalisation>
	  b parent class_ref 197250 // Job
      end

      attribute 283144 "scriptFileName"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 283272 "SCRIPT_PROPERTY_NAME"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"SCRIPT\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "property containing the script to execute 
"
      end

      operation 540680 "ShellScriptJob"
	public explicit_return_type ""
	nparams 1
	  param in name "scriptFileName" explicit_type "String"
	nexceptions 1
	  exception class_ref 137218 // TaskInitializationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new <code>ShellScriptJob</code> object.

@throws TaskInitializationException"
      end

      operation 540808 "ShellScriptJob"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 137218 // TaskInitializationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new <code>ShellScriptJob</code> object.

@throws TaskInitializationException"
      end

      operation 540936 "checkRequiredProperties"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 137346 // TaskException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 541064 "run"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 137346 // TaskException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Runs shell script.

While script is running, task directories' path can be obtained 
from environment variables \"WORKING_DIR\", \"TEMP_DIR\" and \"TASK_DIR\".

Script's home directory is set to task's working dir by default."
      end

      operation 541192 "getScriptLines"
	private explicit_return_type "String"
	nparams 1
	  param in name "scriptString" explicit_type "String"
	nexceptions 1
	  exception class_ref 137346 // TaskException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 128770 "task"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 130690 "Task"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.rmi.Naming;
import java.rmi.RemoteException;
import java.util.Map;
import java.util.Properties;
import org.apache.log4j.Logger;
import cz.cuni.mff.been.hostruntime.TasksPortInterface;
import cz.cuni.mff.been.logging.HostRuntimeAppender;
import cz.cuni.mff.been.logging.LogLevel;
import cz.cuni.mff.been.taskmanager.TaskDescriptor;
${definition}"
      associated_classes
	class_ref 136578 // Task
      end
    end

    artifact 130818 "ServiceControlInterface"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.rmi.Remote;
import java.rmi.RemoteException;
import cz.cuni.mff.been.webinterface.services.ServiceInfo.Status;
${definition}"
      associated_classes
	class_ref 137858 // ServiceControlInterface
      end
    end

    artifact 130946 "Service"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.URI;
import java.rmi.Naming;
import java.rmi.Remote;
import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;
import java.util.HashMap;
import cz.cuni.mff.been.hostruntime.TasksPortInterface;
import cz.cuni.mff.been.taskmanager.ServiceEntry;
import cz.cuni.mff.been.webinterface.services.ServiceInfo.Status;
${definition}"
      associated_classes
	class_ref 136962 // Service
      end
    end

    artifact 177282 "TaskException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import cz.cuni.mff.been.common.BeenException;
${definition}"
      associated_classes
	class_ref 137346 // TaskException
      end
    end

    artifact 177410 "InvalidServiceStateException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 137986 // InvalidServiceStateException
      end
    end

    artifact 177538 "Job"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 197250 // Job
      end
    end

    artifact 177666 "TaskInitializationException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import cz.cuni.mff.been.common.BeenException;
${definition}"
      associated_classes
	class_ref 137218 // TaskInitializationException
      end
    end

    artifact 181896 "JythonScriptJob"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import org.python.util.PythonInterpreter;
${definition}"
      associated_classes
	class_ref 193800 // JythonScriptJob
      end
      comment " BEEN: Benchmarking Environment
 ==============================

 File author: Jan Tattermusch

 GNU Lesser General Public License Version 2.1
 ---------------------------------------------
 Copyright (C) 2004-2006 Distributed Systems Research Group,
 Faculty of Mathematics and Physics, Charles University in Prague

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License version 2.1, as published by the Free Software Foundation.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 MA  02111-1307  USA"
    end

    artifact 182024 "JythonTaskContext"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.Properties;
import org.apache.log4j.Logger;
import cz.cuni.mff.been.hostruntime.TasksPortInterface;
import cz.cuni.mff.been.jaxb.td.TaskDescriptor;
import cz.cuni.mff.been.logging.LogLevel;
${definition}"
      associated_classes
	class_ref 193928 // JythonTaskContext
      end
    end

    artifact 182152 "ShellScriptJob"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.List;
import cz.cuni.mff.been.common.scripting.ScriptEnvironment;
import cz.cuni.mff.been.common.scripting.ScriptException;
import cz.cuni.mff.been.common.scripting.ScriptLauncher;
import cz.cuni.mff.been.task.Job;
import cz.cuni.mff.been.task.TaskException;
import cz.cuni.mff.been.task.TaskInitializationException;
${definition}"
      associated_classes
	class_ref 194056 // ShellScriptJob
      end
      comment " BEEN: Benchmarking Environment
 ==============================

 File author: Jan Tattermusch

 GNU Lesser General Public License Version 2.1
 ---------------------------------------------
 Copyright (C) 2004-2006 Distributed Systems Research Group,
 Faculty of Mathematics and Physics, Charles University in Prague

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License version 2.1, as published by the Free Software Foundation.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 MA  02111-1307  USA"
    end
  end

  package_ref 134146 // build

  package_ref 134402 // detector

  package_ref 134530 // download

  package_ref 134658 // edit

  package_ref 134914 // example

  package_ref 135298 // execute

  package_ref 135426 // jboss

  package_ref 136066 // jonas

  package_ref 136706 // jythonscript

  package_ref 136834 // mysql

  package_ref 137474 // omniorb

  package_ref 137986 // results

  package_ref 138626 // rubis

  package_ref 139650 // sofa

  package_ref 140034 // svn

  package_ref 140290 // test

  package_ref 140674 // upload

  package_ref 141058 // xampler

  package_ref 136968 // benchmarkmanagerng

  package_ref 137736 // contextmonitor

  package_ref 138120 // willbeen
end
