class SchedulerQueue
!!!231554.java!!!	SchedulerQueue()
			this.list =  new LinkedList<SchedulerEntry>();
!!!231682.java!!!	add(inout entry : SchedulerEntry) : void
			int result = Collections.binarySearch(list,entry);
			int insertPoint = -result-1;
			
			if (insertPoint == 0) {
				list.add(0,entry);
				notify();
				return;
			}
			
			if (insertPoint > 0) {
				/*
				 * entry not found in the list -> add to correct index
				 * no need to call notify() as we are not changing the first entry
				 * which is being wait for
				 */
				list.add(insertPoint,entry);
				return;
			}
			
			/*
			 * result > 0:
			 * 
			 * NOT FIRST entry with the same value found in the list
			 * such values are processed one-by-one once scheduler wakes up
			 * we add new entry before the found one to avoid adding entry behind
			 * the end of the list
			 * 
			 * No need to call notify() because this entry is not first (result > 0)
			 */  
			list.add(result,entry);
!!!231810.java!!!	first() : SchedulerEntry
			return list.get(0);
!!!231938.java!!!	removeFirst() : SchedulerEntry
			SchedulerEntry e = list.get(0);
			list.remove(0);
			notify();
			return e;
!!!232066.java!!!	remove(inout entry : SchedulerEntry) : void
			if (list.isEmpty()) {
				return;
			}
			SchedulerEntry first = first();
			if (list.remove(entry) && first.equals(entry)) {
				notify();
			}
!!!232194.java!!!	isEmpty() : boolean
			return list.isEmpty();
!!!232322.java!!!	waitOnMe() : void
			wait();
!!!232450.java!!!	waitOnMe(in time : long) : void
			wait(time);
!!!232578.java!!!	getAllEntries() : SchedulerEntry
			return new LinkedList<SchedulerEntry>(list);
