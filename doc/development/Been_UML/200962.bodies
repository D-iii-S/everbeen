class MySQLInitialize
!!!643074.java!!!	MySQLInitialize()
		super();
!!!643202.java!!!	run() : void
		mysqlRoot = getTaskProperty(MYSQL_ROOT);
		logInfo("MySQL installation root directory: " + mysqlRoot);

		if (System.getProperty("os.name").toLowerCase().indexOf("linux") != -1) {
			// run a script that initialises MySQL
			Process scriptProcess = null;
			String fSep = File.separator;
			String scriptPath = mysqlRoot + fSep + "scripts" + fSep + "mysql_install_db";
			logDebug("Executing: " + scriptPath);
			try {
				scriptProcess = Runtime.getRuntime().exec(scriptPath, null, new File(mysqlRoot));

				/* Read in the output from the subprocess */
				OutputReader stdoutReader = 
					new OutputReader(scriptProcess.getInputStream(), OutputType.STDOUT);
				OutputReader stderrReader = 
					new OutputReader(scriptProcess.getErrorStream(), OutputType.STDERR);
				stdoutReader.start();
				stderrReader.start();
				// wait until the script finishes
				scriptProcess.waitFor();
			} catch (IOException e) {
				throw new TaskException("MySQL initialization aborted", e);
			} catch (SecurityException e) {
				// Subprocess creation not allowed
				throw new TaskException("Cannot create MySQL initialization process", e);
			} catch (InterruptedException e) {
				throw new TaskException("Output readers interrupted", e);
			} catch (Exception e) {
				throw new TaskException(e);
			}
		}
		if (System.getProperty("os.name").toLowerCase().indexOf("windows") != -1) {
			logInfo("Running in Windows, no post-install initialization required");
		}
!!!643330.java!!!	checkRequiredProperties() : void
		checkRequiredProperty(MYSQL_ROOT);
