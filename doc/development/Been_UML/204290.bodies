class SofaDockRun
!!!660482.java!!!	SofaDockRun()


		super();
!!!660610.java!!!	start() : void

		
		logInfo("Starting SOFA2 Dock");
		
		sofaNodeName = getTaskProperty(SofaCommon.PROPERTY_BEEN_SOFA_DOCK_NAME);
		sofaRegistryPort = SofaCommon.validatePortNumberProperty(SofaCommon.PROPERTY_BEEN_SOFA_REGISTRY_PORT, 
				SofaCommon.DEFAULT_SOFA_REGISTRY_PORT);
		sofaRegistryHost = getTaskProperty(SofaCommon.PROPERTY_BEEN_SOFA_REGISTRY_HOST, "localhost");
		sofaRepositoryHost = getTaskProperty(SofaCommon.PROPERTY_BEEN_SOFA_REPOSITORY_HOST, "localhost");
		sofaRepositoryPort = SofaCommon.validatePortNumberProperty(SofaCommon.PROPERTY_BEEN_SOFA_REPOSITORY_PORT, 
				SofaCommon.DEFAULT_SOFA_REPOSITORY_PORT);
		sofaConManHost = getTaskProperty(SofaCommon.PROPERTY_BEEN_SOFA_CONMAN_HOST, "localhost");
		
		logInfo("Dock name: " + sofaNodeName);
		logInfo("Dock Registry host: " + sofaRegistryHost);
		logInfo("Dock Registry port: " + sofaRegistryPort);
		logInfo("Repository port: " + sofaRepositoryPort);
		logInfo("Connection Manager host: " + sofaConManHost);
		
		System.setProperty("connector.gcm.rmihost", sofaConManHost);
		System.setProperty("java.rmi.server.hostname", sofaRegistryHost);
		System.setProperty("sofa.agent.repository.hostname", sofaRepositoryHost);
		System.setProperty("sofa.agent.repository.port", String.valueOf(sofaRepositoryPort));
		System.setProperty("sofa.agent.repository.context", SofaCommon.DEFAULT_SOFA_REPOSITORY_CONTEXT);
		
		setLogLevel(LogLevel.ALL);
		
		try {
			// Again, replace system security manager...
			System.setSecurityManager(new SSM());
			
			dock = new DeploymentDockImpl(sofaNodeName, sofaRegistryHost, String.valueOf(sofaRegistryPort), getLogger());
			
			System.setSecurityManager(null);
		} catch (SOFAException e) {
			throw new TaskException("Unable to start dock", e);
		} catch (RemoteException e) {
			throw new TaskException("Unable to start dock", e);
		} catch (Exception e) {
			throw new TaskException("Error starting dock: " + e.getMessage(), e);
		}
		
		logInfo("Deployment dock started successfully");
		
		checkPointReached(CHECKPOINT_DOCK_STARTED, sofaNodeName);
!!!660738.java!!!	getName() : String

		
		return SERVICE_NAME;
!!!660866.java!!!	stop() : void

		
		try {
			logInfo("Unregistering dock from the registry");
			dock.unregister();
			logInfo("Dock unregistered successfully");
		} catch (RemoteException e) {
			// This is a problem, but not big one - dock will be removed automatically when an attempt to contact
			// if fails...
			logError("Unable to unregister dock from the registry");
		}
