class LoadMapTest
!!!856962.java!!!	setUp() : void
		
		entries = new LoadMapFile.FileEntry[10];
		
		for (int i = 0; i < entries.length; ++i) {
			entries[i] = new LoadMapFile.FileEntry(i, 5 * i, LoadMonitorEvent.EventType.MONITOR_HW_DESCRIPTION);
		}
!!!857090.java!!!	testDeleteFilesStart() : void
	
		MiscUtils.removeFile(MAP1_FILE);
		MiscUtils.removeFile(MAP2_FILE);
!!!857218.java!!!	testWriteAllSingle() : void
		
		System.out.println(MAP1_FILE);
		
		LoadMapFile loadMap = new LoadMapFile(MAP1_FILE, true);
		
		for (int i = 0; i < entries.length; ++i) {
			loadMap.append(entries[i]);
		}
		
		loadMap.close();
!!!857346.java!!!	testReadAllSingle() : void
		
		LoadMapFile loadMap = new LoadMapFile(MAP1_FILE, false);
		
		int count = loadMap.getCount();
		
		for (int i = 0; i < count; ++i) {
			LoadMapFile.FileEntry entry = loadMap.readFrom(i);
			assertEquals(entries[i], entry);
		}
		
		loadMap.close();
!!!857474.java!!!	testWriteAllMulti() : void
		
		LoadMapFile loadMap = new LoadMapFile(MAP2_FILE, true);
		
		loadMap.append(entries);
		
		loadMap.close();
!!!857602.java!!!	testReadAllMulti() : void
		
		LoadMapFile loadMap = new LoadMapFile(MAP2_FILE, false);
		
		int count = loadMap.getCount();
		
		List< LoadMapFile.FileEntry > res = loadMap.readFrom(0, count);
		
		for (int i = 0; i < res.size(); ++i) {
			assertEquals(entries[i], res.get(i));
		}
		
		loadMap.close();
!!!857730.java!!!	testReadAllSeek() : void
		
		LoadMapFile loadMap = new LoadMapFile(MAP1_FILE, false);
		
		int count = loadMap.getCount();
		int from = count / 2;
		
		List< LoadMapFile.FileEntry > res = loadMap.readFrom(from, count - from);
		
		assertEquals(count - from, res.size());
		
		for (int i = from, j = 0; i < count; ++i, ++j) {
			assertEquals(entries[i], res.get(j));
		}
		
		loadMap.close();
!!!857858.java!!!	testDeleteFilesEnd() : void
		
		MiscUtils.removeFile(MAP1_FILE);
		MiscUtils.removeFile(MAP2_FILE);
