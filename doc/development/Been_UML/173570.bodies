class GroupsBasic
!!!391682.java!!!	main(in args : String) : void

		String managerURL = MANAGER_URL_DEFAULT;
		
		/* set path to the manager from the commandline.
		 */
		if (args.length > 0) {
			managerURL = args[0];
		}
		
		/* Connect to the Host Manager
		 */
		HostManagerInterface manager = null;
		
		try {
			manager = (HostManagerInterface) Naming.lookup("rmi://" + managerURL + INTERFACE_URL);
		} catch (Exception e) {
			System.err.println("Unable to connect to the Host Manager.");
			System.err.println("Error message: " + e.getMessage());
			return;
		}

		/* Output all hosts in all groups.
		 */
		System.out.println();
		System.out.println("Number of groups in database: " + manager.getGroupCount());
		System.out.println();
		
		/* Walk through all of the groups in database and write members to the output.
		 */
		String []groups = manager.getGroupNames();
		
		for (String cur: groups) {
			
			try {
				System.out.println(manager.getGroup(cur));
			} catch (Exception e) {
				System.out.println("Unable to find group " + cur);
			}
		}
		
		System.out.println();
		
		/* How to modify group:
		 *  1. Retrieve group from the Host Manager
		 *  2. Change group (in this case, remove one host)
		 *  3. Update group in the database.
		 */
		do {
			/* Get group from HM.
			 */
			HostGroup compilers = null;
			
			try {
				compilers = manager.getGroup("compilers");
			} catch (Exception e) {
				System.err.println("Unable to find compilers group.");
				break;
			}
		
			/* Remove first host from the group.
			 */
			compilers.removeHost(compilers.iterator().next());
			
			/* Update group in the database.
			 */
			try {
				manager.updateGroup(compilers);
			} catch (Exception e) {
				System.err.println("Unable to update group.");
				System.err.println("Error message: " + e.getMessage());
				break;
			}			
				
			/* Write members of the group in the DB to see it has changed.
			 */
			System.out.println("\"compilers\" group after modification:");
			System.out.println("Metadata: " + compilers.getMetadata());
			System.out.println(compilers);
			System.out.println();				
		} while (false); // so we loop only once, this is "hack" so we can use break in the exception handlers
		
		// Rename "compilers" group to "dev"
		try {
			manager.renameGroup("compilers", "dev");
		} catch (Exception e) {
			System.err.println("Unable to rename group.");
			System.err.println("Error message: " + e.getMessage());
		}
		
		/* Now we try to modify default group.
		 * Only metadata will change in database.
		 */
		do {
			/* Get default group from HM.
			 */
			HostGroup allHosts = null;
			
			try {
				allHosts = manager.getGroup(HostGroup.DEFAULT_GROUP_NAME);
			} catch (Exception e) {
				System.err.println("Unable to query default group.");
				break;
			}
			
			System.out.println("\"All hosts\" group before modification:");
			System.out.println("Metadata: " + allHosts.getMetadata());
			System.out.println("Default: " + allHosts.isDefaultGroup());
			System.out.println(allHosts);
			System.out.println();
			
			/* Remove first host from the group.
			 */
			allHosts.removeHost(allHosts.iterator().next());
			
			/* Change metadata.
			 */
			allHosts.setMetadata("This is modified.");
			
			/* Update group.
			 */
			try {
				manager.updateGroup(allHosts);
			} catch (Exception e) {
				System.err.println("Unable to update default group.");
				System.err.println("Error message: " + e.getMessage());
				break;
			}
			
			/* Write similar info as before.
			 */
			try {
				allHosts = manager.getGroup(HostGroup.DEFAULT_GROUP_NAME);
			} catch (Exception e) {
				System.err.println("Unable to query default group 2.");
				break;
			}

			System.out.println("\"All hosts\" group after modification:");
			System.out.println("Metadata: " + allHosts.getMetadata());
			System.out.println(allHosts);
			System.out.println();
		} while (false); // again...
