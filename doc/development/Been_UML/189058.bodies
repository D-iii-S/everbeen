class BinaryImplementation
!!!520962.java!!!	BinaryImplementation(inout aid : AID, inout eid : EID)
		
		super();
		
		ExperimentEntityManager.getInstance().ensureValidEid(aid, eid); 
		
		this.aid = aid;
		this.eid = eid;
		
		binaryEntityManager = database.getBinaryEntityManager();
!!!521090.java!!!	getEntity(inout id : BID) : Entity
		return binaryEntityManager.getBinary(aid, eid, id); 
!!!521218.java!!!	setEntityComment(inout id : BID, in comment : String) : void
		binaryEntityManager.setBinaryComment(aid, eid, id, comment);		
!!!521346.java!!!	getEntities() : Entity
		return binaryEntityManager.getBinariesInExperiment(aid, eid);
!!!521474.java!!!	getSubentityInterface(inout id : BID) : EntityInterface
		return new RunImplementation(aid, eid, id);
!!!521602.java!!!	getExportFormats() : DataFormat
		return exporter.getBinaryExportFormats();
!!!521730.java!!!	beginExport(inout ids : BID, in formatId : String, inout ip : InetAddress, in port : int) : DownloadHandle
		return exporter.beginBinariesExport(aid, eid, ids, formatId, ip, port);
!!!521858.java!!!	getImportFormats() : DataFormat
		return importer.getBinaryImportFormats();
!!!521986.java!!!	beginImport(in formatId : String, inout ip : InetAddress, in port : int) : UploadHandle
		
		return importer.beginBinariesImport(formatId, ip, port);
!!!522114.java!!!	deleteEntity(inout id : BID) : void
		binaryEntityManager.eraseBinary(aid, eid, id);
!!!522242.java!!!	graphCount(inout graphType : GraphType, inout id : BID) : int

		if (graphType == GraphType.LOAD) {
  			throw new UnsupportedOperationException(LOAD_FOR_RUNS_ONLY);
  		}

		throw new UnsupportedOperationException(NO_BINARY_GRAPHS);
!!!522370.java!!!	getGraphInfo(inout graphType : GraphType, inout id : BID, in index : int) : GraphInfo
	  
		if (graphType == GraphType.LOAD) {
  			throw new UnsupportedOperationException(LOAD_FOR_RUNS_ONLY);
  		}
		throw new UnsupportedOperationException(NO_BINARY_GRAPHS);
!!!522498.java!!!	beginGraphDownload(inout graphType : GraphType, inout id : BID, inout ip : InetAddress, in port : int, in index : int) : DownloadHandle
		
  		if (graphType == GraphType.LOAD) {
  			throw new UnsupportedOperationException(LOAD_FOR_RUNS_ONLY);
  		}
		
		throw new UnsupportedOperationException(NO_BINARY_GRAPHS);
!!!522626.java!!!	getGraphDownloadStatus(inout handle : DownloadHandle) : DownloadStatus
		throw new UnsupportedOperationException(NO_BINARY_GRAPHS);
!!!522754.java!!!	endGraphDownload(inout handle : DownloadHandle) : void
		
		throw new UnsupportedOperationException(NO_BINARY_GRAPHS);
!!!522882.java!!!	beginRawDataDownload(inout id : BID, inout ip : InetAddress, in port : int) : DownloadHandle
		throw new UnsupportedOperationException(RAW_DATA_FOR_RUNS_ONLY);
!!!523010.java!!!	endRawDataDownload(inout handle : DownloadHandle) : void
		throw new UnsupportedOperationException(RAW_DATA_FOR_RUNS_ONLY);
!!!523138.java!!!	getRawDataDownloadStatus(inout handle : DownloadHandle) : DownloadStatus
		throw new UnsupportedOperationException(RAW_DATA_FOR_RUNS_ONLY);
!!!523266.java!!!	getContext(inout id : BID) : String
		return binaryEntityManager.getContext(aid, eid, id);
!!!523394.java!!!	getTasks(inout id : BID) : String
		TaskListManager taskListManagerInstance = TaskListManager.getInstance();
		
		synchronized (LockManager.taskListLock) {
			taskListManagerInstance.loadBinaryTaskList(aid, eid, id);
			return taskListManagerInstance.getBinaryTaskList();
		}
!!!523522.java!!!	getLogsForTask(inout id : BID, in taskID : String) : LogRecord
		
	    String contextId = binaryEntityManager.getContext(aid, eid, id);
	    
	    if (!database.getLogStorage().isTaskRegistered(contextId, taskID)) {
		return new LogRecord[] {};
	    }
	    
	    return database.getLogStorage().getLogsForTask(contextId, taskID); 
