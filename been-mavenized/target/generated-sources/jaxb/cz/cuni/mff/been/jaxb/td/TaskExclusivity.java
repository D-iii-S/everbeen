//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.07.24 at 02:35:39 PM CEST 
//


package cz.cuni.mff.been.jaxb.td;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ExclusiveString.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ExclusiveString">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="non-exclusive"/>
 *     &lt;enumeration value="context-exclusive"/>
 *     &lt;enumeration value="exclusive"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ExclusiveString")
@XmlEnum
public enum TaskExclusivity {

    @XmlEnumValue("non-exclusive")
    NON_EXCLUSIVE("non-exclusive"),
    @XmlEnumValue("context-exclusive")
    CONTEXT_EXCLUSIVE("context-exclusive"),
    @XmlEnumValue("exclusive")
    EXCLUSIVE("exclusive");
    private final String value;

    TaskExclusivity(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TaskExclusivity fromValue(String v) {
        for (TaskExclusivity c: TaskExclusivity.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
