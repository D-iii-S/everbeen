//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.07.24 at 02:35:39 PM CEST 
//


package cz.cuni.mff.been.jaxb.td;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlType;
import cz.cuni.mff.been.jaxb.AbstractSerializable;


/**
 * <p>Java class for Logical complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Logical">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;group ref="{http://been.mff.cuni.cz/taskmanager/td}LogicalGroup" maxOccurs="unbounded"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Logical", propOrder = {
    "operand"
})
public class Logical
    extends AbstractSerializable
    implements Serializable
{

    private final static long serialVersionUID = -9223372036854775808L;
    @XmlElementRefs({
        @XmlElementRef(name = "le", namespace = "http://been.mff.cuni.cz/taskmanager/td", type = JAXBElement.class),
        @XmlElementRef(name = "ne", namespace = "http://been.mff.cuni.cz/taskmanager/td", type = JAXBElement.class),
        @XmlElementRef(name = "eq", namespace = "http://been.mff.cuni.cz/taskmanager/td", type = JAXBElement.class),
        @XmlElementRef(name = "true", namespace = "http://been.mff.cuni.cz/taskmanager/td", type = JAXBElement.class),
        @XmlElementRef(name = "null", namespace = "http://been.mff.cuni.cz/taskmanager/td", type = JAXBElement.class),
        @XmlElementRef(name = "gt", namespace = "http://been.mff.cuni.cz/taskmanager/td", type = JAXBElement.class),
        @XmlElementRef(name = "lt", namespace = "http://been.mff.cuni.cz/taskmanager/td", type = JAXBElement.class),
        @XmlElementRef(name = "and", namespace = "http://been.mff.cuni.cz/taskmanager/td", type = JAXBElement.class),
        @XmlElementRef(name = "ge", namespace = "http://been.mff.cuni.cz/taskmanager/td", type = JAXBElement.class),
        @XmlElementRef(name = "or", namespace = "http://been.mff.cuni.cz/taskmanager/td", type = JAXBElement.class)
    })
    protected List<JAXBElement<? extends AbstractSerializable>> operand;

    /**
     * Gets the value of the operand property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the operand property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOperand().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link Compare }{@code >}
     * {@link JAXBElement }{@code <}{@link Compare }{@code >}
     * {@link JAXBElement }{@code <}{@link True }{@code >}
     * {@link JAXBElement }{@code <}{@link Compare }{@code >}
     * {@link JAXBElement }{@code <}{@link NullCompare }{@code >}
     * {@link JAXBElement }{@code <}{@link Compare }{@code >}
     * {@link JAXBElement }{@code <}{@link Compare }{@code >}
     * {@link JAXBElement }{@code <}{@link Logical }{@code >}
     * {@link JAXBElement }{@code <}{@link Compare }{@code >}
     * {@link JAXBElement }{@code <}{@link Logical }{@code >}
     * 
     * 
     */
    public List<JAXBElement<? extends AbstractSerializable>> getOperand() {
        if (operand == null) {
            operand = new ArrayList<JAXBElement<? extends AbstractSerializable>>();
        }
        return this.operand;
    }

    public boolean isSetOperand() {
        return ((this.operand!= null)&&(!this.operand.isEmpty()));
    }

    public void unsetOperand() {
        this.operand = null;
    }

}
